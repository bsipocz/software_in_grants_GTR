<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/84F65808-C65E-4A6F-BA9D-7B002697DA66"><gtr:id>84F65808-C65E-4A6F-BA9D-7B002697DA66</gtr:id><gtr:firstName>Luke</gtr:firstName><gtr:surname>Ong</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FF036361%2F1"><gtr:id>D599F652-E2F6-4C5A-A942-70CFC9AA065F</gtr:id><gtr:title>Game semantics, recursion schemes and collapsible pushdown automata: a new approach to the algorithmics of infinite structures</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/F036361/1</gtr:grantReference><gtr:abstractText>Despite considerable progress over the past decade, the computer-aided verification of software remains a hugely challenging problem. There are two main reasons. First, programs are infinite-state systems, but verification tools of industrial scale are essentially finite-state technologies. Secondly, modern programs -- in which unbounded data types, complex memory operations, non-local control flow, higher-order constructs, and name bindings of various kinds etc. are key features -- can only be accurately modelled using highly-structured mathematical models, as studied in semantics. Relatively little is known about the algorithmic properties of such rich, often higher-order'', mathematical structures.This project concerns an approach to software verification by developing automatic techniques which deal directly with infinite-state systems that are highly accurate models of programs. Striking examples of such infinite-state models are fully abstract game semantics of higher-order procedural programs; these models can be represented as (variant classes of higher-order) pushdown automata. In recent years, there have been remarkable advances in the study of algorithmic properties of hierarchies of generically-defined infinite structures. A notable result is that ranked trees that are generated by higher-order recursion schemes have decidable monadic second-order theories (Ong LICS'06). Further there is a new variant hierarchy of higher-order pushdown automata, called collapsible pushdown automata, that are equi-expressive with higher-order recursion schemes (in the sense that they generate the same class of trees), subsuming well-known structures at low orders: trees at order 0 and 1 are respectively the regular (Rabin 1969) and algebraic (Courcelle 1995) trees. The discovery of this rich, unifying and robust hierarchy of trees with excellent model-checking properties sparked the present research proposal.We have two general goals: - First we plan to study the connexions between the two closely-related higher-order families of generators (i.e. recursion schemes and collapsible pushdown automata), to explore the logical-algorithmic theory of infinite structures generated by them, and to derive (local and global) model checking algorithms. - Secondly we aim to develop verification techniques and construct efficient implementations of symbolic model-chekcers of reachability and temporal logics for these infinite structures of low orders. Why is it important to pursue these goals?- First, these hierarchies of infinite structures lie at the very frontier of infinite-state verification. The family of ranked trees thus generated is, to date, the largest generically-defined family of trees known to have decidable monadic second-order (MSO) theories; the family of transition graphs thus generated (does not have decidable MSO theories but) is, to date, the largest that is known to have decidable modal mu-calculus theories. These are significant indicators of our understanding of the subject, as MSO logic is the gold standard of languages for describing model-checking properties in computer-aided verification. - Secondly, these hierarchies of infinite structures are (representations of) highly accurate models of computation for higher-order procedural programs (such as OCAML, Haskell and F#). Recent results in (algorithmic) game semantics have shown that they underpin the computer-aided verification of these programs, an important and challenging direction for the next generation of software model checkers.</gtr:abstractText><gtr:fund><gtr:end>2013-04-14</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2008-07-15</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>522778</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs><gtr:furtherFundingOutput><gtr:amountPounds>431107</gtr:amountPounds><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:currCode>GBP</gtr:currCode><gtr:currCountryCode>United Kingdom</gtr:currCountryCode><gtr:currLang>en_GB</gtr:currLang><gtr:description>EPSRC Platform Grant: Centre for Metacomputation</gtr:description><gtr:end>2010-02-02</gtr:end><gtr:fundingOrg>Engineering and Physical Sciences Research Council (EPSRC)</gtr:fundingOrg><gtr:fundingRef>EP/D037085</gtr:fundingRef><gtr:id>EAB0D92C-E024-4E87-A932-769A9A847092</gtr:id><gtr:outcomeId>56e0a98dd759b9.35736686</gtr:outcomeId><gtr:sector>Academic/University</gtr:sector><gtr:start>2006-03-01</gtr:start></gtr:furtherFundingOutput><gtr:furtherFundingOutput><gtr:amountPounds>66000</gtr:amountPounds><gtr:country>United States of America</gtr:country><gtr:currCode>GBP</gtr:currCode><gtr:currCountryCode>United Kingdom</gtr:currCountryCode><gtr:currLang>en_GB</gtr:currLang><gtr:description>Microsoft PhD Scholarship: Verifying Properties of the ML Family of Languages</gtr:description><gtr:fundingOrg>PMG Research</gtr:fundingOrg><gtr:id>84E8A8A5-F6F4-40E4-B018-FA9A88E8AA2D</gtr:id><gtr:outcomeId>56e0aa991787a8.06157497</gtr:outcomeId><gtr:sector>Private</gtr:sector></gtr:furtherFundingOutput><gtr:furtherFundingOutput><gtr:amountPounds>1000000</gtr:amountPounds><gtr:country>United States of America</gtr:country><gtr:currCode>USD</gtr:currCode><gtr:currCountryCode>Ecuador</gtr:currCountryCode><gtr:currLang>es_EC</gtr:currLang><gtr:description>Validation of Firmware</gtr:description><gtr:fundingOrg>Intel Corporation</gtr:fundingOrg><gtr:id>08B27834-783A-47CB-8134-956954484700</gtr:id><gtr:outcomeId>56e0ab1c9f3b34.61103806</gtr:outcomeId><gtr:sector>Private</gtr:sector></gtr:furtherFundingOutput><gtr:furtherFundingOutput><gtr:amountPounds>72600</gtr:amountPounds><gtr:country>Japan</gtr:country><gtr:currCode>GBP</gtr:currCode><gtr:currCountryCode>United Kingdom</gtr:currCountryCode><gtr:currLang>en_GB</gtr:currLang><gtr:description>JSPS Postdoctoral Fellowship for Research Abroard</gtr:description><gtr:end>2015-09-02</gtr:end><gtr:fundingOrg>Japan Society for the Promotion of Science (JSPS)</gtr:fundingOrg><gtr:id>C92EC330-AFEC-4492-AC8C-43452C8716EA</gtr:id><gtr:outcomeId>56e0ae978b2b97.66309368</gtr:outcomeId><gtr:sector>Learned Society</gtr:sector><gtr:start>2013-10-01</gtr:start></gtr:furtherFundingOutput><gtr:furtherFundingOutput><gtr:amountPounds>20522</gtr:amountPounds><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:currCode>GBP</gtr:currCode><gtr:currCountryCode>United Kingdom</gtr:currCountryCode><gtr:currLang>en_GB</gtr:currLang><gtr:description>Impact Acceleration Account Award</gtr:description><gtr:end>2014-10-02</gtr:end><gtr:fundingOrg>Engineering and Physical Sciences Research Council (EPSRC)</gtr:fundingOrg><gtr:fundingRef>EP/K503769/1</gtr:fundingRef><gtr:id>09A36310-C8A9-421B-8FF3-B086CF8767BA</gtr:id><gtr:outcomeId>56e0abb9682f88.41432321</gtr:outcomeId><gtr:sector>Academic/University</gtr:sector><gtr:start>2014-05-01</gtr:start></gtr:furtherFundingOutput></gtr:furtherFundingOutputs><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>We developed a fixed-parameter polynomial time higher-order model checking algorithm, based on a novel, type-directed form of abstraction refinement. The algorithm and tool, PREFACE, readily scale to recursion schemes of several thousand rules, well beyond the capabilities of current state-of-the-art higher-order model checkers.</gtr:description><gtr:firstYearOfImpact>2014</gtr:firstYearOfImpact><gtr:id>1ECE1038-71E7-4703-BE50-AB6AB0DC652D</gtr:id><gtr:impactTypes><gtr:impactType>Societal</gtr:impactType></gtr:impactTypes><gtr:outcomeId>56e0b95978e9f0.31044376</gtr:outcomeId><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>We developed and constructed a prototype implementation of a fixed-parameter polynomial time higher-order model checking algorithm, called PREFACE, based on a novel, type-directed form of abstraction refinement. PREFACE readily scales to recursion schemes of several thousand rules, well beyond the capabilities of current state-of-the-art higher-order model checkers.</gtr:description><gtr:exploitationPathways>The next step is to integrate PREFACE as a key component of a verification tool chain.</gtr:exploitationPathways><gtr:id>6BA94F95-5F5A-4713-B69B-3F230EDC3128</gtr:id><gtr:outcomeId>56e0bcdc5c76d6.28768213</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs><gtr:researchMaterialOutput><gtr:description>An implementation of an observational equivalence model checker for Reynold's Idealized Algol using game semantics by reduction to the equivalence of visibly pushdown automata.</gtr:description><gtr:id>B63562E9-2F4C-4ED9-881C-6D018C567294</gtr:id><gtr:impact>First observational equivalence model checker for functional programs.</gtr:impact><gtr:outcomeId>56e0b87c793257.68055791</gtr:outcomeId><gtr:providedToOthers>true</gtr:providedToOthers><gtr:title>HOMER</gtr:title><gtr:type>Improvements to research infrastructure</gtr:type><gtr:yearFirstProvided>2009</gtr:yearFirstProvided></gtr:researchMaterialOutput><gtr:researchMaterialOutput><gtr:description>A prototype implementation of a higher-order model checking algorithm based on the fully abstract game semantics of recursion schemes, but specified as a goal-directed approach to intersection type inference. See http://mjolnir.cs.ox.ac.uk/web/ for the tool HORSC, and the extension to alternating parity tree automata, TravMC2.</gtr:description><gtr:id>021B538E-117C-4C15-B45C-DDF56526F589</gtr:id><gtr:impact>Higher-order model checker for liveness properties</gtr:impact><gtr:outcomeId>56e0b84572bb71.13612428</gtr:outcomeId><gtr:providedToOthers>true</gtr:providedToOthers><gtr:title>TravMC</gtr:title><gtr:type>Improvements to research infrastructure</gtr:type><gtr:url>http://mjolnir.cs.ox.ac.uk/web/</gtr:url><gtr:yearFirstProvided>2014</gtr:yearFirstProvided></gtr:researchMaterialOutput><gtr:researchMaterialOutput><gtr:description>A tool that verifies coverability properties of (a substantial fragment of) Erlang by first performing an abstract interpretation, followed by Petri Net model checking as a back-end implemented by the BFC tool. Web interface: http://mjolnir.cs.ox.ac.uk/soter/</gtr:description><gtr:id>E0B9DF1E-41B3-4A5F-8DD4-A4988AC8D7C7</gtr:id><gtr:impact>First infinite-state model checker for Erlang programs</gtr:impact><gtr:outcomeId>56e0b7ee14a4a1.45320784</gtr:outcomeId><gtr:providedToOthers>true</gtr:providedToOthers><gtr:title>Soter</gtr:title><gtr:type>Improvements to research infrastructure</gtr:type><gtr:url>http://mjolnir.cs.ox.ac.uk/soter/</gtr:url><gtr:yearFirstProvided>2013</gtr:yearFirstProvided></gtr:researchMaterialOutput><gtr:researchMaterialOutput><gtr:description>Hector (with David Hopkins and Andrzej Murawski, ICALP 2011 and CAV 2012): This is an implementation of an algorithm that decides observational equivalence of a fragment of RML-a canonical restriction of Standard ML to ground-type references-by reduction to the equivalence of visibly pushdown automata.</gtr:description><gtr:id>8A66E359-F40D-4147-B9E4-821D0A5052EB</gtr:id><gtr:impact>First observational equivalence model checker for Call-by-value programs</gtr:impact><gtr:outcomeId>56e0b8b78cd2e6.38319219</gtr:outcomeId><gtr:providedToOthers>true</gtr:providedToOthers><gtr:title>Hector</gtr:title><gtr:type>Improvements to research infrastructure</gtr:type><gtr:yearFirstProvided>2011</gtr:yearFirstProvided></gtr:researchMaterialOutput><gtr:researchMaterialOutput><gtr:description>A prototype implementation of a fixed-parameter polynomial time higher-order model checking algorithm, based on a novel, type-directed form of abstraction refinement. Preface readily scales to recursion schemes of several thousand rules, well beyond the capabilities of current state-of-the-art higher-order model checkers. Web interface: http://mjolnir.cs.ox.ac.uk/web/preface/</gtr:description><gtr:id>CDFEC20C-2BDE-4BD8-8E95-5C364EE2856D</gtr:id><gtr:impact>State-of-the-art tool for higher-order model checkingA prototype implementation of a fixed-parameter polynomial time higher-order model checking algorithm, based on a novel, type-directed form of abstraction refine- ment. Preface readily scales to recursion schemes of several thousand rules, well beyond the capabilities of current state-of-the-art higher-order model checkers. Web interface: http://mjolnir.cs.ox.ac.uk/web/preface/</gtr:impact><gtr:outcomeId>56e0b79c2a0817.90130396</gtr:outcomeId><gtr:providedToOthers>true</gtr:providedToOthers><gtr:title>PREFACE</gtr:title><gtr:type>Improvements to research infrastructure</gtr:type><gtr:url>http://mjolnir.cs.ox.ac.uk/web/preface/</gtr:url><gtr:yearFirstProvided>2014</gtr:yearFirstProvided></gtr:researchMaterialOutput></gtr:researchMaterialOutputs><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>64781109-5A29-437D-81EB-BC90CCDFD066</gtr:id><gtr:title>A saturation method for the modal ?-calculus over pushdown systems</gtr:title><gtr:parentPublicationTitle>Information and Computation</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/63d8a16bab9938c67b533027115c71c0"><gtr:id>63d8a16bab9938c67b533027115c71c0</gtr:id><gtr:otherNames>Hague M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2011-01-01</gtr:date><gtr:outcomeId>56e05daedda8f6.38866775</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>D3260555-3D42-47E9-AF3E-4B0E2C1F633C</gtr:id><gtr:title>Programming Languages and Systems</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/6b1e46b41ef7debd2e6204003cd95d63"><gtr:id>6b1e46b41ef7debd2e6204003cd95d63</gtr:id><gtr:otherNames>Ong C</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2008-01-01</gtr:date><gtr:isbn>978-3-540-78738-9</gtr:isbn><gtr:outcomeId>56e05dac407b91.85417271</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>BFD61D59-06E5-4B7B-99BD-5FBEEAE147AD</gtr:id><gtr:title>A Type System Equivalent to the Modal Mu-Calculus Model Checking of Higher-Order Recursion Schemes</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/a96a792cc85f40a1a3a9af45e9e45431"><gtr:id>a96a792cc85f40a1a3a9af45e9e45431</gtr:id><gtr:otherNames>Kobayashi N</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2009-01-01</gtr:date><gtr:isbn>978-0-7695-3746-7</gtr:isbn><gtr:outcomeId>56e05dac6b21c5.98651395</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>9B6B5DC1-4748-4C63-9B56-9C8396ED0FB7</gtr:id><gtr:title>Nondeterminism in Game Semantics via Sheaves</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/c493f127a788df6a02e0d36de362ace5"><gtr:id>c493f127a788df6a02e0d36de362ace5</gtr:id><gtr:otherNames>Tsukada T</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>56e05db1aad773.00091332</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>9B3B0B3F-C3BD-464D-B36A-BD7ED04CBABD</gtr:id><gtr:title>Models of Higher-Order Computation: Recursion Schemes and Collapsible
 Pushdown Automata</gtr:title><gtr:parentPublicationTitle>Logics and Languages for Reliability and Security</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/6b1e46b41ef7debd2e6204003cd95d63"><gtr:id>6b1e46b41ef7debd2e6204003cd95d63</gtr:id><gtr:otherNames>Ong C</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:outcomeId>56e05dadd82cd7.66050037</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>F24C50F3-B27C-4B7D-8F1D-00033DC5BE78</gtr:id><gtr:title>Complexity of Model Checking Recursion Schemes for Fragments of the Modal Mu-Calculus</gtr:title><gtr:parentPublicationTitle>Logical Methods in Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/a96a792cc85f40a1a3a9af45e9e45431"><gtr:id>a96a792cc85f40a1a3a9af45e9e45431</gtr:id><gtr:otherNames>Kobayashi N</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:outcomeId>56e05daec32139.11540235</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>AA169528-182D-4D00-BE5B-8612F509C722</gtr:id><gtr:title>Winning Regions of Higher-Order Pushdown Games</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/4ee86376823993da931fef5cf4f5820b"><gtr:id>4ee86376823993da931fef5cf4f5820b</gtr:id><gtr:otherNames>Carayol A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2008-01-01</gtr:date><gtr:isbn>978-0-7695-3183-0</gtr:isbn><gtr:outcomeId>56e05dac1f2dd2.70162857</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>6C8FEA45-504F-44EA-BD1E-87CBD93BE547</gtr:id><gtr:title>Collapsible Pushdown Automata and Recursion Schemes</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/63d8a16bab9938c67b533027115c71c0"><gtr:id>63d8a16bab9938c67b533027115c71c0</gtr:id><gtr:otherNames>Hague M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2008-01-01</gtr:date><gtr:isbn>978-0-7695-3183-0</gtr:isbn><gtr:outcomeId>56e05daaeabf20.25802534</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>88B6D08D-E8A3-4A19-9889-DD583C9201F2</gtr:id><gtr:title>The Safe Lambda Calculus</gtr:title><gtr:parentPublicationTitle>Logical Methods in Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/fef170cff54aecd0ec716fde0e895c3b"><gtr:id>fef170cff54aecd0ec716fde0e895c3b</gtr:id><gtr:otherNames>Blum W</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2009-01-01</gtr:date><gtr:outcomeId>56e05dad4559e3.44521566</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>460E98B8-0E3F-40E7-B39B-EF5D4A0360F3</gtr:id><gtr:title>Functional Reachability</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/6b1e46b41ef7debd2e6204003cd95d63"><gtr:id>6b1e46b41ef7debd2e6204003cd95d63</gtr:id><gtr:otherNames>Ong C</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2009-01-01</gtr:date><gtr:isbn>978-0-7695-3746-7</gtr:isbn><gtr:outcomeId>56e05dac964e88.23884308</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>04F0191D-435E-4748-B744-9EA5D489158B</gtr:id><gtr:title>Symbolic Backwards-Reachability Analysis for Higher-Order Pushdown Systems</gtr:title><gtr:parentPublicationTitle>Logical Methods in Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/63d8a16bab9938c67b533027115c71c0"><gtr:id>63d8a16bab9938c67b533027115c71c0</gtr:id><gtr:otherNames>Hague M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2008-01-01</gtr:date><gtr:outcomeId>56e05dabf11c33.22115863</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>725C9A9D-EE31-4C4C-BCAB-F2CBE47D01EF</gtr:id><gtr:title>Recursion Schemes and Logical Reflection</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/d6976bee97f8c079fd3b31883558502f"><gtr:id>d6976bee97f8c079fd3b31883558502f</gtr:id><gtr:otherNames>Broadbent C</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:isbn>978-1-4244-7588-9</gtr:isbn><gtr:outcomeId>56e05dae60df75.52192966</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>DDBC255B-C390-4891-90CD-ADBC5A017051</gtr:id><gtr:title>Improved Functional Flow and Reachability Analyses Using Indexed Linear
 Tree Grammars</gtr:title><gtr:parentPublicationTitle>Proceedings of the 22nd International Conference on Rewriting Techniques
               and Applications, RTA 2011, May 30 - June 1, 2011, Novi Sad, Serbia</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/384ae66ef43992ce1b7dd07c63f2a7ce"><gtr:id>384ae66ef43992ce1b7dd07c63f2a7ce</gtr:id><gtr:otherNames>Kochems J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2011-01-01</gtr:date><gtr:outcomeId>56e05dae1ae244.67908119</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>91A4FE6F-5B69-4714-9E49-8EB89179F9DB</gtr:id><gtr:title>Information Flow Analysis for a Dynamically Typed Language with Staged Metaprogramming</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/4953e7fdd8177fc47c400de2633f0cce"><gtr:id>4953e7fdd8177fc47c400de2633f0cce</gtr:id><gtr:otherNames>Lester M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:outcomeId>56e05dafbe7b89.99349070</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/F036361/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>