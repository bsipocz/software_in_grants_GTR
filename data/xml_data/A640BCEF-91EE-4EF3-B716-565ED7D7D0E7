<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/83D87776-5958-42AE-889D-B8AECF16B468"><gtr:id>83D87776-5958-42AE-889D-B8AECF16B468</gtr:id><gtr:name>University of Leeds</gtr:name><gtr:department>Sch of Computing</gtr:department><gtr:address><gtr:line1>University of Leeds</gtr:line1><gtr:line4>Leeds</gtr:line4><gtr:line5>West Yorkshire</gtr:line5><gtr:postCode>LS2 9JT</gtr:postCode><gtr:region>Yorkshire and The Humber</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/83D87776-5958-42AE-889D-B8AECF16B468"><gtr:id>83D87776-5958-42AE-889D-B8AECF16B468</gtr:id><gtr:name>University of Leeds</gtr:name><gtr:address><gtr:line1>University of Leeds</gtr:line1><gtr:line4>Leeds</gtr:line4><gtr:line5>West Yorkshire</gtr:line5><gtr:postCode>LS2 9JT</gtr:postCode><gtr:region>Yorkshire and The Humber</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/01F96971-E749-474F-B89F-D4EBA94E1E28"><gtr:id>01F96971-E749-474F-B89F-D4EBA94E1E28</gtr:id><gtr:firstName>Olaf</gtr:firstName><gtr:surname>Beyersdorff</gtr:surname><gtr:orcidId>0000-0002-2870-1648</gtr:orcidId><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FL024233%2F1"><gtr:id>A640BCEF-91EE-4EF3-B716-565ED7D7D0E7</gtr:id><gtr:title>Parameterized Proof Complexity</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/L024233/1</gtr:grantReference><gtr:abstractText>Computational complexity studies the possibilities and limitations of efficient computation. Traditionally, a problem has been perceived as tractable if it admits a polynomial-time algorithm; and the class of all such problems forms the complexity class P. Conversely, a problem is hard if it is associated with a complexity class believed to be beyond the realm of tractability like NP. While the P vs NP question is one of the central questions of modern computer science and mathematics (as witnessed by its inclusion as one of the seven Millennium Prize Problems posed by the Clay Mathematics Institute in 2000), we seem to be far from a solution. However, literally thousands of problems of great practical significance from optimisation, artificial intelligence, computational biology, and many further fields are known to be NP-complete. And they desperately need to be solved for practical instances.

Parameterized complexity is one of the main modern approaches that help to understand the precise border between tractability and intractability. While P vs NP colours the world of computational problems into black and white, parameterized complexity exploits additional structure of the problems and reveals a much more detailed picture. It results in algorithmic solutions for many NP-hard problems using the new concept of fixed parameter tractability (FPT). This approach has revolutionised the way we approach intractable problems today; and many classically hard problems become solvable for large classes of relevant instances.

While parameterized complexity has been intensively studied during the last two decades, the concept of parameterization has been only recently transferred to proof complexity by Dantchev, Martin, and Szeider (FOCS 2007). Proof complexity studies the complexity of theorem proving: how difficult is it to construct a proof of a formal statement in a given proof system? What is the length of the shortest proof? These questions have tight relations to central problems in computational complexity and logic. Indeed, proof complexity offers one of the main approaches towards the P vs NP question via Cook's programme.

This project will be a substantial contribution towards the development of the field of parameterized proof complexity. While recent findings have already proved the effectiveness of the approach, much foundational work lies ahead. Similarly as parameterized complexity provides a fine classification of running times, parameterized proof complexity offers a more fine-grained analysis of lengths of proofs. In particular, this results in FPT-size proofs for many formulas that require exponential-size proofs in the classical setting. At the same time, showing lower bounds to the size of proofs becomes much harder: firstly, because there are less candidate formulas for hardness; and secondly, because many classical techniques turn out to be ineffective.

This project will develop new techniques and reassess current techniques in proof complexity and computational complexity for their applicability in parameterized proof complexity. These technical advances will be used to show strong lower bounds for parameterized proof systems where currently no non-trivial lower bounds are known. A particular system of interest is parameterized resolution with an efficient encoding of parameterized axioms.

In addition to its links to complexity and logic, proof complexity is the main theoretical tool to analyse the performance of modern SAT solvers. These are algorithms with very fine-tuned implementations that successfully solve the NP-complete problem of boolean satisfiability (SAT) for large fractions of industrial instances stemming from applications as software verification or model checking. This project will develop new algorithmic approaches to SAT solving inspired by insights from parameterized proof complexity. One particular goal are parameterized algorithms that refine DPLL-based solvers.</gtr:abstractText><gtr:potentialImpactText>The proposed research is in the area of algorithms and complexity, which is a branch of theoretical computer science. The project interfaces with mathematics through logic and combinatorics, and with verification through SAT solving; and the main beneficiaries include researchers in these areas. The wider interest for PI's work is evidenced by invitations the PI receives to give talks at workshops, conferences, and graduate schools in theoretical computer science and logic.

The main thrust of this research is theoretical. It explores the boundary of computational tractability. Given that logical problems addressed in this proposal arise in a wide range of applications, there is a real need for this type of theoretical research to continue advancing at the frontier, even though the research may not immediately have a direct influence at applications. Nonetheless, the goals of the project are focused towards problems rooted in areas where they are of great practical interest. We comment in detail on the specific directions where the proposed research will have impact.

Parameterized complexity is an extremely successful algorithmic paradigm. During the last decade it has lead to numerous refined algorithmic solutions, which are of great importance to the modern technological society. Many classically hard problems arising in diverse areas such as verification, databases, telecommunication, molecular biology, etc. are solved today by parameterized algorithms. By advancing parameterization in theorem proving this project will apply this approach to an important area in the interface of logic and complexity where the effect of parameterization is currently not well understood. Determining the possibilities and limitations of this approach will guide future algorithm design in this field.

SAT solving is an algorithmic success story, which due to the NP-completeness of SAT was by no means anticipated. Nevertheless, modern SAT solvers routinely solve industrial instances from software verification, model checking and planning with even millions of variables. The success of SAT solvers also self-perpetuates by virtue of SAT being NP-complete. Hence rather than devising proprietary algorithms for other NP-complete problems they are encoded into SAT via efficient reductions and then passed to a SAT solver for an algorithmic solution.

Due to its effectiveness in verification and planning, major IT companies as Microsoft and IBM have a tremendous interest in SAT solving and develop their own solvers. These solvers are very fine tuned in implementation and build on latest findings of academic researchers. Research in this project will help to understand the effect of parameterization for SAT solving. This in turn will lead to new insights for proof search and the design of new types of parameterized SAT solving algorithms.

To reach out to a wide audience this project will implement four instrumental impact activities:

1. Invited talks at workshops, conferences, and academic institutions, in which the PI has a very good track record.

2. A survey paper will be written that explains the aims and methods of parameterized proof complexity and its implications for SAT solving to a larger audience of theoreticians and practitioners.

3. A workshop on proof complexity will be organised, affiliated with SAT'2014 and CSL/LICS'2014. SAT is the prime conference for research in Satisfiability, attracting a broad audience of practitioners from industry and researchers from academia.

4. A foundational course on proof complexity and its implications for SAT solving will be delivered at the European Summer School in Logic, Language and Information (ESSLLI) in summer 2015. ESSLLI is a premier venue for complexity, logic and language, and each year attracts up to 500 students and researchers from computer science, mathematics, philosophy, and linguistics.</gtr:potentialImpactText><gtr:fund><gtr:end>2016-11-16</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2014-11-17</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>100012</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs><gtr:disseminationOutput><gtr:description>Organised a Workshop on Proof Complexity</gtr:description><gtr:form>Participation in an activity, workshop or similar</gtr:form><gtr:geographicReach>International</gtr:geographicReach><gtr:id>7B3DCD05-D14D-4D88-A405-A278173A6872</gtr:id><gtr:impact>Workshop 'Proof Complexity' as part of the Vienna Summer of Logic (FLoC), 2014</gtr:impact><gtr:outcomeId>56cf4665231da8.62884470</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Professional Practitioners</gtr:primaryAudience><gtr:year>2014</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>Dagstuhl Seminar 'SAT and Interactions'</gtr:description><gtr:form>Participation in an activity, workshop or similar</gtr:form><gtr:geographicReach>International</gtr:geographicReach><gtr:id>1BE8FA06-9253-4753-9446-64991FC8D577</gtr:id><gtr:impact>A Dagstuhl seminar on 'SAT and Interaction' was organised by Beyersdorff, Creignou, Egly, and Vollmer. It brought together around 40 participants from academia and industry interested in theory and practice of SAT.</gtr:impact><gtr:outcomeId>58b8862842d236.64853855</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Professional Practitioners</gtr:primaryAudience><gtr:url>https://www.dagstuhl.de/en/program/calendar/semhp/?semnr=16381</gtr:url><gtr:year>2006</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>ESSLLI Lecture series on Proof Complexity</gtr:description><gtr:form>Participation in an activity, workshop or similar</gtr:form><gtr:geographicReach>International</gtr:geographicReach><gtr:id>E9F1C1D6-5766-422C-9C69-2A068EA2796B</gtr:id><gtr:impact>Introductory lecture series 'Proof Complexity' at the European Summer School of Logic, Language and Information (ESSLLI), 2015 (Barcelona)</gtr:impact><gtr:outcomeId>56cf470dbc72e4.67266309</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Professional Practitioners</gtr:primaryAudience><gtr:year>2015</gtr:year></gtr:disseminationOutput></gtr:disseminationOutputs><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>Research focussed on developing and analysing proof systems that can model SAT/QBF-solving. In particular, we developed a number of resolution-based proof systems, clarified their relationships in terms of simulations, and obtained a number of new and striking lower bounds to the size of proofs, which directly imply bounds the running time of solvers.

Of particular interest are the techniques that can be used for showing lower bounds. We examined the transfer of classical techniques (feasible interpolation, size-width, game-theoretic techniques), but also obtained a new technique based on strategy extraction. This technique shows a new and strong connection between proof complexity and circuit complexity. The precise relation between lower bounds in these two fields had been open for decades.</gtr:description><gtr:exploitationPathways>We expect that our new technique on the connection between circuit complexity and proof complexity will be explored and exploited in follow-up research by other academic research groups. High interest in our results is already witnessed by a number of invited talks delivered on this topic.

In addition, our theoretical findings were presented to practitioners from industry and academia, who develop SAT/QBF-solvers (e.g. during the QUANTIFY workshop 2015 in Berlin and the SAT conference 2015 in Austin). Given the high relevance of our research to practical solving we expect that some of our ideas and methods will guide the future design and implementation of state-of-the-art solvers, which in turn have numerous applications in various industrial sectors.</gtr:exploitationPathways><gtr:id>551764A2-804F-4929-AFAD-CDAD8182F6A9</gtr:id><gtr:outcomeId>56cf7fe3b82786.97488832</gtr:outcomeId><gtr:sectors><gtr:sector>Aerospace, Defence and Marine,Digital/Communication/Information Technologies (including Software),Electronics,Manufacturing, including Industrial Biotechology,Security and Diplomacy</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>686D26A3-75EB-4DAC-B708-AFCEBDB742FE</gtr:id><gtr:title>FEASIBLE INTERPOLATION FOR QBF RESOLUTION CALCULI</gtr:title><gtr:parentPublicationTitle>LOGICAL METHODS IN COMPUTER SCIENCE</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/715e61bbec9e1c9fef5b02cacdc24675"><gtr:id>715e61bbec9e1c9fef5b02cacdc24675</gtr:id><gtr:otherNames>Beyersdorff Olaf</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:issn>1860-5974</gtr:issn><gtr:outcomeId>5a64134094ddd5.98523342</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>2BE4C36A-F779-47DC-A283-A117D798CAAD</gtr:id><gtr:title>Understanding cutting planes for QBFs</gtr:title><gtr:parentPublicationTitle>Leibniz International Proceedings in Informatics, LIPIcs</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/236560b81fab5a64e2f94ef6f15bf8c4"><gtr:id>236560b81fab5a64e2f94ef6f15bf8c4</gtr:id><gtr:otherNames>Beyersdorff O.</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:issn>18688969</gtr:issn><gtr:outcomeId>58b88343b129c7.63417900</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>E618AD5F-3051-40B0-98EB-6D48B257CAF3</gtr:id><gtr:title>A game characterisation of tree-like Q-Resolution size</gtr:title><gtr:parentPublicationTitle>Journal of Computer and System Sciences</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/5c4fee5569a318c4e745c4dd1deba053"><gtr:id>5c4fee5569a318c4e745c4dd1deba053</gtr:id><gtr:otherNames>Beyersdorff O</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>58b88ad6b38b96.45408708</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>F9AC4745-DDEA-4834-A71A-00290EBEA426</gtr:id><gtr:title>Are Short proofs narrow? QBF resolution is not simple</gtr:title><gtr:parentPublicationTitle>Leibniz International Proceedings in Informatics, LIPIcs</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/236560b81fab5a64e2f94ef6f15bf8c4"><gtr:id>236560b81fab5a64e2f94ef6f15bf8c4</gtr:id><gtr:otherNames>Beyersdorff O.</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:issn>18688969</gtr:issn><gtr:outcomeId>58b88343890866.10216313</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>BF7D59B3-4D14-42B7-BA42-FEE6852B5368</gtr:id><gtr:title>Proof complexity of resolution-based QBF calculi</gtr:title><gtr:parentPublicationTitle>Leibniz International Proceedings in Informatics, LIPIcs</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/236560b81fab5a64e2f94ef6f15bf8c4"><gtr:id>236560b81fab5a64e2f94ef6f15bf8c4</gtr:id><gtr:otherNames>Beyersdorff O.</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:issn>18688969</gtr:issn><gtr:outcomeId>56cf41ed025f27.36892124</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/L024233/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>