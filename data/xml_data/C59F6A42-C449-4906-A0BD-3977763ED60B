<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations><gtr:collaborator url="http://gtr.ukri.org:80/organisation/D1774113-D5D2-4B7C-A412-66A90FE4B96F"><gtr:id>D1774113-D5D2-4B7C-A412-66A90FE4B96F</gtr:id><gtr:name>University of Cambridge</gtr:name><gtr:address><gtr:line1>Lensfield Road</gtr:line1><gtr:line4>Cambridge</gtr:line4><gtr:postCode>CB2 1EW</gtr:postCode><gtr:region>East of England</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address></gtr:collaborator></gtr:collaborations><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/83D87776-5958-42AE-889D-B8AECF16B468"><gtr:id>83D87776-5958-42AE-889D-B8AECF16B468</gtr:id><gtr:name>University of Leeds</gtr:name><gtr:department>Pure Mathematics</gtr:department><gtr:address><gtr:line1>University of Leeds</gtr:line1><gtr:line4>Leeds</gtr:line4><gtr:line5>West Yorkshire</gtr:line5><gtr:postCode>LS2 9JT</gtr:postCode><gtr:region>Yorkshire and The Humber</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/83D87776-5958-42AE-889D-B8AECF16B468"><gtr:id>83D87776-5958-42AE-889D-B8AECF16B468</gtr:id><gtr:name>University of Leeds</gtr:name><gtr:address><gtr:line1>University of Leeds</gtr:line1><gtr:line4>Leeds</gtr:line4><gtr:line5>West Yorkshire</gtr:line5><gtr:postCode>LS2 9JT</gtr:postCode><gtr:region>Yorkshire and The Humber</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/D1774113-D5D2-4B7C-A412-66A90FE4B96F"><gtr:id>D1774113-D5D2-4B7C-A412-66A90FE4B96F</gtr:id><gtr:name>University of Cambridge</gtr:name><gtr:address><gtr:line1>Lensfield Road</gtr:line1><gtr:line4>Cambridge</gtr:line4><gtr:postCode>CB2 1EW</gtr:postCode><gtr:region>East of England</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>COLLABORATOR</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/7DC7119E-4A21-4460-8C35-11AB4250E42B"><gtr:id>7DC7119E-4A21-4460-8C35-11AB4250E42B</gtr:id><gtr:firstName>Nicola</gtr:firstName><gtr:surname>Gambino</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FM01729X%2F1"><gtr:id>C59F6A42-C449-4906-A0BD-3977763ED60B</gtr:id><gtr:title>Homotopy Type Theory: Programming and Verification</gtr:title><gtr:status>Active</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/M01729X/1</gtr:grantReference><gtr:abstractText>The cost of software failure is truly staggering. Well known 
individual cases include the Mars Climate Orbiter failure 
(&amp;pound;80 million), Ariane Rocket disaster (&amp;pound;350 million), Pentium 
Chip Division failure (&amp;pound;300 million), and more recently the heartbleed 
bug (est. &amp;pound;400 million). There are many, many more examples. Even worse, 
failures such as one in the Patriot Missile System and another 
in the Therac-25 radiation system have cost lives. More generally, a 
2008 study by the US government estimated that faulty
software costs the US economy &amp;pound;100 billion
annually. 

There are many successful approaches to software verification
(testing, model checking etc). One approach is to find mathematical
proofs that guarantees of software correctness. However, the
complexity of modern software means that hand-written mathematical
proofs can be untrustworthy and this has led to a growing desire for
computer-checked proofs of software correctness. 
Programming languages and interactive proof systems like Coq, Agda,
NuPRL and Idris have been developed based on a formal system called
Martin-L&amp;ouml;f Type Theory. In these systems, we can not only write
programs, but we can also express properties of programs using types,
and write programs to express proofs that our programs are correct.
In this way, both large mathematical theorems such as the Four Colour
Theorem, and large software systems such as the CompCert C compiler
have been formally verified. However, in such large projects, the
issue of scalability arises: how can we use these systems to build large
libraries of verified software in an effective way?

This is related to the problem of reusability and modularity: a
component in a software system should be replaceable by another which
behaves the same way even though it may be constructed in a completely
different way. That is, we need an &amp;quot;extensional equality&amp;quot; which is
computationally well behaved (that is, we want to run programs using
this equality). Finding such an ty is a fundamental and
difficult problem which has remained unresolved for over 40 years.

But now it looks like we might have a solution! Fields medallist
Vladimir Voevodsky has come up with a completely different take on the
problem by thinking of equalities as paths such as those which occur
in one of the most abstract branches of mathematics, namely homotopy
theory, leading to Homotopy Type Theory (HoTT). In HoTT, two objects
are completely interchangeable if they behave the same way. However,
most presentations of HoTT involve axioms which lack computational
justification and, as a result, we do not have programming languages
or verification systems based upon HoTT. The goal of our project is
to fix that, thereby develop the first of a new breed of HoTT-based
programming languages and verification systems, and develop case
studies which demonstrate the power of HoTT to programmers and
those interested in formal verification.

We are an ideal team to undertake this research because i) we have
unique skills and ideas ranging from the foundations of HoTT to the
implementation and deployment of programming language and verification
tools; and ii) the active collaboration of the most important figures
in the area (including Voevodsky) as well as industrial participation
to ensure that we keep in mind our ultimate goal -- usable programming
language and verification tools.</gtr:abstractText><gtr:fund><gtr:end>2019-03-29</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2015-03-30</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>93133</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs><gtr:collaborationOutput><gtr:collaboratingOrganisation>University of Cambridge</gtr:collaboratingOrganisation><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:department>Department of Biochemistry</gtr:department><gtr:description>Kleisli bicategories</gtr:description><gtr:id>0D67BEDC-30A1-4353-A341-0D195776EB60</gtr:id><gtr:impact>The article &amp;quot;Relative pseudomonads, Kleisli bicategories, and substitution monoidal structures&amp;quot; (see https://arxiv.org/abs/1612.03678).</gtr:impact><gtr:outcomeId>58b94203660147.54208673-1</gtr:outcomeId><gtr:partnerContribution>We wrote a paper, currently in preprint form on ArXiv, which we are currently revising in view of submission.</gtr:partnerContribution><gtr:piContribution>I have re-started a collaboration with M. Fiore, M. Hyland and G. Winskel on Kleisli bicategories</gtr:piContribution><gtr:sector>Academic/University</gtr:sector><gtr:start>2016-01-01</gtr:start></gtr:collaborationOutput></gtr:collaborationOutputs><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs><gtr:furtherFundingOutput><gtr:amountPounds>2000</gtr:amountPounds><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:currCode>GBP</gtr:currCode><gtr:currCountryCode>United Kingdom</gtr:currCountryCode><gtr:currLang>en_GB</gtr:currLang><gtr:description>London Mathematical Society Grant Scheme 3 (Joint Research Groups_</gtr:description><gtr:end>2016-10-02</gtr:end><gtr:fundingOrg>London Mathematical Society</gtr:fundingOrg><gtr:id>F9EA9284-47B9-4C13-BF6D-2821D750A742</gtr:id><gtr:outcomeId>56dd79d36758d1.61231725</gtr:outcomeId><gtr:sector>Learned Society</gtr:sector><gtr:start>2015-10-01</gtr:start></gtr:furtherFundingOutput></gtr:furtherFundingOutputs><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>I have developed further the recently-discovered connection between two previously unrelated mathematical areas: logic (which studies reasoning) and topology (which studies shapes). In particular, I have improved our understanding of new models of logical systems in topological structures (the simplicial and cubical models of type theory). Further work has been done on cartesian closed categories of operads and on homotopy-theoretic characterisation of inductive types.</gtr:description><gtr:exploitationPathways>One of the long-term goals of the research is to lead to the design and implementation of new programming languages and software-verification tools that exploit the insights provided by the topologically-inspired models.</gtr:exploitationPathways><gtr:id>71523BE1-2399-4DCB-B7D2-897E637E2937</gtr:id><gtr:outcomeId>56d42e50322ae9.60975965</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs><gtr:softwareAndTechnicalProductOutput><gtr:description>The proofs of the results in the paper &amp;quot;Homotopy-initial algebras in type theory&amp;quot; have been fully formalised in the Coq proof assistant. The resulting computer code has been submitted with the paper for publication.</gtr:description><gtr:id>9D847240-E0C7-4AD7-BE48-B5B4D6A98EA8</gtr:id><gtr:impact>No notable impact.</gtr:impact><gtr:outcomeId>56dd7b0140f9d2.51179838</gtr:outcomeId><gtr:title>Coq code proofs</gtr:title><gtr:type>Software</gtr:type><gtr:url>https://github.com/kristinas/hinitiality</gtr:url><gtr:yearFirstProvided>2015</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput></gtr:softwareAndTechnicalProductOutputs><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>C97407D8-DE2A-4344-BF92-37B0A7CCB928</gtr:id><gtr:title>Homotopy-Initial Algebras in Type Theory</gtr:title><gtr:parentPublicationTitle>Journal of the ACM</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/1aef25beaeb982f4b9ab90671f03d50d"><gtr:id>1aef25beaeb982f4b9ab90671f03d50d</gtr:id><gtr:otherNames>Awodey S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>56d42931c78960.51178715</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>7F510C49-BAA6-4360-B0FF-57DFE1A8D287</gtr:id><gtr:title>Relative pseudomonads, Kleisli bicategories, and substitution monoidal structures</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/c539f9a73c607a68197ecf25a190fe2e"><gtr:id>c539f9a73c607a68197ecf25a190fe2e</gtr:id><gtr:otherNames>Fiore M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>58b93f7d65b4a6.37978825</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>EB8C98E6-EBEA-41C5-8EFB-E1CD44C993A5</gtr:id><gtr:title>The Frobenius condition, right properness, and uniform fibrations</gtr:title><gtr:parentPublicationTitle>Journal of Pure and Applied Algebra</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/c7ae0aecc8371ef590ee8ad90ab888fb"><gtr:id>c7ae0aecc8371ef590ee8ad90ab888fb</gtr:id><gtr:otherNames>Gambino N</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>56d429824a95d9.28138914</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>49111CF5-61C6-4A3C-B819-57359A260769</gtr:id><gtr:title>On operads, bimodules and analytic functors</gtr:title><gtr:parentPublicationTitle>Memoirs of the American Mathematical Society</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/c7ae0aecc8371ef590ee8ad90ab888fb"><gtr:id>c7ae0aecc8371ef590ee8ad90ab888fb</gtr:id><gtr:otherNames>Gambino N</gtr:otherNames></gtr:author></gtr:authors><gtr:outcomeId>56d42893f15345.92354011</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/M01729X/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>D7BA1404-E001-4782-929E-E96E28B01201</gtr:id><gtr:percentage>20</gtr:percentage><gtr:text>Computer Sys. &amp; Architecture</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>80</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>