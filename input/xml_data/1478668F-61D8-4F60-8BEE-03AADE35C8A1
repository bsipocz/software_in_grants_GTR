<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/818CD6C9-61EE-41F2-9F37-0C7A8F43E25D"><gtr:id>818CD6C9-61EE-41F2-9F37-0C7A8F43E25D</gtr:id><gtr:name>University of Birmingham</gtr:name><gtr:department>School of Computer Science</gtr:department><gtr:address><gtr:line1>Edgbaston Park Road</gtr:line1><gtr:line2>Edgbaston</gtr:line2><gtr:postCode>B15 2TT</gtr:postCode><gtr:region>West Midlands</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/818CD6C9-61EE-41F2-9F37-0C7A8F43E25D"><gtr:id>818CD6C9-61EE-41F2-9F37-0C7A8F43E25D</gtr:id><gtr:name>University of Birmingham</gtr:name><gtr:address><gtr:line1>Edgbaston Park Road</gtr:line1><gtr:line2>Edgbaston</gtr:line2><gtr:postCode>B15 2TT</gtr:postCode><gtr:region>West Midlands</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/E3467D80-13A7-4C31-B14D-CC4C3B12086F"><gtr:id>E3467D80-13A7-4C31-B14D-CC4C3B12086F</gtr:id><gtr:firstName>Dan</gtr:firstName><gtr:otherNames>R</gtr:otherNames><gtr:surname>Ghica</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FD070880%2F1"><gtr:id>1478668F-61D8-4F60-8BEE-03AADE35C8A1</gtr:id><gtr:title>A Unified Approach to Compositional Software Modelling, Analysis and Verification</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Fellowship</gtr:grantCategory><gtr:grantReference>EP/D070880/1</gtr:grantReference><gtr:abstractText>Software modelling, analysis and verificationcomprises many sophisticated but often disparate techniques such asmodel checking, static analysis or testing. Although takenindividually such techniques are effective in targeting particularproblems, a combined approach is always recommended. However, in theabsence of a unified framework, integration can be awkward and mayfail to achieve true synergy. Using Game Semantics as a commontheoretical foundation we can provide such a unified framework forsoftware modelling, analysis and verification. The modularity ofextant techniques is often limited, which restrains theirscalability. Game Semantics is intrinsically compositional and recentresearch has already shown how it can be used to model subprograms inmodular fashion, especially the subtle interplay between proceduresand state that cannot be represented using extant techniques. However,compositional modelling is only the first step towards compositionalverification. We plan to further develop means for compositionalreasoning, that is methods of specifying properties of executionenvironments and of verifying that subprograms plug together withoutviolating their mutual assumptions. This can be achieved using eitherprogram logics or type systems. Building on existing research, we aimto push compositional methods beyond correctness verification, intomore intensional analyses such as estimating time of execution, memoryrequirements or resource usage. We also aim to expand beyond staticverification, by examining compositional approaches totesting. Throughout the programme, foundational and applied researchwill naturally intertwine and play off each other.</gtr:abstractText><gtr:fund><gtr:end>2011-06-30</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2006-07-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>386159</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs><gtr:furtherFundingOutput><gtr:amountPounds>50000</gtr:amountPounds><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:currCode>GBP</gtr:currCode><gtr:currCountryCode>United Kingdom</gtr:currCountryCode><gtr:currLang>en_GB</gtr:currLang><gtr:description>Spinner</gtr:description><gtr:end>2008-01-02</gtr:end><gtr:fundingOrg>Advantage West Midlands</gtr:fundingOrg><gtr:id>DE29E22B-E200-4957-86C8-2A03347EB4F1</gtr:id><gtr:outcomeId>546270bba47999.46390431</gtr:outcomeId><gtr:sector>Public</gtr:sector><gtr:start>2007-01-01</gtr:start></gtr:furtherFundingOutput><gtr:furtherFundingOutput><gtr:amountPounds>60000</gtr:amountPounds><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:currCode>GBP</gtr:currCode><gtr:currCountryCode>United Kingdom</gtr:currCountryCode><gtr:currLang>en_GB</gtr:currLang><gtr:department>Microsoft Research Cambridge</gtr:department><gtr:description>Microsoft Doctoral Fellowship</gtr:description><gtr:end>2014-12-02</gtr:end><gtr:fundingOrg>Microsoft Research</gtr:fundingOrg><gtr:id>A35A23FD-42BD-4E4B-80DB-B9F9A7F9CDDF</gtr:id><gtr:outcomeId>54627022372bc2.10485120</gtr:outcomeId><gtr:sector>Private</gtr:sector><gtr:start>2011-10-01</gtr:start></gtr:furtherFundingOutput><gtr:furtherFundingOutput><gtr:amountPounds>15000</gtr:amountPounds><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:currCode>GBP</gtr:currCode><gtr:currCountryCode>United Kingdom</gtr:currCountryCode><gtr:currLang>en_GB</gtr:currLang><gtr:description>Advantage Proof of Concept Grant Fund</gtr:description><gtr:end>2010-04-02</gtr:end><gtr:fundingOrg>Advantage West Midlands</gtr:fundingOrg><gtr:id>DDF93FED-AD9F-4351-831C-F81FC804C410</gtr:id><gtr:outcomeId>5462707f74a2f4.01154564</gtr:outcomeId><gtr:sector>Public</gtr:sector><gtr:start>2010-03-01</gtr:start></gtr:furtherFundingOutput></gtr:furtherFundingOutputs><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>The research has been of a theoretical and foundational nature, but it has led to the development of an experimental high-level synthesis compiler made available as an open-source tool. It has been downloaded a few hundred times but we don't know how it has been used.</gtr:description><gtr:firstYearOfImpact>2012</gtr:firstYearOfImpact><gtr:id>6DBB65E1-57F4-4D49-9FC0-AC2386EE75D9</gtr:id><gtr:impactTypes><gtr:impactType>Economic,Policy &amp; public services</gtr:impactType></gtr:impactTypes><gtr:outcomeId>54627e4755a6e0.83785720</gtr:outcomeId><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs><gtr:intellectualPropertyOutput><gtr:description>The invention relates to a method of synthesising an electronic circuit for performing a function. The method comprises programming the function using a programming language by defining one or more terms, each term comprising one or more functional constants. Game semantics are applied to interpret the programmed function. Each term is interpreted as one or more strategies defined on moves. Each of the constants of the programmed function is associated with a sub-circuit. Each move is associated with at least one input or output port of the associated sub-circuit, and a move occurrence defined by a strategy produces a change of state of an associated port. The associated sub-circuits are combined to provide a synthesised circuit for performing the function.</gtr:description><gtr:grantRef>EP/D070880/1</gtr:grantRef><gtr:id>D1ADC584-4D13-48A1-8116-95AE67B2E637</gtr:id><gtr:impact>None</gtr:impact><gtr:licensed>No</gtr:licensed><gtr:outcomeId>5462799808b3a9.87001094</gtr:outcomeId><gtr:patentId>US8146029</gtr:patentId><gtr:protection>Patent granted</gtr:protection><gtr:title>SYNTHESIS OF ELECTRONIC CIRCUITS</gtr:title><gtr:yearProtectionGranted>2012</gtr:yearProtectionGranted></gtr:intellectualPropertyOutput></gtr:intellectualPropertyOutputs><gtr:keyFindingsOutput><gtr:description>We have discovered the fact that interaction-based semantics (game semantics, geometry of interaction) can be used to give models of programming languages that are both operational (can be executed) and denotational (the meaning of the whole is composed from the meanings of the parts). This properties made such models ideally suited for compositional software analysis and also for circuit synthesis.</gtr:description><gtr:exploitationPathways>The proof-of-concept compiler and verification tools can be improved in terms of performance and features.</gtr:exploitationPathways><gtr:id>30BB1843-028D-4290-A8AB-00BFBDDBD9F1</gtr:id><gtr:outcomeId>54627ef5862fb8.29283458</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs><gtr:policyInfluenceOutput><gtr:areas/><gtr:description>MACDES</gtr:description><gtr:geographicReach>National</gtr:geographicReach><gtr:id>AF0507F7-31BE-43F2-9EB9-1AF6C5CC83F8</gtr:id><gtr:outcomeId>5462782bb827f5.50956191</gtr:outcomeId><gtr:type>Membership of a guidance committee</gtr:type><gtr:url>http://www.epsrc.ac.uk/newsevents/pubs/many-core-architectures-and-concurrency-in-distributed-and-embedded-systems-epsrc-workshop-report/</gtr:url></gtr:policyInfluenceOutput></gtr:policyInfluenceOutputs><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs><gtr:softwareAndTechnicalProductOutput><gtr:description>The Geometry of Synthesis is a new approach to higher-level synthesis of VLSI designs (&amp;quot;hardware&amp;quot;) from behavioural descriptions written in a conventional (&amp;quot;software&amp;quot;) programming language, called Verity. The main difference between GoS/Verity and other HLS tools is full support for functions in the programming language. This allows us to support things like: higher order functions (map, fold), a functional style of programming, recursion, pre-compiled libraries
foreign-function interfaces, run-time services, interfacing with legacy IP cores.
The output of GoS is generic VHDL which can be (in principle) used in any conventional synthesis or simulation design flow. However, we test and run our code using Altera tool chains and FPGAs.</gtr:description><gtr:id>FAB6A13B-8B66-4776-B8C3-0E19AD30C228</gtr:id><gtr:impact>A few hundred downloads of the tool.</gtr:impact><gtr:outcomeId>54627a6e64d415.44002476</gtr:outcomeId><gtr:title>GOS</gtr:title><gtr:type>Software</gtr:type><gtr:url>http://www.veritygos.org</gtr:url><gtr:yearFirstProvided>2010</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput></gtr:softwareAndTechnicalProductOutputs><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>CFB94322-22BD-4CEF-9765-030C44845821</gtr:id><gtr:title>Angelic semantics of fine-grained concurrency</gtr:title><gtr:parentPublicationTitle>Annals of Pure and Applied Logic</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/43c63c09be212b7de9e82cb699c15869"><gtr:id>43c63c09be212b7de9e82cb699c15869</gtr:id><gtr:otherNames>Ghica D</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2008-01-01</gtr:date><gtr:outcomeId>546215e13a6ed7.58070417</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>28E36154-A539-437C-B2FF-D63A21BB4481</gtr:id><gtr:title>Data-abstraction refinement: a game semantic approach</gtr:title><gtr:parentPublicationTitle>International Journal on Software Tools for Technology Transfer</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/07ae15f102e9a6e367373f0467adc51d"><gtr:id>07ae15f102e9a6e367373f0467adc51d</gtr:id><gtr:otherNames>Bakewell A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:outcomeId>54621432c58004.68676888</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>99B94D3E-C261-4D9D-A65F-CA7F8E9253BB</gtr:id><gtr:title>Clipping: A Semantics-Directed Syntactic Approximation</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/43c63c09be212b7de9e82cb699c15869"><gtr:id>43c63c09be212b7de9e82cb699c15869</gtr:id><gtr:otherNames>Ghica D</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2009-01-01</gtr:date><gtr:isbn>978-0-7695-3746-7</gtr:isbn><gtr:outcomeId>546215e0e74871.51425293</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>209E2BE2-F2A2-45BE-9810-E732244A831E</gtr:id><gtr:title>Function interface models for hardware compilation</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/43c63c09be212b7de9e82cb699c15869"><gtr:id>43c63c09be212b7de9e82cb699c15869</gtr:id><gtr:otherNames>Ghica D</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2011-01-01</gtr:date><gtr:isbn>978-1-4577-0117-7</gtr:isbn><gtr:outcomeId>54621432442bf8.03701310</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>CF269ED3-EA18-410A-9F48-5DA6C63987C9</gtr:id><gtr:title>Geometry of Synthesis II: From Games to Delay-Insensitive Circuits</gtr:title><gtr:parentPublicationTitle>Electronic Notes in Theoretical Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/43c63c09be212b7de9e82cb699c15869"><gtr:id>43c63c09be212b7de9e82cb699c15869</gtr:id><gtr:otherNames>Ghica D</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:outcomeId>54621432982348.76066690</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>A974BB91-B6A7-46DD-8999-872E8C47CC5E</gtr:id><gtr:title>Applications of Game Semantics: From Program Analysis to Hardware Synthesis</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/43c63c09be212b7de9e82cb699c15869"><gtr:id>43c63c09be212b7de9e82cb699c15869</gtr:id><gtr:otherNames>Ghica D</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2009-01-01</gtr:date><gtr:isbn>978-0-7695-3746-7</gtr:isbn><gtr:outcomeId>546215e0bf4929.97074414</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/D070880/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>58B09231-94FB-4A0A-AF2E-EFC5AF751907</gtr:id><gtr:percentage>50</gtr:percentage><gtr:text>Modelling &amp; simul. of IT sys.</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>E05CFE0B-163D-412D-A3C2-28E89B2CA336</gtr:id><gtr:percentage>50</gtr:percentage><gtr:text>Software Engineering</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>