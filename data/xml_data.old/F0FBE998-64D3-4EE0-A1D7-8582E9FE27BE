<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/3A5E126D-C175-4730-9B7B-E6D8CF447F83"><gtr:id>3A5E126D-C175-4730-9B7B-E6D8CF447F83</gtr:id><gtr:name>University College London</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>Gower Street</gtr:line1><gtr:line4>London</gtr:line4><gtr:postCode>WC1E 6BT</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/3A5E126D-C175-4730-9B7B-E6D8CF447F83"><gtr:id>3A5E126D-C175-4730-9B7B-E6D8CF447F83</gtr:id><gtr:name>University College London</gtr:name><gtr:address><gtr:line1>Gower Street</gtr:line1><gtr:line4>London</gtr:line4><gtr:postCode>WC1E 6BT</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/F262B9E0-E9D1-4BFF-B9BF-B4C81D12D8B9"><gtr:id>F262B9E0-E9D1-4BFF-B9BF-B4C81D12D8B9</gtr:id><gtr:name>Microsoft Research Ltd</gtr:name><gtr:address><gtr:line1>21 Station Road</gtr:line1><gtr:postCode>CB1 2FB</gtr:postCode><gtr:region>East of England</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/08825339-619B-4F60-9070-CE1D638BDAB9"><gtr:id>08825339-619B-4F60-9070-CE1D638BDAB9</gtr:id><gtr:firstName>Juan Antonio</gtr:firstName><gtr:surname>Navarro Perez</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FK040863%2F1"><gtr:id>F0FBE998-64D3-4EE0-A1D7-8582E9FE27BE</gtr:id><gtr:title>Automating Separation Logic Reasoning</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/K040863/1</gtr:grantReference><gtr:abstractText>Separation logic is a formalism designed to symbolically reason about computer programs that dynamically allocate data structures on memory. It allows to one mathematically _prove_ the correctness of such programs, for example showing the absence of memory leaks or violations. Using this proof system theoreticians could provide much cleaner and succinct proofs on the whiteboard, but their efforts to automate such reasoning process faced a number of limitations. Standard automated theorem proving techniques, based e.g. on resolution, did not seem to naturally apply to the new logic; thus researchers opted either to implement reasoning tools from scratch---missing the opportunity to exploit advances in modern theorem proving---or seek alternatives that avoid the perceived nuances of separation logic altogether---missing the conceptual advantages that separation logic _does_ provide. This research proposal seeks to demonstrate that modern theorem proving techniques are, in fact, compatible with separation logic reasoning. An approach that leads not only to much more efficient separation logic reasoners, but also broadens the scope of applications in which automated theorem proving can be practically applied.</gtr:abstractText><gtr:potentialImpactText>The proposed research work will ultimately realise it potential for impact through the development of new ideas and techniques that advance the state of the art in software verification. A stated goal of this project is to provide working implementations of tools that serve to demonstrate the value and applicability of our ideas, and which will be made publicly available to the research community through our website. Furthermore, by leveraging on connections from members of the Programming Principles, Logic, and Verification group with several industrial bodies (Microsoft, Monoidics, and others), we'll be able to ensure that impact to the industry is achieved even in the sort term. Additionally, the strategic position of University College London as an academic centre of excellence in cyber security research (established with the support of EPSRC and GCHQ) will enable the uptake of our contributions by the public sector.</gtr:potentialImpactText><gtr:fund><gtr:end>2015-06-30</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2014-01-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>98055</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>Our findings have pushed the boundaries on how to formally reason about the dynamic usage of resources by computer programs. This, in turn, will have an impact on the safety and reliability of software in our increasingly digital driven society.</gtr:description><gtr:firstYearOfImpact>2014</gtr:firstYearOfImpact><gtr:id>FFECCE0A-748D-4D4B-878D-FCDBBA378AC0</gtr:id><gtr:impactTypes><gtr:impactType>Societal</gtr:impactType></gtr:impactTypes><gtr:outcomeId>5460f084e77139.44279362</gtr:outcomeId><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>Discovered key insights on how to formally reason about dynamic resources used by computer programs. This, moreover, allows to efficiently automate the analysis of computer program behaviors.</gtr:description><gtr:exploitationPathways>Increase the number of techniques used in automated theorem proving and automated reasoning.</gtr:exploitationPathways><gtr:id>3412027A-B1A1-4A2D-ABFF-CC2DC7DAE71C</gtr:id><gtr:outcomeId>5460f16a00e540.31652556</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs><gtr:softwareAndTechnicalProductOutput><gtr:description>Asterix is a Separation Logic theorem prover, used to automatically reason about dynamic resources used in computer programs.</gtr:description><gtr:id>9B406F45-ED6D-4948-8BE1-CDF9ADB8F738</gtr:id><gtr:impact>The tool won as the most efficient theorem prover at the SL-COMP demonstration for reasoning about programs manipulating linked lists in memory.</gtr:impact><gtr:outcomeId>5460f47833b7f6.01644049</gtr:outcomeId><gtr:title>Asterix: Separation Logic Theorem Prover</gtr:title><gtr:type>Software</gtr:type><gtr:url>http://smtcomp.sourceforge.net/2014/results-SLCOMP2.shtml</gtr:url><gtr:yearFirstProvided>2014</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput></gtr:softwareAndTechnicalProductOutputs><gtr:spinOutOutputs/></gtr:output><gtr:publications/><gtr:identifiers><gtr:identifier type="RCUK">EP/K040863/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>