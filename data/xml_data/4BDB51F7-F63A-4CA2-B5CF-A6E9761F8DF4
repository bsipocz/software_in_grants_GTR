<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations><gtr:collaborator url="http://gtr.ukri.org:80/organisation/D394BCC7-2CE9-41C0-A124-1A05C8E4FD6E"><gtr:id>D394BCC7-2CE9-41C0-A124-1A05C8E4FD6E</gtr:id><gtr:name>City, University of London</gtr:name></gtr:collaborator><gtr:collaborator url="http://gtr.ukri.org:80/organisation/46387D84-F71E-4B7D-8C7D-9C288F113510"><gtr:id>46387D84-F71E-4B7D-8C7D-9C288F113510</gtr:id><gtr:name>Imperial College London</gtr:name><gtr:address><gtr:line1>South Kensington Campus</gtr:line1><gtr:line2>Exhibition Road</gtr:line2><gtr:line4>London</gtr:line4><gtr:postCode>SW7 2AZ</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address></gtr:collaborator></gtr:collaborations><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/C0E4FAD2-3C8B-410A-B6DF-3B9B9E433060"><gtr:id>C0E4FAD2-3C8B-410A-B6DF-3B9B9E433060</gtr:id><gtr:name>University of St Andrews</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>College Gate</gtr:line1><gtr:line4>St. Andrews</gtr:line4><gtr:line5>Fife</gtr:line5><gtr:postCode>KY16 9AJ</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/C0E4FAD2-3C8B-410A-B6DF-3B9B9E433060"><gtr:id>C0E4FAD2-3C8B-410A-B6DF-3B9B9E433060</gtr:id><gtr:name>University of St Andrews</gtr:name><gtr:address><gtr:line1>College Gate</gtr:line1><gtr:line4>St. Andrews</gtr:line4><gtr:line5>Fife</gtr:line5><gtr:postCode>KY16 9AJ</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/D394BCC7-2CE9-41C0-A124-1A05C8E4FD6E"><gtr:id>D394BCC7-2CE9-41C0-A124-1A05C8E4FD6E</gtr:id><gtr:name>City, University of London</gtr:name><gtr:roles><gtr:role><gtr:name>COLLABORATOR</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/46387D84-F71E-4B7D-8C7D-9C288F113510"><gtr:id>46387D84-F71E-4B7D-8C7D-9C288F113510</gtr:id><gtr:name>Imperial College London</gtr:name><gtr:address><gtr:line1>South Kensington Campus</gtr:line1><gtr:line2>Exhibition Road</gtr:line2><gtr:line4>London</gtr:line4><gtr:postCode>SW7 2AZ</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>COLLABORATOR</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/F35632B0-D4C0-4FAD-8179-A899790F1895"><gtr:id>F35632B0-D4C0-4FAD-8179-A899790F1895</gtr:id><gtr:firstName>Ekaterina</gtr:firstName><gtr:surname>Komendantskaya</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FF044046%2F1"><gtr:id>4BDB51F7-F63A-4CA2-B5CF-A6E9761F8DF4</gtr:id><gtr:title>Computational Logic in Artificial Neural Networks</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Fellowship</gtr:grantCategory><gtr:grantReference>EP/F044046/1</gtr:grantReference><gtr:abstractText>The fundamental problem of creating (and then evaluating) automated reasoning systems based upon formally defined logical calculi has been considered for centuries. Arguably, the problem is as old as mathematical logic and even computational mathematics.Among the pioneers in this field were Boole, Peano and Hilbert. Hilbert, in his attempts to find proper foundations of mathematics and a proper formal calculus for it, announced the programme of formalising mathematics using a logical calculus. This program is now commonly called Hilbert's Programme . However, in his well-known Incompleteness Theorem [1931], Gdel proved that, in every sufficiently strong formal system, there is an undecidable proposition. It follows that Hilbert's programme cannot be accomplished, as shown by Church and Turing. However, even after these results, the major question, of how one can create some kind of automated reasoning, or, as it was later called, artificial intelligence, remained of interest. It is an open question whether the human mind acts in accordance with some pre-defined algorithm, whether this algorithm is sound, whether it can be soundly formalised by humans, and whether, if formalised, it can be shown to be sound. Turing's machines stimulated the creation of digital computers; biology and neuroscience became proper scientific disciplines. All this progress increased interest in the general problem of creating a form of artificial intelligence.Connectionism is a movement in the fields of artificial intelligence, cognitive science, neuroscience, psychology and philosophy of mind which hopes to explain human intellectual abilities using the idea of an artificial neural network / a simplified mathematical model of a human brain. One of its areas, Neuro-Symbolic Integration, investigates ways of integrating logic and formal languages with neural networks in order to better understand the essence of symbolic (deductive) and human (developing, spontaneous) reasoning, and to show interconnections between them.Many neuro-symbolic systems have been proposed over the last two decades. However, they have been little used in automated reasoning and computational logic. Now is the right time for development of an alternative to the existing neuro-symbolic networks; for this, our proposed SLD neural networks appear to be a most suitable candidate. SLD neural networks use a novel method of performing the algorithm of first-order SLD-resolution for classical logic programs in neural networks. The resulting neural networks are finite, and embody six learning functions as recognised in neurocomputing.We propose to test our SLD neural networks and apply them to a broader class of logic programs and logics. This will lead us to evaluate their effectiveness, comparing them with orthodox methods used in automated reasoning, on the one hand, and with alternative (non-neural) networks used in computational logic, on the other hand. The culmination of the project will be the creation of a more general, and more abstract, neural network interpreter ready to be used as an automated prover for a broad class of logics and logic programs. By achieving its objectives, the project will have a long-term effect of stimulating research in the areas of Neuro-Symbolic Integration and Cognitive Science.</gtr:abstractText><gtr:fund><gtr:end>2010-03-31</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2008-10-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>241845</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs><gtr:collaborationOutput><gtr:collaboratingOrganisation>Imperial College London</gtr:collaboratingOrganisation><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:description>Neuro-Symbolic discussion group</gtr:description><gtr:id>C729F6DF-D6E8-4AD0-BD94-1FD532FC9492</gtr:id><gtr:outcomeId>b9737896b97378aa-1</gtr:outcomeId><gtr:piContribution>The partnership between the Universities of Dundee, St Andrews, Imperial College, and City University London</gtr:piContribution><gtr:sector>Academic/University</gtr:sector><gtr:start>2009-01-01</gtr:start></gtr:collaborationOutput><gtr:collaborationOutput><gtr:collaboratingOrganisation>City, University of London</gtr:collaboratingOrganisation><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:description>Neuro-Symbolic discussion group</gtr:description><gtr:id>8A9FF1C3-A662-4923-94D3-F50912865364</gtr:id><gtr:outcomeId>b97379b8b97379cc-1</gtr:outcomeId><gtr:piContribution>The partnership between the Universities of Dundee, St Andrews, Imperial College, and City University London</gtr:piContribution><gtr:sector>Academic/University</gtr:sector><gtr:start>2009-01-01</gtr:start></gtr:collaborationOutput></gtr:collaborationOutputs><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs><gtr:furtherFundingOutput><gtr:amountPounds>2200</gtr:amountPounds><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:currCode>GBP</gtr:currCode><gtr:currCountryCode>United Kingdom</gtr:currCountryCode><gtr:currLang>en_GB</gtr:currLang><gtr:description>SICSA Distinguished Visitor K.U.Kuhnberger</gtr:description><gtr:end>2009-11-02</gtr:end><gtr:fundingOrg>SICSA Scottish Informatics and Computer Science Alliance</gtr:fundingOrg><gtr:id>A7B9789E-9F1F-4D04-900F-E762B5CB7A2E</gtr:id><gtr:outcomeId>r-2223967045.754163706899bd0</gtr:outcomeId><gtr:sector>Academic/University</gtr:sector><gtr:start>2009-10-01</gtr:start></gtr:furtherFundingOutput><gtr:furtherFundingOutput><gtr:amountPounds>100268</gtr:amountPounds><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:currCode>GBP</gtr:currCode><gtr:currCountryCode>United Kingdom</gtr:currCountryCode><gtr:currLang>en_GB</gtr:currLang><gtr:description>MACHINE LEARNING COALGEBRAIC AUTOMATED PROOFS</gtr:description><gtr:end>2014-02-02</gtr:end><gtr:fundingOrg>Engineering and Physical Sciences Research Council (EPSRC)</gtr:fundingOrg><gtr:fundingRef>EP/J014222/1</gtr:fundingRef><gtr:id>8557A614-1C6F-4246-BE71-CF939626F313</gtr:id><gtr:outcomeId>5edb36ea5edb36fe</gtr:outcomeId><gtr:sector>Academic/University</gtr:sector><gtr:start>2012-02-01</gtr:start></gtr:furtherFundingOutput><gtr:furtherFundingOutput><gtr:amountPounds>400</gtr:amountPounds><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:currCode>GBP</gtr:currCode><gtr:currCountryCode>United Kingdom</gtr:currCountryCode><gtr:currLang>en_GB</gtr:currLang><gtr:description>SICSA Workshop Funding STP 2011</gtr:description><gtr:end>2011-07-02</gtr:end><gtr:fundingOrg>SICSA Scottish Informatics and Computer Science Alliance</gtr:fundingOrg><gtr:id>4F2E9349-CA23-4DD3-9875-19017A1692BF</gtr:id><gtr:outcomeId>r-9168934160.06950688fafe</gtr:outcomeId><gtr:sector>Academic/University</gtr:sector><gtr:start>2011-06-01</gtr:start></gtr:furtherFundingOutput><gtr:furtherFundingOutput><gtr:amountPounds>3060</gtr:amountPounds><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:currCode>GBP</gtr:currCode><gtr:currCountryCode>United Kingdom</gtr:currCountryCode><gtr:currLang>en_GB</gtr:currLang><gtr:description>SICSA Distinguished Visitor J.Power</gtr:description><gtr:end>2010-08-02</gtr:end><gtr:fundingOrg>SICSA Scottish Informatics and Computer Science Alliance</gtr:fundingOrg><gtr:id>CE30B59D-7DD9-4FF8-BD81-0580D003754C</gtr:id><gtr:outcomeId>r-5280988957.0632850689b14c</gtr:outcomeId><gtr:sector>Academic/University</gtr:sector><gtr:start>2010-07-01</gtr:start></gtr:furtherFundingOutput></gtr:furtherFundingOutputs><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>The fundamental problem of creating (and then evaluating) automated reasoning system based upon some formally defined logical calculus has been tackled for centuries. 

One can argue that the problem is as old as mathematical logic and even computational mathematics. Among famous pioneers in this field were Boole, Peano, Hilbert.

Hilbert, in his attempts to find proper foundations of mathematics and a proper formal calculus for it,

announced the programme of formalising mathematics using some logical calculus. This program is now commonly called ``Hilbert's Programme&amp;quot;.



In the famous Incompleteness Theorem [1931] Godel proved that there are undecidable propositions in every axiomatic theory, and thus showed that Hilbert's program cannot be

accomplished. Equivalent theorems were proven by Turing and Church.



However, even after the famous result of Godel, Turing and Church, the major question of how one can create some kind of automated reasoning, or, as it was later called, artificial intelligence, remained appealing. It remains an open question whether Human mind acts in accordance with some pre-defined algorithm, whether this algorithm is sound, whether it can be soundly

formalised by humans, and whether, if formalised, it can be proved to be sound. 



Turing's machines stimulated the creation of digital computers; biology and neuroscience became proper scientific disciplines. And all this progress only increased interest in the general problem of creating an artificial intelligence.



Connectionism is a movement in the fields of artificial intelligence, cognitive science, neuroscience, psychology and philosophy of mind which hopes to explain human intellectual abilities using artificial neural networks - a simplified mathematical model of a human brain. One of its areas, Neuro-Symbolic integration, investigates ways of integrating logic and

formal languages with neural networks in order to better understand the essence of symbolic (deductive) and human (developing, spontaneous) reasoning, and to show interconnections between

them.



This EPSRC grant was devoted to studies of various neuro-symbolic methods applicable in automated reasoning. The first research objective was to implement two logic algorithms -- first-order unification and first-order term rewriting -- in artificial neural networks. This goal was achieved, and the software is now published on-line on the project's webpage; the major results are published in journal and conference proceedings. 



This work was taken to a more general and abstract level by a successive novel method ML-CAP (for ``machine-learning coalgebraic automated proofs&amp;quot;) that can use statistical machine learning tools such as Support Vector Machines and Neural networks to determine general properties of formal proofs by detecting variations of proof patterns. The novel ML-CAP method was developed and formulated during the EPSRC PDRF fellowship. 

Among other things, this method required a careful study of coalgebraic semantics of logic programs, which was undertaken during this grant. These studies led to a new coalgebraic proof procedure for first-order logic programs and laid foundations for the ML-CAP.

The method ML-CAP has become the subject of my present and future studies, and is already approved for support by the EPSRC First-grant scheme.

 

The following objectives were achieved:

1. To represent the operational semantics of logic programming languages as (artificial) neural networks.

2. To evaluate the effectiveness of these representations compared with orthodox methods such as resolution and analytic tableaux.

3. To refine these representations in the light of evaluations.

4. To seek abstract and more general representations of which the above representations are special cases. 

5. To test, implement and experiment with (existing) SLD Neural Networks and the neural networks yet to be obtained (as above), using standard neural networks software.

6. To look for more broad implementation of the developed techniques in automated reasoning and proof theory. 







However, the evaluation stage of the proposal showed that the proposed method was not optimal. I went on working on a deeper methods that capture statistical aspects of automated theorem proving, and in the last year of my project, I developed a new alternative method for machine-learning coalgebraic automated proofs (ML-CAP) that lay foundation for my new EPSRC grant ML-CAP. Therefore, one can say that there were two main categories of research results acheived within the EPSRC PRRF - and that is implementation and evaluation of the method I had proposed for the Fellowship, and development of a novel, more optimal and successful method that forms my long-term research agenda.</gtr:description><gtr:exploitationPathways>The research can be adapted for use in a range of industrial-scale Artificial Intelligence Applications. The project's web-page provides a guide for anyone wishing to use the produced software or exploit the theoretical results.</gtr:exploitationPathways><gtr:id>99F3A2DF-821B-433F-AAD0-85B7F53656DC</gtr:id><gtr:outcomeId>r-3595642152.797097777735318</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors><gtr:url>http://www.computing.dundee.ac.uk/staff/katya/CLANN/index.html</gtr:url></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs><gtr:softwareAndTechnicalProductOutput><gtr:description>Experimental software supporting experiments on Neuro-symbolic tools for performing unification and term-rewriting in neural networks.</gtr:description><gtr:id>69EFA25F-53C5-47EA-8BD3-DCC3DE3295D4</gtr:id><gtr:impact>The impact was mainly research/academic.</gtr:impact><gtr:outcomeId>54537684ec26b3.87969199</gtr:outcomeId><gtr:title>CLANN software</gtr:title><gtr:type>Software</gtr:type><gtr:url>http://staff.computing.dundee.ac.uk/katya/CLANN/CLANNsoftware.html</gtr:url><gtr:yearFirstProvided>2009</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput></gtr:softwareAndTechnicalProductOutputs><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>DB9B3BD0-78E6-4E36-87FC-EE7AB905AFAA</gtr:id><gtr:title>Intermediate three -valued regular logics of Kleene</gtr:title><gtr:parentPublicationTitle>Logic Studies</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/cc7f289e3f990e4d6f090b456da72a7f"><gtr:id>cc7f289e3f990e4d6f090b456da72a7f</gtr:id><gtr:otherNames>Ekaterina Komendantskaya (Author)</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2009-01-01</gtr:date><gtr:isbn>ISBN 978-5-02-036826-2</gtr:isbn><gtr:outcomeId>m_5512334206136c2f88</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>71491173-BA26-4BD4-9713-5BDB2385A864</gtr:id><gtr:title>Using Inductive Types for Ensuring Correctness of Neuro-Symbolic Computations</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/cc7f289e3f990e4d6f090b456da72a7f"><gtr:id>cc7f289e3f990e4d6f090b456da72a7f</gtr:id><gtr:otherNames>Ekaterina Komendantskaya (Author)</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:outcomeId>r_7798953609cad4d3f4</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>9C84E25D-50CE-4F19-8BAB-A033BF6F45FC</gtr:id><gtr:title>Sound and Complete SLD-Resolution for Bilattice-Based Annotated Logic Programs</gtr:title><gtr:parentPublicationTitle>Electronic Notes in Theoretical Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/8a1f751684eea59daa41e9b748a08fae"><gtr:id>8a1f751684eea59daa41e9b748a08fae</gtr:id><gtr:otherNames>Komendantskaya E</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2009-01-01</gtr:date><gtr:outcomeId>doi_53cff0ff0ea23e22</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>1A4E5AEC-503B-48D5-83B2-B7A1FF0C7750</gtr:id><gtr:title>Proceedings Workshop on Partiality and Recursion in Interactive Theorem Provers</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/cc7f289e3f990e4d6f090b456da72a7f"><gtr:id>cc7f289e3f990e4d6f090b456da72a7f</gtr:id><gtr:otherNames>Ekaterina Komendantskaya (Author)</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:outcomeId>m_333000161313a8ce5c</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>E4259753-8CDC-480E-8172-349E8F83AA6C</gtr:id><gtr:title>Neurons or Symbols: why does Or remain exclusive?</gtr:title><gtr:parentPublicationTitle>ICNC'09 Proceedings</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/01a13ee0712936d0de56967ea288fb2f"><gtr:id>01a13ee0712936d0de56967ea288fb2f</gtr:id><gtr:otherNames>Ekaterina Komendantskaya</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2009-01-01</gtr:date><gtr:outcomeId>54537b95665ac3.90551919</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>19532B73-BB33-477E-8F3B-0C1D25D7E9D6</gtr:id><gtr:title>Logics in Artificial Intelligence</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/8a1f751684eea59daa41e9b748a08fae"><gtr:id>8a1f751684eea59daa41e9b748a08fae</gtr:id><gtr:otherNames>Komendantskaya E</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2008-01-01</gtr:date><gtr:isbn>978-3-540-87802-5</gtr:isbn><gtr:outcomeId>doi_53cfcdfcd25296c1</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>017E9AC8-201B-4B68-843F-7D08E255AF1F</gtr:id><gtr:title>Inductive and Coinductive Components of Corecursive Functions in Coq</gtr:title><gtr:parentPublicationTitle>Electronic Notes in Theoretical Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/e1a28e38dac825d298211e35beea1571"><gtr:id>e1a28e38dac825d298211e35beea1571</gtr:id><gtr:otherNames>Bertot Y</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2008-01-01</gtr:date><gtr:outcomeId>54539788e495c7.03666429</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>B602332C-F3B1-426B-BE72-7F8997E926EE</gtr:id><gtr:title>SHERLOCK - an interface for Neuro-Symbolic systems</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/cc7f289e3f990e4d6f090b456da72a7f"><gtr:id>cc7f289e3f990e4d6f090b456da72a7f</gtr:id><gtr:otherNames>Ekaterina Komendantskaya (Author)</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2011-01-01</gtr:date><gtr:outcomeId>m_128799165713decade</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>EF4441D9-0C80-4605-B565-46D2C37FEDEA</gtr:id><gtr:title>Unification neural networks: unification by error-correction learning</gtr:title><gtr:parentPublicationTitle>Logic Journal of IGPL</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/8a1f751684eea59daa41e9b748a08fae"><gtr:id>8a1f751684eea59daa41e9b748a08fae</gtr:id><gtr:otherNames>Komendantskaya E</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:outcomeId>doi_53d04704714515be</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>FCA56013-EF16-47F7-8E2B-126EC5A2E814</gtr:id><gtr:title>Parallel Term Rewriting in Artificial Neural Networks</gtr:title><gtr:parentPublicationTitle>ICNC'09 electronic Proceedings</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/01a13ee0712936d0de56967ea288fb2f"><gtr:id>01a13ee0712936d0de56967ea288fb2f</gtr:id><gtr:otherNames>Ekaterina Komendantskaya</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2009-01-01</gtr:date><gtr:outcomeId>54537c3aa36c15.41930998</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>A924B42F-35B7-45C1-9DEA-34FCE5250E5C</gtr:id><gtr:title>Coalgebraic derivations in logic programming.</gtr:title><gtr:parentPublicationTitle>CSL'11</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/38d1e94652f26c4bb4ec76e3d1d319ae"><gtr:id>38d1e94652f26c4bb4ec76e3d1d319ae</gtr:id><gtr:otherNames>n/a n/a (Final Report data)</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2011-01-01</gtr:date><gtr:outcomeId>r_5036378586035b33c6</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>B7CF95D5-67CB-4688-94C5-21485CFA81A4</gtr:id><gtr:title>Parallel Rewriting in Neural Networks</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/cc7f289e3f990e4d6f090b456da72a7f"><gtr:id>cc7f289e3f990e4d6f090b456da72a7f</gtr:id><gtr:otherNames>Ekaterina Komendantskaya (Author)</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2009-01-01</gtr:date><gtr:outcomeId>m_432115600913decc6e</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/F044046/1</gtr:identifier></gtr:identifiers><gtr:projectHierarchy><gtr:parents><gtr:parent><gtr:id>4BDB51F7-F63A-4CA2-B5CF-A6E9761F8DF4</gtr:id><gtr:grantRef>EP/F044046/1</gtr:grantRef><gtr:amount>241845.83</gtr:amount><gtr:start>2008-10-01</gtr:start><gtr:end>2010-03-31</gtr:end><gtr:children><gtr:child rel="Transfer"><gtr:id>1D635B52-AE1B-452A-8D93-A8BDD5994595</gtr:id><gtr:grantRef>EP/F044046/2</gtr:grantRef><gtr:amount>124268.67</gtr:amount><gtr:start>2010-04-01</gtr:start><gtr:end>2011-09-30</gtr:end><gtr:children/></gtr:child></gtr:children></gtr:parent></gtr:parents></gtr:projectHierarchy><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>