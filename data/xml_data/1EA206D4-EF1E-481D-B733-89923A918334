<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role><gtr:role><gtr:name>FELLOW</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/12247D49-C076-43CB-B063-A4E785DFEE99"><gtr:id>12247D49-C076-43CB-B063-A4E785DFEE99</gtr:id><gtr:firstName>James</gtr:firstName><gtr:otherNames>Benjamin</gtr:otherNames><gtr:surname>Worrell</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role><gtr:role><gtr:name>FELLOW</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FN008197%2F1"><gtr:id>1EA206D4-EF1E-481D-B733-89923A918334</gtr:id><gtr:title>Verification of Linear Dynamical Systems</gtr:title><gtr:status>Active</gtr:status><gtr:grantCategory>Fellowship</gtr:grantCategory><gtr:grantReference>EP/N008197/1</gtr:grantReference><gtr:abstractText>The field of automated verification concerns itself with building and analysing mathematical models of computer systems in order to ensure their dependability and reliability. Ideally such
models should be used to analyse a system before it is built. Often the models include not just the system, but also its environment, leading to complex behaviours which include 
both physical and computational processes. A natural class of models for this task are linear dynamical systems, which are widely studied across the quantitative sciences, 
from control engineering to economics and theoretical biology. Within automated verification, linear dynamical systems arise as models of simple computer programs, e.g., a loop in a piece 
of code which makes linear updates to program variables, or a linear differential equation governing the behaviour of physical processes that are interacting with control software. 

Although from the point of view of other sciences linear dynamical systems might be considered relatively simple, the kind of precise and exhaustive analyses required in automated verification 
pose considerable challenges, and the area is rich with natural open problems. A striking example concerns deciding the termination of simple linear loops, that is, very simple while programs 
with no conditionals that only make linear assignments to their variables. Although such programs are too simple to be of much use on their own, they form natural abstractions when considering
the behaviour of more complex loops. Much attention has been paid to proving termination of such programs and many powerful methods have been developed, but as of yet
no general purpose procedure is known that is guaranteed to tell whether or not a given simple linear loop will terminate. This situation has been described as by Richard Lipton, a leading 
theoretical computer scientist, as a &amp;quot;mathematical embarrassment&amp;quot;, while the mathematician Terrence Tao remarks that &amp;quot;it is saying that we do not know how to decide the halting problem 
even for linear automata!&amp;quot;.

The goal of this project is to develop techniques to analyse linear dynamical systems in the kind of terms that are useful automated verification, for example, to determine whether a
system variable whose behaviour is determined by differential equation can ever enter a critical state. The main challenge in the project is that the long-term evolution of systems can be very
complex to analyse even though their short-term behaviour is simple. The project considers a range of verification problems for different types systems, including discrete-time and 
continuous-time systems. An important component of the methodology of the project comes from the subject of Diophantine approximation, a classical topic in number theory, with natural 
connections to ergodic theory and dynamical systems.</gtr:abstractText><gtr:potentialImpactText>The proposal concerns decision problems on fundamental mathematical models, such as linear while loops and solutions of linear differential equations.
These models lie at the heart of existing verification tools. Potential beneficiaries of the project include users of these tools (including industrial users
and researchers in other disciplines) to the extent that the outcomes of the proposal lead to improvements in the capabilities of such tools.

Termination. There are many software tools for proving program termination. A prominent example is Microsoft's Terminator tool. A key technique 
underlying this tool is proving termination by synthesising linear ranking functions. The proposal will consider alternative approaches to proving termination, 
mainly involving spectral methods. The techniques developed in the proposal will thus apply to core verification problems, as considered in the current 
generation of tools, and have the potential to improve the scope and effectiveness of current approaches. The methods that we consider for proving 
termination also have the potential to be robust and implementable. (It is the analysis of their soundness and completeness that is most difficult.) 
Incorporation of ideas generated from the proposal into the next generation of tools is a realistic aspiration in the years immediately following the 
completion of the project. 

Hybrid Systems. An significant part of the proposal involves decision procedures for reachability problems for solutions of linear differential equations. Such 
procedures are a key requirement for the automated analysis of hybrid systems. One can use numerical techniques to compute approximate answers to 
verification and analysis problems, but to obtain correctness guarantees one needs bounds on the numerical precision required. An important component 
of such precision bounds are bounds on the asymptotic behaviour of such solutions, which is one of the key goals of the proposal.

Polynomial-transcendental constraint solvers. Solvers for systems of polynomial constraints, such as QEPCAD and REDLOG, are becoming indispensable 
components of computer algebra systems across a range of applications. Extending such solvers to constraints involving trigonometric and/or 
exponential functions is very desirable in applications such as hybrid systems or robotics, but such work is at a very early stage. Some of the technical 
goals in the proposal, such as separation bounds and growth bounds for transcendental functions, will be relevant to extending the capabilities of existing 
decision procedures in the area, and we have included a work package to explore this possibility. Since the field itself is at an early stage of development, 
we believe that this is an area for long-term impact.</gtr:potentialImpactText><gtr:fund><gtr:end>2021-03-31</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2016-04-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>1005505</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>This research is still in its early stages. So far we have devised new algorithms to analyse the behaviour of systems whose evolution through time is governed by differential equations. Such problems often arise in the analysis of software controllers of dynamical systems, e.g., the software controlling the braking system in a car.
We have considered both autonomous and controlled systems and have considered the problem of deciding whether such a system reaches a given set of states.</gtr:description><gtr:exploitationPathways>Our goal is that the algorithms developed in this grant can be used to enhance the capability of automated tools for the analysis of hybrid systems (e.g., the tool UppAal).</gtr:exploitationPathways><gtr:id>06B4D802-AB92-4691-88AF-8D7A6AA92572</gtr:id><gtr:outcomeId>58c75c1d95a150.02477700</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>04FC1816-84E6-4DEF-9612-46457D374740</gtr:id><gtr:title>On the Complexity of the Orbit Problem</gtr:title><gtr:parentPublicationTitle>Journal of the ACM</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/fa1a058c189d21cf98c51444179b6a6e"><gtr:id>fa1a058c189d21cf98c51444179b6a6e</gtr:id><gtr:otherNames>Chonev V</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>58c758beb292a0.84313591</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>83ECD972-99A9-4609-95D1-5E2FF06DA8BB</gtr:id><gtr:title>On restricted nonnegative matrix factorization</gtr:title><gtr:parentPublicationTitle>Leibniz International Proceedings in Informatics, LIPIcs</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/a072ff1be17828f2301f38e3752916f9"><gtr:id>a072ff1be17828f2301f38e3752916f9</gtr:id><gtr:otherNames>Chistikov, D.</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>5a9c6551a88257.58485397</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>282500DE-8BCF-4E8D-90EB-3EDE1B1D28BF</gtr:id><gtr:title>On the skolem problem for continuous linear dynamical systems</gtr:title><gtr:parentPublicationTitle>Leibniz International Proceedings in Informatics, LIPIcs</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/c69a33025cce14387d9135282371e920"><gtr:id>c69a33025cce14387d9135282371e920</gtr:id><gtr:otherNames>Chonev, V.</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>58c758bee2e215.27716446</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/N008197/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>