<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/A9B1866C-EE3E-4D81-A83C-118745E9433E"><gtr:id>A9B1866C-EE3E-4D81-A83C-118745E9433E</gtr:id><gtr:name>Goldsmiths College</gtr:name><gtr:department>Computing Department</gtr:department><gtr:address><gtr:line1>Lewisham Way</gtr:line1><gtr:line2>New Cross</gtr:line2><gtr:line4>London</gtr:line4><gtr:postCode>SE14 6NW</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/A9B1866C-EE3E-4D81-A83C-118745E9433E"><gtr:id>A9B1866C-EE3E-4D81-A83C-118745E9433E</gtr:id><gtr:name>Goldsmiths College</gtr:name><gtr:address><gtr:line1>Lewisham Way</gtr:line1><gtr:line2>New Cross</gtr:line2><gtr:line4>London</gtr:line4><gtr:postCode>SE14 6NW</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/6452A9F0-43D6-4CAD-B212-6A378D9317F0"><gtr:id>6452A9F0-43D6-4CAD-B212-6A378D9317F0</gtr:id><gtr:firstName>Rob</gtr:firstName><gtr:surname>Hierons</gtr:surname><gtr:orcidId>0000-0002-4771-1446</gtr:orcidId><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/56F545AA-B720-48C2-88EE-F62506978982"><gtr:id>56F545AA-B720-48C2-88EE-F62506978982</gtr:id><gtr:firstName>S</gtr:firstName><gtr:surname>Danicic</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/9F8F104A-BAA6-49B9-B4BF-EC850996D384"><gtr:id>9F8F104A-BAA6-49B9-B4BF-EC850996D384</gtr:id><gtr:firstName>Mark</gtr:firstName><gtr:surname>Harman</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FE002919%2F1"><gtr:id>8A02705C-16BA-4F3D-A29A-E35D76B810C1</gtr:id><gtr:title>Linear Schemas for Program Dependence</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/E002919/1</gtr:grantReference><gtr:abstractText>Program schemas are a notation for representing an infinite set of computer programs all with the same syntactic structure. If a property of a program schema can be proved, this property will hold for every program in the infinite set of programs represented by the schema. Reasoning with schemas is, thus, a very powerful mechanism.As a result of their work in program slicing, the proposers found that program schema theory enabled them to precisely express the problems that they were tackling; namely the existence of statement minimal slicing algorithms at the `dataflow' level of abstraction. For such problems a class of schema which they called a `linear schema' was introduced. A linear schema is one in which no predicate or function symbol occurs more than once.Serendipitously, the proposers later discovered that the linearity condition helped in proving decidability of equivalence of schemas. Decidability of equivalence is the ability to automatically check whether two different schemas represent the same class of schemas. They proved that equivalence of conservative, free, linear schemas is decidable and later strengthened this by proving that equivalence of liberal, free linear schemas is decidable in polynomial time. This work represented significant progress in the field of schema theory after a hiatus of about thirty years. There is strong evidence that the imposition of this extra but natural condition of linearity (or partial forms of linearity) will lead to further decidability results in the theory of schemas.The proposers hope that their new results will lead to a re-appraisal of the substantial body of work in program schema theory and to further research its applications in a modern framework. This is one of the main motivations of this research proposal.Much static program transformation and analysis, in fact all analysis which uses data and control flow, takes place at the schema level of abstraction. This means the analysis of a program will produce the same results for all programs in its schema equivalence class. An important part of this research will be to investigate further the extent to which the large body of work on the theory of schemas is relevant to slicing in particular and to other forms of static program analysis and transformation in general.</gtr:abstractText><gtr:fund><gtr:end>2009-10-31</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2006-11-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>301452</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>37BBF05D-504A-48FC-B272-6B4C24AF93A9</gtr:id><gtr:title>Decidability of strong equivalence for subschemas of a class of linear, free, near-liberal program schemas</gtr:title><gtr:parentPublicationTitle>The Journal of Logic and Algebraic Programming</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/d6022c5224193361f484b65df31639ee"><gtr:id>d6022c5224193361f484b65df31639ee</gtr:id><gtr:otherNames>Danicic S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2011-01-01</gtr:date><gtr:outcomeId>doi_53cffbffb7b9e833</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>54151595-628A-4A5E-987A-99F398730CBB</gtr:id><gtr:title>A non-standard semantics for program slicing and dependence analysis</gtr:title><gtr:parentPublicationTitle>The Journal of Logic and Algebraic Programming</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/d6022c5224193361f484b65df31639ee"><gtr:id>d6022c5224193361f484b65df31639ee</gtr:id><gtr:otherNames>Danicic S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2007-01-01</gtr:date><gtr:outcomeId>doi_53cffbffb797d3d9</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>390409C3-1769-4CB6-8103-3A775E6FAC1E</gtr:id><gtr:title>Characterizing minimal semantics-preserving slices of function-linear, free, liberal program schemas</gtr:title><gtr:parentPublicationTitle>The Journal of Logic and Algebraic Programming</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/3a34f490e0e72c1b4a43db86c779ee48"><gtr:id>3a34f490e0e72c1b4a43db86c779ee48</gtr:id><gtr:otherNames>Laurence M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2007-01-01</gtr:date><gtr:outcomeId>doi_53cffbffb788c0fc</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>2B69CE08-A4CF-490F-83AA-8EA15804B36E</gtr:id><gtr:title>On the computational complexity of dynamic slicing problems for program schemas</gtr:title><gtr:parentPublicationTitle>Mathematical Structures in Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/5cd16fd07033a129ed92846d37f63dd1"><gtr:id>5cd16fd07033a129ed92846d37f63dd1</gtr:id><gtr:otherNames>DANICIC S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2011-01-01</gtr:date><gtr:outcomeId>doi_53d01301353aeb18</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>38EF33DB-3FA6-4664-8D8C-F63C3A6DA7EA</gtr:id><gtr:title>A trajectory-based strict semantics for program slicing</gtr:title><gtr:parentPublicationTitle>Theoretical Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/0053c7381b8b132daa5902c413529cf9"><gtr:id>0053c7381b8b132daa5902c413529cf9</gtr:id><gtr:otherNames>Barraclough R</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:outcomeId>doi_53d00c00c7b6a85f</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/E002919/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>25</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>E05CFE0B-163D-412D-A3C2-28E89B2CA336</gtr:id><gtr:percentage>75</gtr:percentage><gtr:text>Software Engineering</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>