<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/D1774113-D5D2-4B7C-A412-66A90FE4B96F"><gtr:id>D1774113-D5D2-4B7C-A412-66A90FE4B96F</gtr:id><gtr:name>University of Cambridge</gtr:name><gtr:department>Computer Laboratory</gtr:department><gtr:address><gtr:line1>Lensfield Road</gtr:line1><gtr:line4>Cambridge</gtr:line4><gtr:postCode>CB2 1EW</gtr:postCode><gtr:region>East of England</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/D1774113-D5D2-4B7C-A412-66A90FE4B96F"><gtr:id>D1774113-D5D2-4B7C-A412-66A90FE4B96F</gtr:id><gtr:name>University of Cambridge</gtr:name><gtr:address><gtr:line1>Lensfield Road</gtr:line1><gtr:line4>Cambridge</gtr:line4><gtr:postCode>CB2 1EW</gtr:postCode><gtr:region>East of England</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/A3F2E2EF-BB72-44D0-AB37-1B112443C885"><gtr:id>A3F2E2EF-BB72-44D0-AB37-1B112443C885</gtr:id><gtr:firstName>Samuel</gtr:firstName><gtr:surname>Staton</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FE042414%2F1"><gtr:id>91EC5FC9-8BE0-4213-BA2F-0C893C190579</gtr:id><gtr:title>Mathematical Operational Semantics for Data-Passing Processes</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Fellowship</gtr:grantCategory><gtr:grantReference>EP/E042414/1</gtr:grantReference><gtr:abstractText>Operational semantics is concerned with ascribing meaning to computer programs by formally describing their evolution. A formal description of a programming language is crucial if one is to prove properties of programs. One may wish to prove that a program meets a specification: for instance, that it has no security flaws; that it interacts correctly with other systems; or that the values it computes are correct. When one specifies an operational semantics for a programming language, it is usually necessary to prove some basic properties in order to ensure the validity of reasoning techniques. These properties have to be established for every new language that is considered, and whenever an existing language is changed.We use the term 'Mathematical Operational Semantics' (MOS) to describe the process of understanding techniques from operational semantics at an abstract level. A primary motivation for this line of research is that procedures from operational semantics, at times lengthy and ad hoc, can be understood from a basic structuralist viewpoint. A second, more pragmatic motivation is that theorems that are established at this abstract level have the chance of wider application in quite general contexts. With this second motivation in mind, it is helpful to see work in MOS as occuring at three levels. The highest, most abstract and general level, is concerned with theorems of category theory, which is a powerful framework for studying mathematical concepts and structures in an abstract and general way. The intermediate level involves devising category-theoretic models for particular kinds of system. The lowest level is the level at which most operational semanticists work, and involves particular logical frameworks for reasoning about particular systems.My proposal is to make progress at all three of these levels. I will take, as a case study, the data-passing process calculi. These calculi are basic programming languages for systems that involve concurrency and communication of structured data. For instance, if one allows the names of communication channels to themselves be communicated, then a kind of mobility arises. Another kind of structured data involves encryption; process calculi involving this kind of data have been used to model security aspects of systems.At the lowest, concrete level, the proposed work involves deriving new theorems about data-passing systems from the general results. To do this it will be necessary to investigate logical frameworks that are suitable for reasoning about data-passing systems. Frameworks of this sort are of interest to researchers in other fields, such as those interested in the formalisation of large scale programming systems. Theorems that will be extracted will be of the form: if a data-passing system is specified in a certain way, then certain properties will hold . The results will hold for data-passing systems in general. They will be tested against various semantics that have been proposed in the literature.Research at the intermediate level will involve category-theoretic models of data-passing. I will investigate the extent to which existing models and results can be considered in the category-theoretic domain. In this way the field of data-passing will be given a more unified theory.At the highest level of abstraction, my proposed work will involve devising abstract forms of some complex proof principles. I will focus on two topics: firstly, techniques for higher-order systems -- these are systems that can receive programs as data; secondly, I will investigate ways of combining proof techniques. This research will give rise to a better, more principled understanding of the processes involved in these proof methods, and will give rise to new, concrete techniques of immediate relevance to the operational semantics community.</gtr:abstractText><gtr:fund><gtr:end>2010-05-31</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2007-06-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>209201</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>The research results are of two kinds. First, the kind that I hoped for in achieving the objectives that I set out in my research proposal. We now have a good mathematical understanding of the semantics of data-passing process languages. (See e.g. my journal publication in Information and Computation; my LICS'08 paper; and my CALCO'09 paper.)



Secondly, the research led to important new techniques in two different areas: the semantics of local state (programs that allocate memory), and models of true concurrency. (See e.g. my MFPS'09 and FOSSACS 2010 papers on state, and my LICS'10 paper on event structures.) I am currently collaborating with researchers around Europe on these matters.</gtr:description><gtr:exploitationPathways>This is foundational research. I anticipate potential impact on programming language design and compiler optimizations. I am currently investigating this. This research provides a mathematical foundation for programming languages. I anticipate an impact on programming language design. The research could be used to help us to write clearer computer programs that don't go wrong. It could help us to design new programming languages that deal with concurrent computation.</gtr:exploitationPathways><gtr:id>214A78C4-2FBF-4599-A757-83ED2F0BD9E5</gtr:id><gtr:outcomeId>r_935645724977751770</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors><gtr:url>http://www.cl.cam.ac.uk/~ss368</gtr:url></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>B8F7A101-A63B-4A87-8859-FFC14A526A98</gtr:id><gtr:title>General Structural Operational Semantics through Categorical Logic</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/b171bb42f0d705378ab09cf94537d2ac"><gtr:id>b171bb42f0d705378ab09cf94537d2ac</gtr:id><gtr:otherNames>Staton S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2008-01-01</gtr:date><gtr:isbn>978-0-7695-3183-0</gtr:isbn><gtr:outcomeId>doi_53d05b05b25c1a33</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>3E7CFBBC-8604-4F81-BE9F-B3ABC25C6286</gtr:id><gtr:title>Linear usage of state</gtr:title><gtr:parentPublicationTitle>Logical Methods in Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/a09b8e8f1ffe6f685e8f2b46ca12b30e"><gtr:id>a09b8e8f1ffe6f685e8f2b46ca12b30e</gtr:id><gtr:otherNames>M?gelberg R</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:outcomeId>5675f8fb5846f</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>63CFA73A-4D2F-41EF-B4FD-490CA71A6132</gtr:id><gtr:title>Two Cotensors in One: Presentations of Algebraic Theories for Local State and Fresh Names</gtr:title><gtr:parentPublicationTitle>Electronic Notes in Theoretical Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/b171bb42f0d705378ab09cf94537d2ac"><gtr:id>b171bb42f0d705378ab09cf94537d2ac</gtr:id><gtr:otherNames>Staton S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2009-01-01</gtr:date><gtr:outcomeId>doi_53cff0ff0f573279</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>52EC589D-4E33-4038-8558-0AC69FD2FC8A</gtr:id><gtr:title>On the Expressivity of Symmetry in Event Structures</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/b171bb42f0d705378ab09cf94537d2ac"><gtr:id>b171bb42f0d705378ab09cf94537d2ac</gtr:id><gtr:otherNames>Staton S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:isbn>978-1-4244-7588-9</gtr:isbn><gtr:outcomeId>doi_53d05b05b2d895dc</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>B8B74199-885B-48C8-8ABD-3BBC0C9C2947</gtr:id><gtr:title>A congruence rule format for name-passing process calculi</gtr:title><gtr:parentPublicationTitle>Information and Computation</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/c539f9a73c607a68197ecf25a190fe2e"><gtr:id>c539f9a73c607a68197ecf25a190fe2e</gtr:id><gtr:otherNames>Fiore M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2009-01-01</gtr:date><gtr:outcomeId>doi_53cff6ff613893cd</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/E042414/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>