<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/C6D0044A-2CD2-4167-B90B-922AF53E361F"><gtr:id>C6D0044A-2CD2-4167-B90B-922AF53E361F</gtr:id><gtr:name>University of Kent</gtr:name><gtr:department>Sch of Computing</gtr:department><gtr:address><gtr:line1>The Registry</gtr:line1><gtr:line4>Canterbury</gtr:line4><gtr:line5>Kent</gtr:line5><gtr:postCode>CT2 7NZ</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/C6D0044A-2CD2-4167-B90B-922AF53E361F"><gtr:id>C6D0044A-2CD2-4167-B90B-922AF53E361F</gtr:id><gtr:name>University of Kent</gtr:name><gtr:address><gtr:line1>The Registry</gtr:line1><gtr:line4>Canterbury</gtr:line4><gtr:line5>Kent</gtr:line5><gtr:postCode>CT2 7NZ</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/F5CFDA8F-355C-4DCE-B6EC-35FC296F48AA"><gtr:id>F5CFDA8F-355C-4DCE-B6EC-35FC296F48AA</gtr:id><gtr:firstName>Matteo</gtr:firstName><gtr:surname>Migliavacca</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FN000110%2F1"><gtr:id>C64EA30C-1C62-4681-A63E-055BA64245DF</gtr:id><gtr:title>Unified Stream and Transaction Processing</gtr:title><gtr:status>Active</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/N000110/1</gtr:grantReference><gtr:abstractText>The diversity and complexity data-processing architectures, as used in current large scale e-commerce and social media applications, hinder the integration of new data analytics features and increase maintenance and operational costs. These applications typically span three different layers, each one adopting a different processing model. Online transaction processing (OLTP) systems are first used to access core application data in a synchronous fashion. In parallel, events of significance are propagated to back-ends for data analysis. There, events are stored to persistent storage for offline batch processing, e.g., using Hadoop clusters. Increasingly application providers are also deploying stream processing solutions to process data in near real-time and improve the freshness of data analysis. Results from batch or real-time analysis are then propagated back to serving layers in online front-end systems for applications that require them.

The fragmentation of application logic across the transaction, stream and batch processing models increases operational costs and application development time. Substantial engineering effort is required to export, move, convert, and import data across different systems when performing exploratory analytics for developing new applications. Developers do not have a reliable way of mapping application features on a specific processing model, re- lying on past experience and rule of thumb. Reimplementing complex processing pipelines in a system that adopts a different way of thinking is costly and the performance trade-offs among them are difficult to estimate.

The operation of multiple systems in parallel leads to increased operational costs. Operating different platforms either requires allocating computing resources statically to the different systems, which is not flexible, or to use cluster management platforms
such as Mesos or YARN. However to accommodate diverse systems these platforms necessarily provide a restricted management interface which limits their ability to operate on the basis of detailed application metrics.

The goal of this proposal is to unify two of these models, stream and transaction process- ing by i) exploring performance trade-offs between the two models, ii) designing a processing model that sup- ports both, iii) implementing a system prototype which could provide good performance on both transactional and stream processing workloads, and iv) prototyping mixed processing applications which requires both stream and transaction processing functionalities.</gtr:abstractText><gtr:potentialImpactText>Big Data is at the heart of current investments by both industry and governments. The international Big Data market is conservatively estimated at $30B in 2013 and expected to at least double over the next five years. Big Data is expected to benefit the UK economy by &amp;pound;216 billion and create 58,000 new jobs before 2017. The UK government has recognised Big Data as one of the Eight Great Technologies allocating to it &amp;pound;200M (over one third of the extra science funding in 2012 Autumn statement). EPSRC recognises Big Data as an &amp;quot;area of strategic importance for the UK&amp;quot; in the recent 2015-2016 delivery plan.

The explosive growth of Big Data applications has inevitably contributed to the large diversity of products and solutions which ultimately led to a &amp;quot;complexity wall&amp;quot; for the adoption of Big Data technologies. According to a recent study less than 0.2% of UK SMEs are using big data analytics and even in large organisations more than 20% of respondents admitted to have a poor or very poor understanding of Big Data.

By consolidating the existing processing models proposed we aim to reduce the complexity of parallel data processing and reduce the costs for their development, operation and maintenance.

The results of the project are highly relevant for big companies in the industrial context. As applications grow in scale and complexity the integration and interoperation of stream and transaction processing is becoming an increasing burden on developers. We are in contact with industrial partners who will benefit from the project and we will interact with them to present our results and receive their feedback. The software architecture at Facebook integrates both traditional RDBMS technology (MySQL) and data analytics stacks and stream processing: they would benefit from our results in terms of reducing the interoperability and management costs.

Spotify is the leading music discovery and streaming platform. Their platform generates Terabytes of user activity data eve day which are then processed to discover trending songs and artists, and to provide recommendations to new users. However moving data across the online production systems and the analytics frameworks takes several hours and requires the involvement of both the database team and the analytics engineers. Our contact expressed interest in the project as a way to reduce complexity and time for developing new processing pipelines as part of their analytics and recommendation engine.

The rising importance of hybrid models is also evidenced by R&amp;amp;D efforts worldwide. In the US substantial public and private investments are targeting the development of hybrid models: Microsoft is actively developing Naiad, integrating it with its product line; Spark developed at Berkeley thanks to both private and public funds is now actively developed by Databricks which raised $14M in 2013 from Andreessen Horowitz to productise the RDD model; S-Store is being developed as a joint effort by Intel Labs, MIT, Brown and CMU.</gtr:potentialImpactText><gtr:fund><gtr:end>2017-12-31</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2016-01-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>95456</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications/><gtr:identifiers><gtr:identifier type="RCUK">EP/N000110/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>50</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>E05CFE0B-163D-412D-A3C2-28E89B2CA336</gtr:id><gtr:percentage>50</gtr:percentage><gtr:text>Software Engineering</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>