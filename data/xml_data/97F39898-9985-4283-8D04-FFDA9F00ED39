<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/D1774113-D5D2-4B7C-A412-66A90FE4B96F"><gtr:id>D1774113-D5D2-4B7C-A412-66A90FE4B96F</gtr:id><gtr:name>University of Cambridge</gtr:name><gtr:department>Computer Laboratory</gtr:department><gtr:address><gtr:line1>Lensfield Road</gtr:line1><gtr:line4>Cambridge</gtr:line4><gtr:postCode>CB2 1EW</gtr:postCode><gtr:region>East of England</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/D1774113-D5D2-4B7C-A412-66A90FE4B96F"><gtr:id>D1774113-D5D2-4B7C-A412-66A90FE4B96F</gtr:id><gtr:name>University of Cambridge</gtr:name><gtr:address><gtr:line1>Lensfield Road</gtr:line1><gtr:line4>Cambridge</gtr:line4><gtr:postCode>CB2 1EW</gtr:postCode><gtr:region>East of England</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/52D62DB8-C7F7-4A79-BA4A-7DA253110770"><gtr:id>52D62DB8-C7F7-4A79-BA4A-7DA253110770</gtr:id><gtr:firstName>Lawrence</gtr:firstName><gtr:otherNames>Charles</gtr:otherNames><gtr:surname>Paulson</gtr:surname><gtr:orcidId>0000-0003-0288-4279</gtr:orcidId><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FI011005%2F1"><gtr:id>97F39898-9985-4283-8D04-FFDA9F00ED39</gtr:id><gtr:title>Automatic Proof Procedures for Polynomials and Special Functions</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/I011005/1</gtr:grantReference><gtr:abstractText>An engineering design is expected to satisfy safety constraints, many of which can be expressed as mathematical and logical formulas. Computer software exists that can check some such formulas automatically, but although they can have a large and complicated logical structure, the mathematical component currently has to be linear: in other words, involving nothing more complicated than addition. Real-world engineering problems involve sophisticated mathematical concepts, such as polynomials and transcendental functions.The investigators have developed software (called MetiTarski and RAHD) that can solve such problems in many cases. The current project will extend the scope of this software, increasing its power and targeting it at specific real-world application areas. One such application is analogue circuitry, which is widespread in consumer electronics. The project will investigate many other potential applications In engineering and the mathematical sciences.</gtr:abstractText><gtr:potentialImpactText>Who will benefit from this research? The project will deliver two open-source pieces of mathematical software: MetiTarski and RAHD. MetiTarski has potential applications throughout the engineering sector, and possibly in financial mathematics. RAHD will be a component of MetiTarski, and it also has scientific applications in its own right. The main target beneficiaries are engineering firms and particularly those devoted to high integrity systems. Both software tools also have potential applications to university mathematics teaching. How will they benefit from this research? MetiTarski has the potential to be useful in the design of hybrid and control systems, analogue circuits, and other areas of engineering that rely on differential equations or real valued special functions. Engineering firms may be able to design products more cheaply than before, conferring economic benefits. These products may also be safer than before, when simulation is replaced or supplemented by formal proof; therefore, a further benefit is enhanced public safety. What will be done to ensure that they benefit from this research? The project is designed from the outset to target the development of MetiTarski on the needs of potential users. We shall engage with experts from various industrial sectors to obtain problems and test data. In this way, limitations of MetiTarski and RAHD will be identified and addressed. We shall visit our engineering experts to exchange results. We shall present findings and demonstrate our software at conferences frequented by industrialists, in addition to the usual academic conferences. We shall also strive to make our software robust, well-documented and easy to use. We have a good track record with regard to Isabelle, which now has users across the developed world.</gtr:potentialImpactText><gtr:fund><gtr:end>2014-10-31</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2010-11-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>533182</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>One of our primary goals is to deliver our technology in the form of software tools, in particular, our theorem-prover MetiTarski. Version 1.9 was released to the research community in August 2011, and a dramatically more powerful Version 2.0 was released in the first half of 2012. Version 2.4 was released in October 2014.

We have made fundamental discoveries about how such software should be built for best performance, in particular through our investigations of backtracking and through special modifications of the decision procedures that we call. We are also making progress on applications of this software in control engineering, for example, to prove stability. We have developed new technology for this purpose. Other work has examined the role of machine learning in supporting computer algebra generally.</gtr:description><gtr:exploitationPathways>Integration with the PVS proof assistant makes it available to users such as NASA. MetiTarski is also integrated with the KeYmaera hybrid system verifier and the Why3 program verifier. Copies of MetiTarski are downloaded regularly.</gtr:exploitationPathways><gtr:id>ABBE5B4E-1DDC-4D11-BF98-8FB5D79E3BED</gtr:id><gtr:outcomeId>r-3116957119.77496577739e18</gtr:outcomeId><gtr:sectors><gtr:sector>Aerospace, Defence and Marine,Digital/Communication/Information Technologies (including Software),Education,Transport</gtr:sector></gtr:sectors><gtr:url>http://www.cl.cam.ac.uk/~lp15/papers/Arith/index.html</gtr:url></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs><gtr:softwareAndTechnicalProductOutput><gtr:description>A major new release of our theorem proving software. This version can be used with a greater number of external tools (including Mathematica and Z3). It is much more powerful than before, and can finally be built on Windows machines.</gtr:description><gtr:id>780AAE17-7F4C-4756-BB7A-5353A93F5B54</gtr:id><gtr:impact>Used at many research centres, including NASA Langley.</gtr:impact><gtr:outcomeId>r-7578734892.959466fd5b42c</gtr:outcomeId><gtr:title>MetiTarski version 2.0</gtr:title><gtr:type>Software</gtr:type><gtr:url>http://www.cl.cam.ac.uk/~lp15/papers/Arith/</gtr:url><gtr:yearFirstProvided>2012</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput></gtr:softwareAndTechnicalProductOutputs><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>846014C7-601F-4939-B355-78C7BE113963</gtr:id><gtr:title>The Higher-Order Prover Leo-II</gtr:title><gtr:parentPublicationTitle>Journal of Automated Reasoning</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/2406069d98243949208c4a5df84966e3"><gtr:id>2406069d98243949208c4a5df84966e3</gtr:id><gtr:otherNames>Benzm?ller C</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>5675ef22994a2</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>004D1DAE-A5F1-4677-A44C-C15547C3B08C</gtr:id><gtr:title>Machine Learning for First-Order Theorem Proving</gtr:title><gtr:parentPublicationTitle>Journal of Automated Reasoning</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/bb9ac1eda8114274d53b934b3b85343d"><gtr:id>bb9ac1eda8114274d53b934b3b85343d</gtr:id><gtr:otherNames>Bridge J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:outcomeId>54482900a69b36.25523384</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>51DF312E-64FA-4851-8477-F2890B20183C</gtr:id><gtr:title>A Vision of Collaborative Verification-Driven Engineering of Hybrid Systems</gtr:title><gtr:parentPublicationTitle>Proceedings of Enabling Domain Experts to use Formalised Reasoning - Symposium AISB, Do-Form</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/e44d3328024f9537ad72d8e456925b40"><gtr:id>e44d3328024f9537ad72d8e456925b40</gtr:id><gtr:otherNames>Mitsch, s</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:outcomeId>545b567956f613.83418729</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>F4342165-7FA7-4DDB-80D6-2C3067AF23F5</gtr:id><gtr:title>Collaborative Verification-Driven Engineering of Hybrid Systems</gtr:title><gtr:parentPublicationTitle>Mathematics in Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/09c82538d2f40c6609311cc8f5ba59c5"><gtr:id>09c82538d2f40c6609311cc8f5ba59c5</gtr:id><gtr:otherNames>Mitsch S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:outcomeId>545b55525cddf6.67782764</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>349D944F-7740-4F92-860D-6AFCD96DEC32</gtr:id><gtr:title>Deciding Univariate Polynomial Problems Using Untrusted Certificates in Isabelle/HOL</gtr:title><gtr:parentPublicationTitle>Journal of Automated Reasoning</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/ce73e661495882f5061c864c6e2c1985"><gtr:id>ce73e661495882f5061c864c6e2c1985</gtr:id><gtr:otherNames>Li W</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>5a2fe5d2a9f4b8.25988105</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>8D3ED4BD-692C-4495-B7AC-D8B2977031B6</gtr:id><gtr:title>A hierarchy of proof rules for checking positive invariance of algebraic and semi-algebraic sets</gtr:title><gtr:parentPublicationTitle>Computer Languages, Systems &amp; Structures</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/3f4c38c728c878d5c0475341899042ad"><gtr:id>3f4c38c728c878d5c0475341899042ad</gtr:id><gtr:otherNames>Ghorbal K</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>56de8b9f65b381.82030472</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>2603DE93-0FCD-4BD3-A65D-ABB46B821FA5</gtr:id><gtr:title>Using Machine Learning to Decide When to Precondition Cylindrical Algebraic Decomposition with Groebner Bases</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/d679dbb922b3259a9121cc6089b55e91"><gtr:id>d679dbb922b3259a9121cc6089b55e91</gtr:id><gtr:otherNames>Huang Z</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>589898ec242951.34788508</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>96735F36-790D-4B7D-8EFF-1ACD57A02E9D</gtr:id><gtr:title>Case Splitting in an Automatic Theorem Prover for Real-Valued Special Functions</gtr:title><gtr:parentPublicationTitle>Journal of Automated Reasoning</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/bb9ac1eda8114274d53b934b3b85343d"><gtr:id>bb9ac1eda8114274d53b934b3b85343d</gtr:id><gtr:otherNames>Bridge J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:outcomeId>doi_53cfdcfdc1437426</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>31E19C77-D112-4EDB-ADFD-5EAA0B36FAF6</gtr:id><gtr:title>A MACHINE-ASSISTED PROOF OF G&amp;Ouml;DEL'S INCOMPLETENESS THEOREMS FOR THE THEORY OF HEREDITARILY FINITE SETS</gtr:title><gtr:parentPublicationTitle>The Review of Symbolic Logic</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/0aff2051829a4603a9713a6fa00f9986"><gtr:id>0aff2051829a4603a9713a6fa00f9986</gtr:id><gtr:otherNames>PAULSON L</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:outcomeId>5448290072d430.85358564</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/I011005/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>70</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>E05CFE0B-163D-412D-A3C2-28E89B2CA336</gtr:id><gtr:percentage>10</gtr:percentage><gtr:text>Software Engineering</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>1E31C833-3A35-4F54-A499-31D0C245B5D5</gtr:id><gtr:percentage>20</gtr:percentage><gtr:text>System on Chip</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>