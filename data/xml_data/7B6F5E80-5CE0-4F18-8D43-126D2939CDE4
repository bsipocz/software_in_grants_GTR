<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/818CD6C9-61EE-41F2-9F37-0C7A8F43E25D"><gtr:id>818CD6C9-61EE-41F2-9F37-0C7A8F43E25D</gtr:id><gtr:name>University of Birmingham</gtr:name><gtr:department>School of Computer Science</gtr:department><gtr:address><gtr:line1>Edgbaston Park Road</gtr:line1><gtr:line2>Edgbaston</gtr:line2><gtr:postCode>B15 2TT</gtr:postCode><gtr:region>West Midlands</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/818CD6C9-61EE-41F2-9F37-0C7A8F43E25D"><gtr:id>818CD6C9-61EE-41F2-9F37-0C7A8F43E25D</gtr:id><gtr:name>University of Birmingham</gtr:name><gtr:address><gtr:line1>Edgbaston Park Road</gtr:line1><gtr:line2>Edgbaston</gtr:line2><gtr:postCode>B15 2TT</gtr:postCode><gtr:region>West Midlands</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/32240E45-0BDE-4BEB-A422-4DBC07AE912D"><gtr:id>32240E45-0BDE-4BEB-A422-4DBC07AE912D</gtr:id><gtr:firstName>David</gtr:firstName><gtr:surname>Parker</gtr:surname><gtr:orcidId>0000-0003-4137-8862</gtr:orcidId><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FK038575%2F1"><gtr:id>7B6F5E80-5CE0-4F18-8D43-126D2939CDE4</gtr:id><gtr:title>Automated Game-Theoretic Verification of Security Systems</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/K038575/1</gtr:grantReference><gtr:abstractText>We are surrounded by computerised systems, upon whose secure and reliable operation we are increasingly dependent. Yet flaws in these systems are common, from power plants to travel cards, and these come at high costs for individuals, companies and governments alike. So, rigorous, mathematically-sound techniques to check the security of computerised systems are essential. Security, though, is not absolute: we may only be able to guarantee that an attack on a system is possible with low probability, rather than impossible. Furthermore, system designs often need to trade off the degree of security or privacy offered against other practical concerns such as response time or power consumption. So, effective methods for the analysis of security also need to take these quantitative aspects into account.

This project will develop fully-automated techniques to formally verify the correctness of security systems, to identify flaws in their operation, and to fix or optimise aspects of their design. We will do so by bringing together techniques from several different areas: (i) game-theoretic methods, to reason about the interactions between a security system and its potential attackers; and (ii) automated verification and synthesis techniques, with a particular emphasis on quantitative aspects such as probability or resource usage. Building upon recent advances in these fields, and upon existing efforts to create efficient and scalable verification methods, this project will develop novel techniques to verify security systems, implement them in freely-available software tools and apply them to a variety of security applications, from electronic voting schemes to anonymous communication networks.</gtr:abstractText><gtr:potentialImpactText>The goals of the project are to produce tools and techniques that can be used to verify security properties of, or identify potential flaws in, a variety of computerised systems. Such flaws occur relatively frequently, often at high cost to individuals, businesses or governments. Prominent UK examples include recent flaws in the security for e-passports and London's Oyster card ticketing system. So, improving the degree of security and privacy offered by these systems yields both economic and societal impacts. 

The outputs of the project will also help to verify system correctness in emerging applications of technology in which security and privacy are essential. In particular, we will aim to apply our techniques to the design of electronic voting schemes, an area that is attracting an increasing amount of interest, but where key challenges remain in terms of security. 

The key to achieving impact in these directions is to put usable techniques and tools in the hands of practitioners who develop computerised security systems. As a first step, we will develop and make publicly available open source software tools and accompanying resources, resulting from the outputs of the project. We will also aim to liaise directly with system designers. As a concrete example, we will work with the &amp;quot;Pret a Voter&amp;quot; team, who are designing, analysing and deploying verifiably correct voting schemes.</gtr:potentialImpactText><gtr:fund><gtr:end>2014-11-03</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2013-11-04</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>98761</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>The project has developed several new techniques for formally verifying the correctness of computerised systems or, conversely, for identifying flaws in their design. The focus has been on the analysis of systems with probabilistic behaviour (for example, due to hardware or communication failures, or the use of randomisation) and which involve one or more players/agents (modelled as stochastic games or Markov decisions processes).

Specific techniques developed included:

- 'permissive controller synthesis' - a way to synthesise a flexible control strategy that guarantees correct or safe behaviour of a system, regardless of the possible behaviour of a malicious environment or attacker [TACAS'14, LMCS'15]

- scalable techniques, based on learning algorithms and heuristic search, for synthesising (or checking the absence of) control strategies (or attacks against them) [ATVA'14]

- verification methods for systems involving probabilistic behaviour, real-time characteristics (time-outs, delays) and partial observability (secret data or variables) [FORMATS'15]

- probabilistic verification techniques based on the synthesis of (approximate) Nash equilibria, representing the trade-offs achievable between players/agents with conflicting objectives (e.g. attackers/defenders)

These techniques have been implemented in extensions of the widely used, open-source probabilistic verification software tool PRISM (www.prismmodelchecker.org). They have then been applied to the analysis of a variety of computerised systems, including (of particular relevance for this project) several in the domain of computer security: covert channel prevention schemes, non-repudiation protocols and network anonymity protocols.</gtr:description><gtr:exploitationPathways>Through the inclusion of our techniques in publicly available software tools, we anticipate them to be used by other practitioners, both academic and non-academic. The techniques developed are also of interest for the analysis of computerised systems across many domains, not just computer security.</gtr:exploitationPathways><gtr:id>0FBE303D-5632-4377-823E-8EEF00F51364</gtr:id><gtr:outcomeId>5462a0e249a8e0.09217959</gtr:outcomeId><gtr:sectors><gtr:sector>Security and Diplomacy</gtr:sector></gtr:sectors><gtr:url>http://www.cs.bham.ac.uk/~parkerdx/projects/epsrc-gamesec/</gtr:url></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs><gtr:softwareAndTechnicalProductOutput><gtr:description>PRISM is a probabilistic model checker, a tool for formal modelling and analysis of systems that exhibit random or probabilistic behaviour. It has been used to analyse systems from many different application domains, including communication and multimedia protocols, randomised distributed algorithms, security protocols, biological systems and many others.</gtr:description><gtr:id>FE3361EE-D97C-45B3-8CBA-82BBC8D81B4A</gtr:id><gtr:impact>? Used for research and teaching in 70+ institutions worldwide and downloaded 43,000 times
? Used in industrial projects/labs (TRW automotive, Fujitsu, AAB, Microsoft, NASA, Honeywell)
? The last two PRISM tool papers have more than 1000 citations combined
? There are over 400 published papers relating to PRISM, more than 250 of which are external</gtr:impact><gtr:outcomeId>5462a6f118f655.16246297</gtr:outcomeId><gtr:title>PRISM</gtr:title><gtr:type>Software</gtr:type><gtr:url>http://www.prismmodelchecker.org/</gtr:url><gtr:yearFirstProvided>2014</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput></gtr:softwareAndTechnicalProductOutputs><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>F0AE2927-5FA7-4A17-A835-9C1F81465EB8</gtr:id><gtr:title>Verification and control of partially observable probabilistic systems</gtr:title><gtr:parentPublicationTitle>Real-Time Systems</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/46fbd16cf76821f262f59f64f1501980"><gtr:id>46fbd16cf76821f262f59f64f1501980</gtr:id><gtr:otherNames>Norman G</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>5a8bf4b265e0e3.46987478</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>53633D39-1191-4348-8E74-0E0D63DF348D</gtr:id><gtr:title>Permissive Controller Synthesis for Probabilistic Systems</gtr:title><gtr:parentPublicationTitle>Logical Methods in Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/dfa61a4daecaa00c64deaa1ce0736b3c"><gtr:id>dfa61a4daecaa00c64deaa1ce0736b3c</gtr:id><gtr:otherNames>Drager K</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>5675f7fb163ce</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/K038575/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>D7BA1404-E001-4782-929E-E96E28B01201</gtr:id><gtr:percentage>20</gtr:percentage><gtr:text>Computer Sys. &amp; Architecture</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>80</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>