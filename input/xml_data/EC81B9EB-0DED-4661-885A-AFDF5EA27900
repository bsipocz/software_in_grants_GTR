<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations><gtr:collaborator url="http://gtr.ukri.org:80/organisation/C0E4FAD2-3C8B-410A-B6DF-3B9B9E433060"><gtr:id>C0E4FAD2-3C8B-410A-B6DF-3B9B9E433060</gtr:id><gtr:name>University of St Andrews</gtr:name><gtr:address><gtr:line1>College Gate</gtr:line1><gtr:line4>St. Andrews</gtr:line4><gtr:line5>Fife</gtr:line5><gtr:postCode>KY16 9AJ</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address></gtr:collaborator><gtr:collaborator url="http://gtr.ukri.org:80/organisation/2DB7ED73-8E89-457A-A395-FAC12F929C1A"><gtr:id>2DB7ED73-8E89-457A-A395-FAC12F929C1A</gtr:id><gtr:name>University of Edinburgh</gtr:name><gtr:address><gtr:line1>Old College</gtr:line1><gtr:line2>South Bridge</gtr:line2><gtr:line3>Mayfield Road</gtr:line3><gtr:line4>Edinburgh</gtr:line4><gtr:postCode>EH8 9YL</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address></gtr:collaborator><gtr:collaborator url="http://gtr.ukri.org:80/organisation/F7E13617-2678-475B-99E4-31479C92038D"><gtr:id>F7E13617-2678-475B-99E4-31479C92038D</gtr:id><gtr:name>University of Aberdeen</gtr:name><gtr:address><gtr:line1>University Office</gtr:line1><gtr:line2>Regent Walk</gtr:line2><gtr:line4>Aberdeen</gtr:line4><gtr:line5>Aberdeenshire</gtr:line5><gtr:postCode>AB24 3FX</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address></gtr:collaborator></gtr:collaborations><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/E5A82D2C-5AD4-488A-ACFF-566345A5D6DA"><gtr:id>E5A82D2C-5AD4-488A-ACFF-566345A5D6DA</gtr:id><gtr:name>Heriot-Watt University</gtr:name><gtr:department>S of Mathematical and Computer Sciences</gtr:department><gtr:address><gtr:line1>Administration Building</gtr:line1><gtr:line2>Riccarton</gtr:line2><gtr:line3>Ricarton</gtr:line3><gtr:line4>Currie</gtr:line4><gtr:postCode>EH14 4AS</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/E5A82D2C-5AD4-488A-ACFF-566345A5D6DA"><gtr:id>E5A82D2C-5AD4-488A-ACFF-566345A5D6DA</gtr:id><gtr:name>Heriot-Watt University</gtr:name><gtr:address><gtr:line1>Administration Building</gtr:line1><gtr:line2>Riccarton</gtr:line2><gtr:line3>Ricarton</gtr:line3><gtr:line4>Currie</gtr:line4><gtr:postCode>EH14 4AS</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/C0E4FAD2-3C8B-410A-B6DF-3B9B9E433060"><gtr:id>C0E4FAD2-3C8B-410A-B6DF-3B9B9E433060</gtr:id><gtr:name>University of St Andrews</gtr:name><gtr:address><gtr:line1>College Gate</gtr:line1><gtr:line4>St. Andrews</gtr:line4><gtr:line5>Fife</gtr:line5><gtr:postCode>KY16 9AJ</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>COLLABORATOR</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/2DB7ED73-8E89-457A-A395-FAC12F929C1A"><gtr:id>2DB7ED73-8E89-457A-A395-FAC12F929C1A</gtr:id><gtr:name>University of Edinburgh</gtr:name><gtr:address><gtr:line1>Old College</gtr:line1><gtr:line2>South Bridge</gtr:line2><gtr:line3>Mayfield Road</gtr:line3><gtr:line4>Edinburgh</gtr:line4><gtr:postCode>EH8 9YL</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>COLLABORATOR</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/F7E13617-2678-475B-99E4-31479C92038D"><gtr:id>F7E13617-2678-475B-99E4-31479C92038D</gtr:id><gtr:name>University of Aberdeen</gtr:name><gtr:address><gtr:line1>University Office</gtr:line1><gtr:line2>Regent Walk</gtr:line2><gtr:line4>Aberdeen</gtr:line4><gtr:line5>Aberdeenshire</gtr:line5><gtr:postCode>AB24 3FX</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>COLLABORATOR</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/32CE70A0-638E-41E7-B46E-BCFBAA642949"><gtr:id>32CE70A0-638E-41E7-B46E-BCFBAA642949</gtr:id><gtr:firstName>Phil</gtr:firstName><gtr:surname>Trinder</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/4D03ED09-8ED9-4337-AC16-ABDFF6107944"><gtr:id>4D03ED09-8ED9-4337-AC16-ABDFF6107944</gtr:id><gtr:firstName>Hans-Wolfgang</gtr:firstName><gtr:surname>Loidl</gtr:surname><gtr:orcidId>0000-0001-6318-1732</gtr:orcidId><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FG05553X%2F1"><gtr:id>EC81B9EB-0DED-4661-885A-AFDF5EA27900</gtr:id><gtr:title>HPC-GAP: High Performance Computational Algebra and Discrete Mathematics</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/G05553X/1</gtr:grantReference><gtr:abstractText>This project will reengineer existing, and widely used software for computation in algebra and discrete mathematics to take advantage of the power of current and future high-performance computers. Our main focus is on the GAP system and the more recent SymGridPar middleware, which provide flexible and effective computation on single processors and small clusters. We will adapt the software to efficiently use large clusters of multi-core processors to perform larger computations. To demonstrate the effectiveness of our adaptations we will apply our new software to problems from a number of important areas of pure mathematics.</gtr:abstractText><gtr:fund><gtr:end>2013-10-14</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2009-10-15</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>366253</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs><gtr:collaborationOutput><gtr:collaboratingOrganisation>University of St Andrews</gtr:collaboratingOrganisation><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:department>Centre for Interdisciplinary Research in Computational Algebra (CIRCA)</gtr:department><gtr:description>HPCGAP project partner collaboration</gtr:description><gtr:id>67B10EF9-2EF0-409A-A301-3571A2060A9B</gtr:id><gtr:impact>The main outcomes of this collaboration are detailed in this submission to ResearchFish.</gtr:impact><gtr:outcomeId>546243c8b0a209.64666772-1</gtr:outcomeId><gtr:partnerContribution>The partners contributed to the collaboration on the topics computational algebra systems (Univ St Andrews), algorithms for symbolic computation (Univ Aberdeen), and super-computing software and hardware expertise (EPCC), as detailed in the HPCGAP project proposal.</gtr:partnerContribution><gtr:piContribution>We contributed to this project collaboration mainly on the topics of languages and systems for parallel computing, as detailed in the HPCGAP project proposal.</gtr:piContribution><gtr:sector>Academic/University</gtr:sector><gtr:start>2009-01-01</gtr:start></gtr:collaborationOutput><gtr:collaborationOutput><gtr:collaboratingOrganisation>University of Aberdeen</gtr:collaboratingOrganisation><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:department>Mathematics Department</gtr:department><gtr:description>HPCGAP project partner collaboration</gtr:description><gtr:id>7130E456-15EF-448E-9868-488DEEDE0509</gtr:id><gtr:impact>The main outcomes of this collaboration are detailed in this submission to ResearchFish.</gtr:impact><gtr:outcomeId>546243c8b0a209.64666772-2</gtr:outcomeId><gtr:partnerContribution>The partners contributed to the collaboration on the topics computational algebra systems (Univ St Andrews), algorithms for symbolic computation (Univ Aberdeen), and super-computing software and hardware expertise (EPCC), as detailed in the HPCGAP project proposal.</gtr:partnerContribution><gtr:piContribution>We contributed to this project collaboration mainly on the topics of languages and systems for parallel computing, as detailed in the HPCGAP project proposal.</gtr:piContribution><gtr:sector>Academic/University</gtr:sector><gtr:start>2009-01-01</gtr:start></gtr:collaborationOutput><gtr:collaborationOutput><gtr:collaboratingOrganisation>University of Edinburgh</gtr:collaboratingOrganisation><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:department>Edinburgh Parallel Computing Centre (EPCC)</gtr:department><gtr:description>HPCGAP project partner collaboration</gtr:description><gtr:id>F85EE8BC-3A8B-4D28-848F-11F37C3E3D23</gtr:id><gtr:impact>The main outcomes of this collaboration are detailed in this submission to ResearchFish.</gtr:impact><gtr:outcomeId>546243c8b0a209.64666772-3</gtr:outcomeId><gtr:partnerContribution>The partners contributed to the collaboration on the topics computational algebra systems (Univ St Andrews), algorithms for symbolic computation (Univ Aberdeen), and super-computing software and hardware expertise (EPCC), as detailed in the HPCGAP project proposal.</gtr:partnerContribution><gtr:piContribution>We contributed to this project collaboration mainly on the topics of languages and systems for parallel computing, as detailed in the HPCGAP project proposal.</gtr:piContribution><gtr:sector>Academic/University</gtr:sector><gtr:start>2009-01-01</gtr:start></gtr:collaborationOutput></gtr:collaborationOutputs><gtr:disseminationOutputs><gtr:disseminationOutput><gtr:description>Reliable Scalabe Symbolic Computation: The Design of SymGridPar2.</gtr:description><gtr:form>A talk or presentation</gtr:form><gtr:geographicReach>International</gtr:geographicReach><gtr:id>87D0B997-11FE-4106-9C04-BAD1C3D05D65</gtr:id><gtr:impact>The talk presented our research on high-level languages for parallel programming to the super-computing community and resulted in discussions with potential users of our language and software technology.

The talk resulted in further interest in our research with requests for more information. The feedback from the discussions with the super-computing community fed into our research of applying the software to a concrete super-computer (HECToR at EPCC) which led to a high-profile publication (DOI:10.1007/978-3-319-09873-9_35)</gtr:impact><gtr:outcomeId>546131d0823246.38122843</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Professional Practitioners</gtr:primaryAudience><gtr:url>http://www.easc2013.org.uk/easc2013-solving-software-challenges-exascale</gtr:url><gtr:year>2013</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>GUMSMP: a multilevel parallel Haskell implementation (HIW14 talk)</gtr:description><gtr:form>A talk or presentation</gtr:form><gtr:geographicReach>International</gtr:geographicReach><gtr:id>2A02B3A8-50E5-484E-AA00-951D05869BB1</gtr:id><gtr:impact>The presentation sparked interest in our software technology among the very active community of Haskell implementors.

The presentation resulted in concrete requests for availability and usage of the software technology.</gtr:impact><gtr:outcomeId>54612fa7563ab4.61030416</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Other academic audiences (collaborators, peers etc.)</gtr:primaryAudience><gtr:url>https://www.haskell.org/haskellwiki/HaskellImplementorsWorkshop/2014</gtr:url><gtr:year>2014</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>Distributed vs. Shared Heap on Shared Memory Machines</gtr:description><gtr:form>A talk or presentation</gtr:form><gtr:geographicReach>International</gtr:geographicReach><gtr:id>D8C02EAB-8F8E-42EA-BA9E-F19A9946FD05</gtr:id><gtr:impact>The talk presented a paper, subsequently accepted for publication in &amp;quot;TFP'14: Symposium on Trends in Functional Programming&amp;quot;, but not yet formally published at the time of writing.

The talk resulted in strong interest in the research findings, beyond the immediate software technology used in these measurements.</gtr:impact><gtr:outcomeId>5461335c781f68.71505993</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:presentationType>paper presentation</gtr:presentationType><gtr:primaryAudience>Professional Practitioners</gtr:primaryAudience><gtr:url>http://www.cs.uu.nl/wiki/TFP2014/WebHome</gtr:url><gtr:year>2014</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>Haskell distributed parallel Haskell (HIW lightning talk)</gtr:description><gtr:form>A talk or presentation</gtr:form><gtr:geographicReach>International</gtr:geographicReach><gtr:id>295B6514-6B86-4B19-B946-559A68D06067</gtr:id><gtr:impact>A brief overview over the current status of Haskell distributed parallel Haskell (HdpH) at the Haskell Implementors Workshop (HIW).



Audience: Haskell programmers from academia and industry.

The talk resulted in increased interest in and requests for the software technology presented.</gtr:impact><gtr:outcomeId>r-2216654282.2650210c07f842</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:presentationType>paper presentation</gtr:presentationType><gtr:primaryAudience>Professional Practitioners</gtr:primaryAudience><gtr:url>https://www.haskell.org/haskellwiki/HaskellImplementorsWorkshop/2012</gtr:url><gtr:year>2012</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>Seq no more: Better Strategies for Parallel Haskell (SPLS talk)</gtr:description><gtr:form>A talk or presentation</gtr:form><gtr:geographicReach>Regional</gtr:geographicReach><gtr:id>00179E8D-D3C9-4DEF-BF6C-36EAA1AC5646</gtr:id><gtr:impact>Presentation of results of Haskell '10 paper &amp;quot;Seq no more: Better Strategies for Parallel Haskell&amp;quot; at the Scottish Programming Languages Seminar (SLPS).



Audience: Programming languages researchers, mostly academic, some from industrial research labs.

The talk resulted in discussions around and interest in the software technology presented in the paper. The talk was geared towards academics and experts in the area of high-level parallel programming.</gtr:impact><gtr:outcomeId>r-5667485776.9789970ba5cd5c</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:presentationType>paper presentation</gtr:presentationType><gtr:primaryAudience>Professional Practitioners</gtr:primaryAudience><gtr:year>2010</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>Haskell distributed parallel Haskell (EdLambda talk)</gtr:description><gtr:form>A talk or presentation</gtr:form><gtr:geographicReach>Regional</gtr:geographicReach><gtr:id>ED68B9F4-0EA2-4B9F-82C2-3D719C1DD561</gtr:id><gtr:impact>Presentation of the design and prototype implementation of Haskell distributed parallel Haskell (HdpH) at EdLambda, an informal monthly meetup for programming enthusiasts. The talk covers largely the contents of the IFL '11 paper &amp;quot;Implementing a High-level Distributed-Memory parallel Haskell in Haskell&amp;quot;, and reports additional experiments.



Audience: Programmers and programming languages researchers from academia and industry.

The talk served to disseminate information on language design for high-level parallel programming, to a professional audience with increasing interest in this topic.</gtr:impact><gtr:outcomeId>r-5222766553.2592370bf9a47c</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Professional Practitioners</gtr:primaryAudience><gtr:url>http://www.edlambda.co.uk/</gtr:url><gtr:year>2012</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>Haskell distributed parallel Haskell (SPLS talk)</gtr:description><gtr:form>A talk or presentation</gtr:form><gtr:geographicReach>Regional</gtr:geographicReach><gtr:id>ABA3BFFC-0351-411C-BAA7-16C09DE1D040</gtr:id><gtr:impact>Presentation of the design and prototype implementation of Haskell distributed parallel Haskell (HdpH) at the Scottish Programming Languages Seminar (SLPS). The talk covers largely the contents of the IFL '11 paper: Implementing a High-level Distributed-Memory parallel Haskell in Haskell.



Audience: Programming languages researchers.
.

The presentation resulted in requests for more information and building an interest group around language design issues.</gtr:impact><gtr:outcomeId>r-1731795381.50485180bc443cc</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:presentationType>paper presentation</gtr:presentationType><gtr:primaryAudience>Professional Practitioners</gtr:primaryAudience><gtr:url>http://www.dcs.gla.ac.uk/research/spls/Nov11/index.html</gtr:url><gtr:year>2011</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>Finding Matrices of Invariant Bilinear Forms in the Representation  Theory of Hecke Algebras.</gtr:description><gtr:form>A talk or presentation</gtr:form><gtr:geographicReach>International</gtr:geographicReach><gtr:id>1F92B0FE-9412-4C00-86D8-9657E3BF19B9</gtr:id><gtr:impact>The presentation informed about a case study of using our software technology in the domain of parallel symbolic computation

The presentation sparked interest in our software technology among the core user-base of the GAP system and generated requests for further information and practical usage.</gtr:impact><gtr:outcomeId>54612eb7c09bd1.27684987</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Other academic audiences (collaborators, peers etc.)</gtr:primaryAudience><gtr:url>http://www.gap-system.org/hpcgap2013/</gtr:url><gtr:year>2013</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>Better Strategies for Parallel Haskell (SPARC-M talk)</gtr:description><gtr:form>A talk or presentation</gtr:form><gtr:geographicReach>Regional</gtr:geographicReach><gtr:id>263D09C5-C1D5-42D8-9E70-35E31DDE1A48</gtr:id><gtr:impact>Presentation of results of Haskell '10 paper &amp;quot;Seq no more: Better Strategies for Parallel Haskell&amp;quot; at the SICSA/NAIS Scottish Parallel Computational Mathematics Meeting (SPARC-M).



Audience: Computer scientist and mathematicions.

The presentation sparked interest in the concrete software technology for high-level parallel programming.</gtr:impact><gtr:outcomeId>r-6090804157.8631890bc44278</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:presentationType>paper presentation</gtr:presentationType><gtr:primaryAudience>Professional Practitioners</gtr:primaryAudience><gtr:url>http://www.macs.hw.ac.uk/~dsg/events/sparc-m/hwu11.html</gtr:url><gtr:year>2011</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>The Implementation of the HdpH DSLs: Details and Difficulties (HIW14 talk)</gtr:description><gtr:form>A talk or presentation</gtr:form><gtr:geographicReach>International</gtr:geographicReach><gtr:id>B006A3E6-67AD-4F26-8685-D13D574A7E0F</gtr:id><gtr:impact>The talk disseminated technical information on the development of our software technology (HdpH).

The talk started discussions around sharing technologies for high-level parallel programming, as documented on the web page below.</gtr:impact><gtr:outcomeId>54612ac88075d4.79403676</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Other academic audiences (collaborators, peers etc.)</gtr:primaryAudience><gtr:url>https://ghc.haskell.org/trac/ghc/blog/simonpj/StaticPointers</gtr:url><gtr:year>2014</gtr:year></gtr:disseminationOutput></gtr:disseminationOutputs><gtr:exploitationOutputs/><gtr:furtherFundingOutputs><gtr:furtherFundingOutput><gtr:amountPounds>294007</gtr:amountPounds><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:currCode>GBP</gtr:currCode><gtr:currCountryCode>United Kingdom</gtr:currCountryCode><gtr:currLang>en_GB</gtr:currLang><gtr:description>Partner in a Collaborative Computational Project (CCP) (Project: CoDiMa &amp;quot;Computational Discrete Mathematics&amp;quot;)</gtr:description><gtr:end>2020-03-02</gtr:end><gtr:fundingOrg>Engineering and Physical Sciences Research Council (EPSRC)</gtr:fundingOrg><gtr:fundingRef>EP/M022641/1</gtr:fundingRef><gtr:id>F1AC110D-A8CF-486B-A5A6-72648C73390A</gtr:id><gtr:outcomeId>56e025cb9593c9.23889398</gtr:outcomeId><gtr:sector>Academic/University</gtr:sector><gtr:start>2015-03-01</gtr:start></gtr:furtherFundingOutput><gtr:furtherFundingOutput><gtr:amountPounds>25000</gtr:amountPounds><gtr:country>European Union (EU)</gtr:country><gtr:currCode>GBP</gtr:currCode><gtr:currCountryCode>United Kingdom</gtr:currCountryCode><gtr:currLang>en_GB</gtr:currLang><gtr:description>CALCIUM: Computer Algebra on Cloud Infrastructures</gtr:description><gtr:end>2012-05-02</gtr:end><gtr:fundingOrg>European Commission</gtr:fundingOrg><gtr:fundingRef>RI-261565</gtr:fundingRef><gtr:id>07B90D87-3B88-44E7-AD7E-52D9948EB20F</gtr:id><gtr:outcomeId>5ec6ad885ec6ad9c</gtr:outcomeId><gtr:sector>Public</gtr:sector><gtr:start>2011-09-01</gtr:start></gtr:furtherFundingOutput></gtr:furtherFundingOutputs><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>Our results, in terms of novel software technology, have been directly used by our project partners in producing the reported publications and have been picked up by other academics interested in languages and systems for large-scale parallel computation. In particular the HdpH language and the SymGridPar2 infrastructure have attracted interest in the very active Haskell developers community, by providing scalable and portable parallelism on large-scale parallel systems. Our results, in terms of improved performance for symbolic computation applications on super-computers, have created interest in the wider parallel programming community, being the first of its kind on modern super-computers.
Our recent publication on HdpH-RS transfers these results to large-scale clusters and makes the results accessible to the wider community of distributed computing.</gtr:description><gtr:id>817FB86F-0F11-4B9B-8311-923DC82D0D3A</gtr:id><gtr:impactTypes><gtr:impactType>Economic</gtr:impactType></gtr:impactTypes><gtr:outcomeId>54613b7b9bc266.50732597</gtr:outcomeId><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>It is challenging, but possible, to implement HPC-Scale parallelism for algebraic computations, such as those described in the GAP system. From a performance point of view we demonstrate that we can achieve good speedups on a modern super-computer (EPCC's HECToR) for challenging symbolic computation applications. From a software development point of view we find that with careful engineering it is possible to provide consistent, high-level interfaces to coordinate parallel algebraic computations on multicores, cluster, and HPC architectures.</gtr:description><gtr:exploitationPathways>The GAP system, the leading open source system for computational algebra, can be used in a range of industrial contexts, such as cryptographic methods for security. Through the HPCGAP award, the GAP system has significantly enhanced its functionality, in particular supporting multi-threading, widening its scale of applications. It can be combined with other coordination languages and with other computer algebra systems supporting the SCSCP protocol. Thus it achieves large-scale distributed computing and exploits the computational power on a scale not possible for other computational algebra systems. The GAP developers community continues to provide documentation, workshops and training courses, to make this new functionality accessible to GAP users, in order to apply its parallel software technology to more, challenging symbolic computation applications in all areas of computational science. The project &amp;quot;CoDiMa&amp;quot;, a submission for EPSRC's &amp;quot;Collaborative Computational Projects&amp;quot; scheme, has recently been funded to continue this research.</gtr:exploitationPathways><gtr:id>B8AB7232-4E4A-4902-A65D-B5FC78E6173B</gtr:id><gtr:outcomeId>r-9361486052.4996057774400c</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors><gtr:url>http://www-circa.mcs.st-andrews.ac.uk/hpcgap.php</gtr:url></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs><gtr:softwareAndTechnicalProductOutput><gtr:description>Haskell distributed parallel Haskell Reliable Scheduling (HdpH-RS) is a Haskell DSL for fault tolerant parallel computation on distributed-memory architectures. HdpH-RS is a derivation of HdpH and is a research tool for scalable and reliable scheduling on HPC platforms. HdpH-RS is implemented entirely in Haskell but does make use of a few GHC extensions, most notably TemplateHaskell.</gtr:description><gtr:id>946BECA9-1FB2-4569-B668-A8A555F1473A</gtr:id><gtr:impact>This software reflects the outcomes of the PhD Thesis &amp;quot;Reliable Massively Parallel Symbolic Computing Fault Tolerance for a Distributed Haskell&amp;quot; by Rob Stewart, Heriot-Watt University, November 2013.</gtr:impact><gtr:outcomeId>545fd1edcf4691.64335265</gtr:outcomeId><gtr:title>Haskell Distributed Parallel Haskell with Reliable Scheduling</gtr:title><gtr:type>Software</gtr:type><gtr:url>https://github.com/robstewart57/hdph-rs</gtr:url><gtr:yearFirstProvided>2013</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput><gtr:softwareAndTechnicalProductOutput><gtr:description>Parallel Evaluation Strategies, or Strategies for short, provide ways to express parallel computations. Strategies have the following key features:
* Strategies express deterministic parallelism: the result of the program is unaffected by evaluating in parallel. The parallel tasks evaluated by a Strategy may have no side effects.
* Strategies let you separate the description of the parallelism from the logic of your program, enabling modular parallelism.</gtr:description><gtr:id>E80CAA72-BE61-43EB-AEBE-6FFEF18C16BA</gtr:id><gtr:impact>This package represents a revision of the evaluation strategies module for controlling parallelism in Glasgow parallel Haskell (GpH). Since GpH can be used on both shared and distributed memory platforms, it is a widely used dialect of Haskell.</gtr:impact><gtr:outcomeId>r-6965503745.6802136fd4aad2</gtr:outcomeId><gtr:title>Revised Parallel Evaluation Strategies for Haskell</gtr:title><gtr:type>Software</gtr:type><gtr:url>http://hackage.haskell.org/package/parallel-3.2.0.3</gtr:url><gtr:yearFirstProvided>2010</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput><gtr:softwareAndTechnicalProductOutput><gtr:description>Haskell distributed parallel Haskell (HdpH) is a Haskell DSL for distributed-memory parallelism, implemented entirely in Haskell (as supported by GHC). The initial version (hdph-0.0.1) was released, and reported on, in 2011. The latest version at the time of writing is hdp-0.2.2 (see URL below).</gtr:description><gtr:id>2B643198-5B66-4305-8AB2-42710917114A</gtr:id><gtr:impact>This software provides enabling technology for high-level parallel programming, and was the basis for the measurements of challenging parallel symbolic applications on the HECToR super-computer.</gtr:impact><gtr:outcomeId>r-394164910.90707946fd4a8de</gtr:outcomeId><gtr:title>Haskell distributed parallel Haskell</gtr:title><gtr:type>Software</gtr:type><gtr:url>https://github.com/PatrickMaier/HdpH</gtr:url><gtr:yearFirstProvided>2013</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput><gtr:softwareAndTechnicalProductOutput><gtr:description>Explicit closures are serialisable representations of thunks.



This package exports the fully polymorphic explicit closures of HdpH (Haskell distributed parallel Haskell), for use by HdpH or other packages.</gtr:description><gtr:id>EF6221F4-2BF6-4E26-B205-CAF479326109</gtr:id><gtr:impact>This serialisation component provides key functionality to the HdpH software technology, which is the main software output of the project. Serialisation is also of interest in isolation, therefore this module was published separately as well.</gtr:impact><gtr:outcomeId>r-7629599634.2136fd4a9e2</gtr:outcomeId><gtr:title>Explicit closures in Haskell distributed parallel Haskell</gtr:title><gtr:type>Software</gtr:type><gtr:url>http://hackage.haskell.org/package/hdph-closure-0.0.1</gtr:url><gtr:yearFirstProvided>2013</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput></gtr:softwareAndTechnicalProductOutputs><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>81B2016C-0FF7-42B5-8E8B-41FDA49EEE5C</gtr:id><gtr:title>Orchestrating computational algebra components into a high-performance parallel system</gtr:title><gtr:parentPublicationTitle>International Journal of High Performance Computing and Networking</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/78db692cd7e547462fb2541316b56aa7"><gtr:id>78db692cd7e547462fb2541316b56aa7</gtr:id><gtr:otherNames>Zain A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:outcomeId>doi_53d0820823394ddf</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>81946861-0AEB-4C02-BAB3-4F47C60EDE97</gtr:id><gtr:title>Transparent fault tolerance for scalable functional computation</gtr:title><gtr:parentPublicationTitle>Journal of Functional Programming</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/c84480844749f4821939e745921771c6"><gtr:id>c84480844749f4821939e745921771c6</gtr:id><gtr:otherNames>STEWART R</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>58c704b12874b2.01120106</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>1DEEB3E7-3759-44FC-B734-F0D7464669E5</gtr:id><gtr:title>Easy composition of symbolic computation software using SCSCP: A new Lingua Franca for symbolic computation</gtr:title><gtr:parentPublicationTitle>Journal of Symbolic Computation</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/9de81efd19e51cc3c2019a5ced031449"><gtr:id>9de81efd19e51cc3c2019a5ced031449</gtr:id><gtr:otherNames>Linton S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:outcomeId>doi_53cffeffe121166c</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>A1C129EE-8FE6-46F3-9B66-70FD839DCAD9</gtr:id><gtr:title>Cost-driven autonomous mobility</gtr:title><gtr:parentPublicationTitle>Computer Languages, Systems &amp; Structures</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/6b3378769e4c0c07ac78280d4ccf7e51"><gtr:id>6b3378769e4c0c07ac78280d4ccf7e51</gtr:id><gtr:otherNames>Deng X</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:outcomeId>doi_53cfe9fe96a58579</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>F46926F8-8141-4D13-82FA-31EF594AAB5D</gtr:id><gtr:title>Redundant movements in autonomous mobility: Experimental and theoretical analysis</gtr:title><gtr:parentPublicationTitle>Journal of Parallel and Distributed Computing</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/a488d05c794e2a67801a08b9e3a88bcb"><gtr:id>a488d05c794e2a67801a08b9e3a88bcb</gtr:id><gtr:otherNames>Chechina N</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2011-01-01</gtr:date><gtr:outcomeId>doi_53cffdffd86853b2</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>330CDE3F-4A94-4DA4-B38D-13E1A720B688</gtr:id><gtr:title>Reliable scalable symbolic computation: The design of SymGridPar2</gtr:title><gtr:parentPublicationTitle>Computer Languages, Systems &amp; Structures</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/906e84aebf67b7080fc1cc5c8ddcbbc9"><gtr:id>906e84aebf67b7080fc1cc5c8ddcbbc9</gtr:id><gtr:otherNames>Maier P</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:outcomeId>545fcf86e58e44.97465756</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>70E903CC-28F3-4349-A4C1-7739064C3BA6</gtr:id><gtr:title>Transparent Fault Tolerance for Scalable Functional Computation</gtr:title><gtr:parentPublicationTitle>Journal of Functional Programming</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/bc11f59a796b23ace43167f058aa5616"><gtr:id>bc11f59a796b23ace43167f058aa5616</gtr:id><gtr:otherNames>Stewart R.</gtr:otherNames></gtr:author></gtr:authors><gtr:outcomeId>56e02099d87913.97292156</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>B44D9007-A3C8-4501-A319-5714D5E7D98C</gtr:id><gtr:title>High-performance Cloud Computing for Symbolic Computation Domain</gtr:title><gtr:parentPublicationTitle>Journal of Computations &amp; Modelling</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/58c5519e9f40eea6c8c7a9db01e98c5f"><gtr:id>58c5519e9f40eea6c8c7a9db01e98c5f</gtr:id><gtr:otherNames>Ibrahim I. S.</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>58c6fc6d2d0694.08698263</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>9F5B4A07-9C27-4A57-8932-48ED2BA863B7</gtr:id><gtr:title>PAEAN: Portable and scalable runtime support for parallel Haskell dialects</gtr:title><gtr:parentPublicationTitle>Journal of Functional Programming</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/41b423121264c8c20d2b4d16a4d37c16"><gtr:id>41b423121264c8c20d2b4d16a4d37c16</gtr:id><gtr:otherNames>BERTHOLD J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>58c6f9e0a08df1.41629169</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>6C4B0BFE-1E53-44E4-9730-3198F2B3B6A2</gtr:id><gtr:title>Architecture Aware Parallel Programming in Glasgow Parallel Haskell (GPH)</gtr:title><gtr:parentPublicationTitle>Procedia Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/469e49d37e24fcf3023e3e26eaae15c2"><gtr:id>469e49d37e24fcf3023e3e26eaae15c2</gtr:id><gtr:otherNames>Aswad M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:outcomeId>doi_53d006006a14fb60</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>A9EF775F-E617-41E9-87D1-34F87256D6FE</gtr:id><gtr:title>HPC-GAP: engineering a 21st-century high-performance computer algebra system</gtr:title><gtr:parentPublicationTitle>Concurrency and Computation: Practice and Experience</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/5eae291b59caad135cc963ae030910e1"><gtr:id>5eae291b59caad135cc963ae030910e1</gtr:id><gtr:otherNames>Behrends R</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>56df1a8b595ea0.74112930</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>3044C122-1119-45F4-8BFC-8348DB16477D</gtr:id><gtr:title>Architecture-Aware Cost Modelling for Parallel Performance Portability</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/0f76eb61e5134348d44c3208cf1e3d61"><gtr:id>0f76eb61e5134348d44c3208cf1e3d61</gtr:id><gtr:otherNames>Evgeni Belikov (Author)</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:outcomeId>m_118411026813df289e</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>3FA148DF-686E-4EEC-942B-F18C93F6F41C</gtr:id><gtr:title>Resource analyses for parallel and distributed coordination</gtr:title><gtr:parentPublicationTitle>Concurrency and Computation: Practice and Experience</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/3014a182f7c884a608c331e3bf279949"><gtr:id>3014a182f7c884a608c331e3bf279949</gtr:id><gtr:otherNames>Trinder P</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:outcomeId>doi_53cfc3fc36e485e5</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/G05553X/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>30</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject><gtr:researchSubject><gtr:id>DEA11FBC-BEED-4EDD-890B-97D728462D26</gtr:id><gtr:percentage>30</gtr:percentage><gtr:text>Mathematical sciences</gtr:text></gtr:researchSubject><gtr:researchSubject><gtr:id>FB535BD0-E265-4C0A-8532-32DCB83A3951</gtr:id><gtr:percentage>40</gtr:percentage><gtr:text>Tools, technologies &amp; methods</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>9EAAD5EA-2E54-4986-942F-2E204958FE29</gtr:id><gtr:percentage>40</gtr:percentage><gtr:text>High Performance Computing</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>CFBD6626-50CB-4AA6-8B49-9A76519BA91F</gtr:id><gtr:percentage>30</gtr:percentage><gtr:text>Numerical Analysis</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>01AC56BC-45B4-434D-B015-7C879327F09F</gtr:id><gtr:percentage>30</gtr:percentage><gtr:text>Parallel Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>