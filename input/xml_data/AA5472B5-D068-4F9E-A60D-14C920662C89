<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/48E6A342-1CD3-45B5-898D-FD07A5791B23"><gtr:id>48E6A342-1CD3-45B5-898D-FD07A5791B23</gtr:id><gtr:firstName>Nadeschda</gtr:firstName><gtr:surname>Nikitina</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FM007316%2F1"><gtr:id>AA5472B5-D068-4F9E-A60D-14C920662C89</gtr:id><gtr:title>Logic-Based Refactoring of Ontologies</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/M007316/1</gtr:grantReference><gtr:abstractText>Ontologies --- formal models of a particular domain --- are increasingly used as infrastructure for an intelligent processing of information within both industry and data-intensive research. In the case of large and complex ontologies, the representation becomes unnecessarily complex over time and makes further changes more difficult. The representation of ontologies not only affects the work of ontology engineers, but also the acceptance of the corresponding application in practice. Within the Software Engineering community, the adverse impact of the avoidable complexity and code redundancy on software quality has been a long-standing and extensively discussed problem. Since it is difficult to plan all details of a software system prior to its development, it is common to apply refactoring to the system over the course of the implementation --- to revise the structure of the system to improve code quality while preserving its behavior. Refactoring is a common activity in professional software development and is well supported by popular development environments. Our goal is to lay the foundations for refactoring support in Ontology Engineering. The focus of this project is the structural simplification of ontologies --- refactoring aiming to lower the structural complexity and redundancy within ontologies. 


While there are many analogies between refactoring of software and refactoring of ontologies, there are also some notable differences originating from the difference between common programming languages and DL-based ontology languages. One important difference is that the latter are computationally well-behaved. For instance, it is possible to automatically check whether two ontologies are equivalent, i.e., whether they give rise to same logical consequences, while checking the equivalence of software programs is an undecidable problem. If we exploit formal semantics of ontology languages, we can make refactoring of ontologies more efficient. The main goal of this project is to investigate how we can automate structural simplification of ontologies by taking into account their formal semantics. To this end, we aim at providing a set of practical metrics for the structural complexity of ontologies. Based on these metrics, we aim at developing algorithms and tools for automatic structural simplification of ontologies. 

The extent to which an ontology can be simplified depends on the vocabulary specified within the ontology. In some cases, by introducing several additional terms --- enriching the vocabulary of the ontology --- we can significantly increase the effectiveness of structural simplification. One of the aims of this project is to provide tool support that would enable efficient vocabulary enrichment as part of ontology refactoring.</gtr:abstractText><gtr:potentialImpactText>The amount of digital information is growing at a phenomenal rate creating an urgent need for innovation of information infrastructure. These developments concern both industry and research. Intelligent processing of information is one of the key challenges in many areas such as digital economy, healthcare and communication technology. Within the domain of molecular biology, for instance, recent revolutionary changes in experimental infrastructure have lead to an enormous stream of experimental data. The challenge facing biomedical researchers is no longer how to conduct valid experiments, but how to efficiently analyze the resulting data that is both, high in volume and complexity, and to generalize the observations. 

In the UK, there is a large number of organisations dealing with a high volume of information on daily basis such as the BBC. To overcome the widespread problem of information overload, ontologies are increasingly often deployed as part of the information infrastructure with the growing maturity of the corresponding methodologies and tools. A tremendous amount of resources is being spent every year on enhancing information infrastructure, among other things, by deploying ontologies. In the UK, several billion pounds have been spent on the ``Connecting for Health'' IT programme, in which the SNOMED CT ontology plays a key role. The advantages of ontologies are increasingly recognised by the vendors of database technology such as Oracle and numerous other organisations including the previously mentioned BBC and the British Museum. Ontologies proliferate in many areas, e.g., medicine, bio-informatics and geo-science. 

Our techniques will potentially benefit all disciplines and applications that rely on ontologies. With an effective dissemination and wide availability of software incorporating our methodology, we expect to exert a major influence on the Ontology Engineering practice. We also expect our techniques to have a notable impact on large bio-medical ontologies including SNOMED CT--- a component of the electronic health record system.Our methodology aims at reducing the adverse impact of redundancy and avoidable structural complexity on the quality of ontologies. Our tool support will make large ontologies with complex content manageable and reusable at lower cost. 

 In the long term, advances in ontology engineering brought about by our research, not only benefit technology vendors and ontology developers, but application users in general, since we expect our results to have a positive impact on the quality of ontology-based applications.</gtr:potentialImpactText><gtr:fund><gtr:end>2016-10-15</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2014-10-16</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>98143</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>Ontology-based applications serve as infrastructure in numerous organisations within the UK, e.g., Garlic, NHS and BBC. With an effective dissemination and wide availability of this software, we expect to exert a major influence on the Ontology Engineering practice. Our refactoring plugin for Protege -- a widely used ontology editor with over 300,000 registered users -- makes large ontologies with complex content manageable and reusable at lower cost. Thus, it benefits all disciplines and applications that rely on ontologies, e.g., medicine, bio-informatics and geo-science. In particular, we expect our techniques to have a notable impact on large bio-medical ontologies including SNOMED CT--- a component of the electronic health record system. In the long term, advances in ontology engineering brought about by our research, not only benefit technology vendors and ontology developers, but application users in general, since we expect our results to have a positive impact on the quality of ontology-based applications.</gtr:description><gtr:firstYearOfImpact>2017</gtr:firstYearOfImpact><gtr:id>22779E27-6DF9-49A5-8623-EA0E2124DFB1</gtr:id><gtr:impactTypes><gtr:impactType>Economic</gtr:impactType></gtr:impactTypes><gtr:outcomeId>56af567be0d9b9.51928560</gtr:outcomeId><gtr:sector>Digital/Communication/Information Technologies (including Software),Education</gtr:sector></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>We established theoretical foundations and developed software for logic-based refactoring of ontologies: We developed a method and the corresponding software for (a) computing minimal equivalent EL concepts; (b) minimising EL ontologies as they are typically represented in an ontology editor -- as a set of views that show subsumers and equivalent concepts for a selected concept. Provided that the view satisfies a specific kind of acyclicity conditions, we compute a minimal alternative view of that concept such that the equivalence to the initial ontology is preserved. An evaluation on popular ontologies, as well as automatically generated ontologies, shows that the obtained concept views are often significantly smaller. It also confirms the feasibility of minimisation in practice. The computation of minimal equivalent concepts took on average 5 minutes for concepts from Snomed CT, and just a few seconds for concepts from other ontologies. This demonstrates that concept and ontology minimisation can be integrated as a feature into ontology editors, which has been successfully accomplished for the widely used ontology editor Protege.</gtr:description><gtr:exploitationPathways>Ontologies proliferate in many areas, e.g., medicine, bio-informatics and geo-science. However, unnecessary structural complexity and redundancy are not only present within hand-crafted ontologies, but they are also a common side effect of processes that generate ontologies and concept expressions automatically. Examples of such processes include concept unification, uniform interpolation, ontology learning, rewriting ontologies into less expressive logics, abduction and knowledge revision. We made our techniques practical and ready to be used in disciplines and applications that rely on ontologies.</gtr:exploitationPathways><gtr:id>530D7CE0-3CEB-4325-890B-C773633297A9</gtr:id><gtr:outcomeId>56af56d4a6bd25.82147216</gtr:outcomeId><gtr:sectors><gtr:sector>Aerospace, Defence and Marine,Agriculture, Food and Drink,Chemicals,Communities and Social Services/Policy,Creative Economy,Digital/Communication/Information Technologies (including Software),Education,Energy,Environment,Financial Services, and Management Consultancy,Healthcare,Leisure Activities, including Sports, Recreation and Tourism,Government, Democracy and Justice,Manufacturing, including Industrial Biotechology,Culture, Heritage, Museums and Collections,Pharmaceuticals and Medical Biote</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs><gtr:softwareAndTechnicalProductOutput><gtr:description>This is a Protege plugin with two features: (a) minimising a selected EL concept using the remaining axioms of the edited ontology; (b) minimising the part of the edited ontology that defines the meaning of the selected concept from the subsumption hierarchy. The plugin is written in Java and can be easily extended to support related refactoring tasks such as replacing the selected concept by an equivalent concept smaller than k.</gtr:description><gtr:id>43868F6B-972C-4EAF-9EA4-B73539C65373</gtr:id><gtr:impact>Protege is a widely used ontology editor with over 300,000 registered users. This Protege plugin makes large ontologies with complex content manageable and reusable at lower cost. Thus, it benefits all disciplines and applications that rely on ontologies, e.g., medicine, bio-informatics and geo-science. With an effective dissemination and wide availability of this software, we expect to exert a major influence on the Ontology Engineering practice. We also expect our techniques to have a notable impact on large bio-medical ontologies including SNOMED CT--- a component of the electronic health record system. 

 In the long term, advances in ontology engineering brought about by our research, not only benefit technology vendors and ontology developers, but application users in general, since we expect our results to have a positive impact on the quality of ontology-based applications.</gtr:impact><gtr:outcomeId>58c684706b6b07.02844324</gtr:outcomeId><gtr:title>Ontology Refactoring Protege Plugin</gtr:title><gtr:type>Software</gtr:type><gtr:yearFirstProvided>2017</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput><gtr:softwareAndTechnicalProductOutput><gtr:description>This is a command-line tool with two features: (a) minimising a given EL concepts with respect to a given ontology; (b) minimising the part of the given EL ontology that defines the meaning of a given concept. The tool is written in Java and can be easily extended to compute solutions to related problems such as generating all concepts equivalent to the given concept up to a given size.</gtr:description><gtr:id>5F5791CD-CDAB-47EA-9213-0C26E3CF866A</gtr:id><gtr:impact>Unnecessary structural complexity and redundancy are not only present within hand-crafted ontologies, but they are also a common side effect of processes that generate
ontologies and concept expressions automatically. Examples of such processes include concept unification, uniform interpolation, ontology learning, rewriting ontologies into less expressive logics, abduction and knowledge revision. Thus, this tool can provide valuable support in manual development of ontologies and improve the quality of automatically generated ontologies. This tool further serves as a foundation for supporting various ontology refactoring tasks as implemented in the corresponding Protege plugin.

The evaluation of this tool confirms the feasibility of concept minimisation in practice. The computation of minimal equivalent concepts took on average 5 minutes for concepts from
Snomed CT, and just a few seconds for concepts from other ontologies including NCI Thesaurus and Galen. We conclude that this tool would be a valuable new feature within ontology editors.</gtr:impact><gtr:outcomeId>58c682407495b8.97397239</gtr:outcomeId><gtr:title>EL Concept and Concept View Minimiser Library</gtr:title><gtr:type>Software</gtr:type><gtr:yearFirstProvided>2017</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput></gtr:softwareAndTechnicalProductOutputs><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>BF5DD321-D84B-4F50-98DA-9D9CEA5BC5D9</gtr:id><gtr:title>Computing Minimal Concept Views within EL Ontologies</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/a0b166be0c7043fb9dc5ac8f3f1d919a"><gtr:id>a0b166be0c7043fb9dc5ac8f3f1d919a</gtr:id><gtr:otherNames>Nadeschda Nikitina</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>58c91bc03f9f42.59182036</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>D7CE6E0F-0AC5-412A-930E-04B6DA3B45F0</gtr:id><gtr:title>Minimising Acyclic EL Ontologies</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/eb17309e922682aa842fea768d304cd8"><gtr:id>eb17309e922682aa842fea768d304cd8</gtr:id><gtr:otherNames>Patrick Koopmann</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>58c91a99719107.24598229</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>24AC4AF0-069D-4F57-AABA-CAD9702C79B4</gtr:id><gtr:title>Small Is Beautiful: Computing Minimal Equivalent EL Concepts</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/a0b166be0c7043fb9dc5ac8f3f1d919a"><gtr:id>a0b166be0c7043fb9dc5ac8f3f1d919a</gtr:id><gtr:otherNames>Nadeschda Nikitina</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>58c67d3280b1e4.46407891</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/M007316/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>0A982A4A-12CF-4734-AFCA-A5DC61F667F3</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Information &amp; Knowledge Mgmt</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>