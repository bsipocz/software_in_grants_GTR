<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/936D002F-A8D1-4A93-AE5D-825ED0903D8D"><gtr:id>936D002F-A8D1-4A93-AE5D-825ED0903D8D</gtr:id><gtr:name>University of Nottingham</gtr:name><gtr:department>School of Computer Science</gtr:department><gtr:address><gtr:line1>University Park</gtr:line1><gtr:line4>Nottingham</gtr:line4><gtr:line5>Nottinghamshire</gtr:line5><gtr:postCode>NG7 2RD</gtr:postCode><gtr:region>East Midlands</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/936D002F-A8D1-4A93-AE5D-825ED0903D8D"><gtr:id>936D002F-A8D1-4A93-AE5D-825ED0903D8D</gtr:id><gtr:name>University of Nottingham</gtr:name><gtr:address><gtr:line1>University Park</gtr:line1><gtr:line4>Nottingham</gtr:line4><gtr:line5>Nottinghamshire</gtr:line5><gtr:postCode>NG7 2RD</gtr:postCode><gtr:region>East Midlands</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/5179FD33-BD59-401F-99E4-883DC2550B96"><gtr:id>5179FD33-BD59-401F-99E4-883DC2550B96</gtr:id><gtr:firstName>Graham</gtr:firstName><gtr:surname>Hutton</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FE04350X%2F1"><gtr:id>EC222F41-0FD5-4F36-9062-9A4BE9571742</gtr:id><gtr:title>Reasoning About Exceptions and Interrupts</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/E04350X/1</gtr:grantReference><gtr:abstractText>Dealing with unexpected events is an important, and increasingly inevitable, aspect of modern computer programming. As a result, most programming languages provide special features for detecting and managing these events, in the form of so-called exception and interrupt handling primitives. Such primitives are a key feature of modern languages, allowing programs to be written that are robust to various kinds of unexpected events, without having to spoil the structure of the program with a proliferation of tests for special cases. Despite their importance, however, the issue of provable correctness for programs involving exceptions and interrupts has received little attention, but is particularly crucial given the difficulty of writing correct programs in this setting. The aim of this project is to build upon the success of a programme of groundwork that we have conducted in this area, and significantly advance the state-of-the art in formal reasoning about exceptions and interrupts in programming languages.</gtr:abstractText><gtr:fund><gtr:end>2010-09-30</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2007-10-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>306914</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>The ideas from papers [2,3] above are now being integrated into the Glasgow Haskell Compiler by a team at the University of Kansas.</gtr:description><gtr:firstYearOfImpact>2010</gtr:firstYearOfImpact><gtr:id>BAEB64DD-5C4E-4B1F-83F8-466C89A61D23</gtr:id><gtr:impactTypes><gtr:impactType>Societal,Economic</gtr:impactType></gtr:impactTypes><gtr:outcomeId>5440d9529fe4a3.11574919</gtr:outcomeId><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>The project produced a number of fundamental new results, including the first formally justified semantics for interrupts [1], a simple but powerful new approach to program optimisation that unifies a large class of previously unconnected techniques [2,3], a typed-based system for analysing the time complexity of purely functional data structures and algorithms [4], and a new approach to functional parsing that guarantees termination [5]. Three of these articles were published to the top international journal in the field (Journal of Functional Programming), and the remaining two in leading international conferences (Symposium on Principles of Programming Languages and the International Conference on Functional Programming.) 



[1] What is the meaning of these constant interruptions? Graham Hutton and Joel Wright. Journal of Functional Programming, 17(6):777-792, Cambridge University Press, November 2007.



[2] The worker/wrapper transformation. Andy Gill and Graham Hutton. Journal of Functional Programming, 19(2):227-251, CambridgeUniversity Press, March 2009.



[3] Factorising folds for faster functions. Graham Hutton, Mauro Jaskelioff, and Andy Gill. Journal of Functional Programming Special Issue on Generic Programming, 20(3&amp;amp;4):353-373, Cambridge University Press, June 2010.



[4] Lightweight semiformal time complexity analsyis for purely functional data structures. Nils Anders Danielsson. ACM SIGPLAN Symposium on Principles of Programming Languages, 2008.



[5] Total parser combinators. Nils Anders Danielsson. ACM SIGPLAN International Conference on Functional Programming, 2010</gtr:description><gtr:exploitationPathways>The ideas from papers [2,3] above are now being integrated into the Glasgow Haskell Compiler by a team at the University of Kansas.</gtr:exploitationPathways><gtr:id>1529F688-ED05-4231-8F6F-C297F9EAC8E0</gtr:id><gtr:outcomeId>r-3391239981.5313897774eae8</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>6A5C1514-4D63-4ED8-BBC1-1944674A931E</gtr:id><gtr:title>Lightweight Semiformal Time Complexity Analysis for Purely Functional Data Structures</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/14244e8f7dfe79b40c5909bc6182c7c8"><gtr:id>14244e8f7dfe79b40c5909bc6182c7c8</gtr:id><gtr:otherNames>Nils Anders Danielsson</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2008-01-01</gtr:date><gtr:outcomeId>r_5563422603cac564dc</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>CF1C6D18-D70A-4829-A107-55177E54B4E7</gtr:id><gtr:title>Operational semantics using the partiality monad</gtr:title><gtr:parentPublicationTitle>ACM SIGPLAN Notices</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/4920088e5cc91ec35c14ebc55785fb60"><gtr:id>4920088e5cc91ec35c14ebc55785fb60</gtr:id><gtr:otherNames>Danielsson N</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:outcomeId>doi_55f95b95b2fac6e0</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>3DA3D54C-C2B7-4E98-951E-8FDA6387D9B2</gtr:id><gtr:title>What is the meaning of these constant interruptions?</gtr:title><gtr:parentPublicationTitle>Journal of Functional Programming</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/b6af03253f7c2a94402a410fbe1a8634"><gtr:id>b6af03253f7c2a94402a410fbe1a8634</gtr:id><gtr:otherNames>HUTTON G</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2007-01-01</gtr:date><gtr:outcomeId>doi_53d013013390c92f</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>72243CDB-4A83-422A-85C0-E78B012099C1</gtr:id><gtr:title>Total parser combinators</gtr:title><gtr:parentPublicationTitle>ACM SIGPLAN Notices</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/4920088e5cc91ec35c14ebc55785fb60"><gtr:id>4920088e5cc91ec35c14ebc55785fb60</gtr:id><gtr:otherNames>Danielsson N</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:outcomeId>doi_53d074074d90235b</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>D4F72634-4F63-4061-8658-D8736C7ED8A1</gtr:id><gtr:title>The worker/wrapper transformation</gtr:title><gtr:parentPublicationTitle>Journal of Functional Programming</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/70ce96ae64330f8ce21e10057fba1a54"><gtr:id>70ce96ae64330f8ce21e10057fba1a54</gtr:id><gtr:otherNames>GILL A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2009-01-01</gtr:date><gtr:outcomeId>doi_53d0130133c8190c</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>AB3B4BFC-DEDA-4E9C-B95A-A68F7DE8F165</gtr:id><gtr:title>Factorising folds for faster functions</gtr:title><gtr:parentPublicationTitle>Journal of Functional Programming</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/b6af03253f7c2a94402a410fbe1a8634"><gtr:id>b6af03253f7c2a94402a410fbe1a8634</gtr:id><gtr:otherNames>HUTTON G</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:outcomeId>doi_53d0130133f1ad1d</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/E04350X/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>