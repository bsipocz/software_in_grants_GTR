<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/F262B9E0-E9D1-4BFF-B9BF-B4C81D12D8B9"><gtr:id>F262B9E0-E9D1-4BFF-B9BF-B4C81D12D8B9</gtr:id><gtr:name>Microsoft Research Ltd</gtr:name><gtr:address><gtr:line1>21 Station Road</gtr:line1><gtr:postCode>CB1 2FB</gtr:postCode><gtr:region>East of England</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/12247D49-C076-43CB-B063-A4E785DFEE99"><gtr:id>12247D49-C076-43CB-B063-A4E785DFEE99</gtr:id><gtr:firstName>James</gtr:firstName><gtr:otherNames>Benjamin</gtr:otherNames><gtr:surname>Worrell</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/F4416405-8832-4572-915C-CF26F5084D21"><gtr:id>F4416405-8832-4572-915C-CF26F5084D21</gtr:id><gtr:firstName>Joel</gtr:firstName><gtr:surname>Ouaknine</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FM012298%2F1"><gtr:id>FECCB63B-4384-44C7-8B74-AD34D23342B5</gtr:id><gtr:title>Counter Automata: Verification and Synthesis</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/M012298/1</gtr:grantReference><gtr:abstractText>Counter automata are a universal computational model that has been studied since the inception of computer science. In particular, counter automata have been intensively studied in automated verification since they can naturally model diverse computational features such as linked data structures, recursion, and unbounded parallelism. This flexibility and expressiveness however makes their algorithmic analysis very challenging. The goal of this project is to develop new automated procedures for analysing counter automata that will ultimately aid the design, modelling, verification, and analysis of complex computer systems.

The general area of the project is model checking, which is an approach to the problem of designing complex hardware and software systems. In essence, model checking involves the construction and systematic analysis of abstract mathematical models of systems, ideally at design time, using automated tools. The importance of the area is growing in response to the challenge posed by new technologies such as the cloud, concurrent embedded systems, multi-core hardware, the Internet of Things, Big Data, etc. In many application areas the efficient design and correct functioning of computer systems is both economically critical and safety critical. The significance and scientific challenge of model checking were recognized by bestowal of the 2007 Turing Award to Clarke, Emerson, and Sifakis for their foundational work in the area.

This proposal aims to enrich the tool-kit of model checking by developing algorithms and analysis tools for counter automata. One of the major inherent scientific challenges is that model checking involves performing exhaustive analysis of the state spaces of models, whereas counter automata are inherently infinite-state devices that have universal computing power. Another significant challenge is that we will be considering counter automata with additional features, such as parameters and probabilistic behaviour. To meet this challenge we will build on a body of techniques developed over the past two decades, making use of powerful abstractions and rich logical theories of arithmetic which allow us symbolically to represent and reason about infinite state spaces in a finite way. 

Outcomes of the project will include new algorithms to help analyse counter automata as well as an open-source tool for solving arithmetic constraints that arise in such analysis. There is already a wide variety of highly effective tools for analysing counter automata, including Petri nets. Our goal is that the outcomes of this grant will enhance the capabilities of the next generation of these tools.</gtr:abstractText><gtr:potentialImpactText>The aim of the project is to devise tools and algorithms to help with the design, analysis, and verification of complex computer systems, particularly those arising in novel application domains. The ultimate beneficiaries of this research will include system designers and users. As detailed in the case for support, the counter automata models that we consider are already used in analysis of cryptographic protocols, intrusion detection, linked data structures, XML querying, recursive procedures, and unbounded concurrency (amongst many others).

The models that we consider in the proposal already enjoy industrial-strength tool support, including UPPAAL for timed systems, or LoLA for Petri nets. The new algorithms that we propose to develop have the potential to enhance substantially the capability of subsequent versions of such tools. We plan a workshop that will bring together algorithm designers and tool builders to help explain our ideas and to cross-fertilise with developments of other research groups.

A significant part of the project concerns decision procedures for extensions of Presburger arithmetic that can express divisibility. To help mediate the impact of this we will produce an open-source tool for solver for quantifier-free constraints in this logic. While there exist several widely used computational engines for solving linear arithmetic constraints (Z3, Yices, etc.) , there is much less support for non-linear constraints. In this respect, we believe our tool will advance the state of the art and will influence the next generation of SMT solvers.</gtr:potentialImpactText><gtr:fund><gtr:end>2017-12-01</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2015-01-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>241538</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>This research has developed new mathematical techniques for checking the correctness of programs that make extensive use of arithmetic. We have focussed on proving that programs terminate and checking whether certain program locations can be reached. A key finding of this research has been new techniques that allow the verification of programs that operate in adversarial environments, that is, we can check whether programs perform correctly under all inputs. The ability to handle arithmetic is key to applications in software verification, whereas for hardware verification finite-state models often suffice. The research draws heavily on connections between program analysis, logic, and arithmetic.</gtr:description><gtr:exploitationPathways>We are hoping that providers of general purpose constraint solvers, e.g., Microsoft's Z3, will be able to use some of the techniques that we've developed for handling non-linear arithmetic.</gtr:exploitationPathways><gtr:id>57570C59-1B30-4191-80D6-EC808A4E4F72</gtr:id><gtr:outcomeId>56ddcb3d17f273.92614569</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>01D996D3-7793-4B63-9A66-4E9DD4643FF8</gtr:id><gtr:title>Proceedings of the Twenty-Sixth Annual ACM-SIAM Symposium on Discrete Algorithms</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/5e91719cab2c6b374ecf83378ba73ef2"><gtr:id>5e91719cab2c6b374ecf83378ba73ef2</gtr:id><gtr:otherNames>Ouaknine J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>56ddc947508f14.53936047</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>3DA1C8D4-DA30-4780-8E75-593D0BD8910F</gtr:id><gtr:title>Model checking flat freeze LTL on one-counter automata</gtr:title><gtr:parentPublicationTitle>Leibniz International Proceedings in Informatics, LIPIcs</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/7ad747fb945b4c689a9eb694e7cc3e10"><gtr:id>7ad747fb945b4c689a9eb694e7cc3e10</gtr:id><gtr:otherNames>Lechner, A.</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>58c75935474166.31040663</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>FCF3E029-F07A-4FF8-BFD6-889ACB00167A</gtr:id><gtr:title>Polynomial automata: Zeroness and applications</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/594bfe67ed97c754cd7ba03b9b022d97"><gtr:id>594bfe67ed97c754cd7ba03b9b022d97</gtr:id><gtr:otherNames>Benedikt M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>5a9c692c9cfcd2.33943737</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>E3029E5C-FF37-4CFE-8DA2-D1C715D3FB5B</gtr:id><gtr:title>On the Complexity of Linear Arithmetic with Divisibility</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/9e6923dec5c20ba99665e6bef4f76716"><gtr:id>9e6923dec5c20ba99665e6bef4f76716</gtr:id><gtr:otherNames>Lechner A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>56ddc25a21f887.72636817</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>C0A16656-A516-4813-AE69-D3C6D4E40E79</gtr:id><gtr:title>Proceedings of the Twenty-Sixth Annual ACM-SIAM Symposium on Discrete Algorithms</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/fa1a058c189d21cf98c51444179b6a6e"><gtr:id>fa1a058c189d21cf98c51444179b6a6e</gtr:id><gtr:otherNames>Chonev V</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>56ddc947318a95.27289096</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>88F2FAC7-E1E1-405A-9214-DD00B8C4334A</gtr:id><gtr:title>Relating Reachability Problems in Timed and Counter Automata</gtr:title><gtr:parentPublicationTitle>Fundamenta Informaticae</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/b110b6b0a3bb046bc5687bb47d18c395"><gtr:id>b110b6b0a3bb046bc5687bb47d18c395</gtr:id><gtr:otherNames>Haase C</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>58c759356aa760.84692397</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>E2C5AE3B-9B5C-42A6-860D-970C38FB00F0</gtr:id><gtr:title>On matrix powering in low dimensions</gtr:title><gtr:parentPublicationTitle>Leibniz International Proceedings in Informatics, LIPIcs</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/dc79a5a0393f03f0bf52efd2e32c7aed"><gtr:id>dc79a5a0393f03f0bf52efd2e32c7aed</gtr:id><gtr:otherNames>Galby E</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>56ddc94773fc75.45701959</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>8BCBBD6B-D1E9-4980-9D93-CFA30F6E475E</gtr:id><gtr:title>Zeno, Hercules, and the Hydra</gtr:title><gtr:parentPublicationTitle>ACM Transactions on Computational Logic</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/edb4e87ea7b355f07a951b08bc95d857"><gtr:id>edb4e87ea7b355f07a951b08bc95d857</gtr:id><gtr:otherNames>Lazic R</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>58c759358a7696.50928259</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>C0E6EEDE-F174-4C48-8272-920ECDCDCACF</gtr:id><gtr:title>Complexity of Two-Variable Logic on Finite Trees</gtr:title><gtr:parentPublicationTitle>ACM Transactions on Computational Logic</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/ead27a14244714ddcf4d1e4cd94c401c"><gtr:id>ead27a14244714ddcf4d1e4cd94c401c</gtr:id><gtr:otherNames>Benaim S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>58c75934c80255.68689119</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/M012298/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>D7BA1404-E001-4782-929E-E96E28B01201</gtr:id><gtr:percentage>20</gtr:percentage><gtr:text>Computer Sys. &amp; Architecture</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>80</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>