<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/68D0E3C9-9246-4CFC-B5E9-48584CF82993"><gtr:id>68D0E3C9-9246-4CFC-B5E9-48584CF82993</gtr:id><gtr:name>University of Manchester</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>Oxford Road</gtr:line1><gtr:city>Manchester</gtr:city><gtr:postCode>M13 9PL</gtr:postCode><gtr:region>North West</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/68D0E3C9-9246-4CFC-B5E9-48584CF82993"><gtr:id>68D0E3C9-9246-4CFC-B5E9-48584CF82993</gtr:id><gtr:name>University of Manchester</gtr:name><gtr:address><gtr:line1>Oxford Road</gtr:line1><gtr:city>Manchester</gtr:city><gtr:postCode>M13 9PL</gtr:postCode><gtr:region>North West</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/AFE5C6FD-3500-44F6-B100-184B5F2FD0D7"><gtr:id>AFE5C6FD-3500-44F6-B100-184B5F2FD0D7</gtr:id><gtr:name>Microsoft Research</gtr:name><gtr:address><gtr:line1>One Microsoft Way</gtr:line1><gtr:line4>Redmond</gtr:line4><gtr:line5>Washington 98052</gtr:line5><gtr:region>Outside UK</gtr:region><gtr:country>United States</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/92BED6E6-D64C-46AC-9396-87F84F3A232C"><gtr:id>92BED6E6-D64C-46AC-9396-87F84F3A232C</gtr:id><gtr:name>Intel Corporation</gtr:name><gtr:address><gtr:line1>2200 Mission College Blvd</gtr:line1><gtr:line2>PO Box 58119</gtr:line2><gtr:line4>Santa Clara</gtr:line4><gtr:line5>CA 95052-8119</gtr:line5><gtr:region>Outside UK</gtr:region><gtr:country>United States</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/CA037BA4-EEBB-488D-BA2A-A0C6402BD93F"><gtr:id>CA037BA4-EEBB-488D-BA2A-A0C6402BD93F</gtr:id><gtr:name>Rigorous Systems Engineering Project</gtr:name><gtr:address><gtr:line1>Inffeldgasse 16a</gtr:line1><gtr:postCode>A 8010</gtr:postCode><gtr:region>Outside UK</gtr:region><gtr:country>Austria</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/871947ED-289A-43DB-BB3A-DB6955907ED5"><gtr:id>871947ED-289A-43DB-BB3A-DB6955907ED5</gtr:id><gtr:firstName>Andrei</gtr:firstName><gtr:surname>Voronkov</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/A49C774D-3B0D-4DD7-B3BF-5CE3F20192C8"><gtr:id>A49C774D-3B0D-4DD7-B3BF-5CE3F20192C8</gtr:id><gtr:firstName>Konstantin</gtr:firstName><gtr:surname>Korovin</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FK032674%2F1"><gtr:id>0300932D-6F1B-4204-9AB2-F98A136D4124</gtr:id><gtr:title>REVES: REasoning in VErification and Security</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/K032674/1</gtr:grantReference><gtr:abstractText>This proposal focuses on advancing reasoning-based verification and security analysis of software and Web services. In our everyday life we rely on security of software and Web services e.g. when using digital banking or social networks and therefore the problem we are addressing is both challenging and important.

This problem is highly non-trivial and one of the major challenges comes from the enormous complexity and growing size of the software used in security-critical applications. Typically such software contains from hundreds of thousands to millions lines of code written by different developers using different platforms and requirements. How we can ensure that these complex software systems are functioning correctly and do not have security vulnerabilities? Our approach is to develop fully automatic methods and tools for verification and security analysis based on rigours mathematical foundations. These methods are based on formalisation of the verification problem in formal logic and applying automated theorem proving to prove that the security properties are satisfied, or otherwise find security vulnerabilities if such a proof fails. Over 50 years of research in automated theorem proving resulted in deep theoretical results and powerful tools based on these results. Our group is world-leading in this area, our theorem proving systems (Vampire and iProver) have been winning almost all major divisions in the world cup in first-order theorem proving (CASC) the last years. However, program verification and security analysis requires further considerable advances in both theorem proving and formalisation which we address in this project.

The project consists of three major parts: 

(A) Automatic generation of program properties using symbol elimination and interpolation.
(B) Application of theorem provers in verification of real-life large-scale Web services.
(C) Efficient reasoning with quantifiers and theories with applications in verifying program properties.

Part (A) continues the line of research in algorithms for an automatic generation of program properties we started in 2009. Generation of such
properties is very important for analysing very large programs, including checking their security-related features. 

The aim of (B) is to design a practical low-cost methodology for verification or access policies for large-scale Web services, demonstration of viability of this methodology by verifying a real-life Web service, and supporting this methodology by tools based on theorem provers and model finders. 

Part (C) is rooted in our understanding that efficient reasoning with both quantifiers and theories is crucial for applications of theorem provers in verification and program analysis and will be central in automated reasoning research for the next decade or even longer. It aims at the design and implementation of efficient algorithms for automated reasoning when both quantifiers and theories are used.

The milestones of the project include
1) fundamental theoretical breakthroughs: formalisation of access policies of Web services; efficient invariant generation and interpolation for security verification; efficient methods for reasoning with quantifiers and theories 
2) practical tools: we will develop new reasoning methods and tools, and verification and program analysis tools based on these reasoning tools.
3) application of developed methods and tools to real-life verification problems: we will fully verify security-related access policies of EasyChair,
which is one of the largest, if not the largest, Web service for academic users developed in the UK; we will collaborate with industry: Intel and Microsoft to apply developed methods in an industrial environment.</gtr:abstractText><gtr:potentialImpactText>Web services and security critical software underpin Internet banking, social networks, online shopping, travel booking systems, etc. They are used on a daily basis by millions of people in the UK and over a billion people world-wide.

This project aims at developing methods and tools for making software and Web services more reliable and secure. Therefore it has a potential to impact millions of people who are routinely using such software and services. The project has a high potential to impact the economy since security related flaws in software and Web services cost millions of pounds to the economy.

One of the milestones of in this project is verification of access policies of a large scale Web service EasyChair, which is implemented in the UK and alone has 700,000 users world-wide. Since the developed methodology and tools will be largely re-usable for other Web services we expect high impact on developers and the users of such services.

In order to achieve high impact we will disseminate our results to a wide range of beneficiaries in academia, industry, developers and end users. For this we will:
1) produce world-leading results and tools for software verification and security analysis
2) publish obtained results in proceedings of world-leading conferences and journals,
3) intensively collaborate with industry, including Intel and Microsoft;
4) collaborate with partners within this UK-based Verification Institute and highly relevant Austrian RiSE (Rigorous Systems Engineering) project.

We are confident that results, methodologies and tools developed during this project will have long-lasting national and international impact in academia, industry, among developers and end-users, which will in turn have strong economical and societal benefits.</gtr:potentialImpactText><gtr:fund><gtr:end>2016-11-30</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2013-06-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>747290</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>First-order theorem provers are extensively used by high-tech companies and organisations involved in safety-critical applications</gtr:description><gtr:id>4F4D1C32-300F-440C-BD4D-A37A4BCD066E</gtr:id><gtr:impactTypes/><gtr:outcomeId>56e03ed5d9b2c8.26715474</gtr:outcomeId><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>Our research resulted in major developments in one of the hardest areas within artificial intelligence: automated theorem proving. 
One of the most significant findings was research and development of the original AVATAR architecture for theorem proving systems (theorem provers). This architecture allowed our theorem prover Vampire to solve hundreds of problems that were previously beyond the reach of the best systems, including previous versions of Vampire.
We also extended AVATAR to work in the area of reasoning with both quantifiers and theories, resulting in major breakthrough in the area. While all most successful systems were using instance-based methods, we have shown that on practical problems AVATAR-based methods show superior performance on many classes of problems. This is very significant since the new method focuses on quantifier reasoning more than on theory reasoning, while all previously known methods focused on improving theory reasoning.</gtr:description><gtr:exploitationPathways>The methods we developed significantly advance knowledge in the area and may result in new methods based on AVATAR.</gtr:exploitationPathways><gtr:id>DCBA3A25-649F-4907-BFC8-FB807867FB6B</gtr:id><gtr:outcomeId>56e03e3ec65653.59913994</gtr:outcomeId><gtr:sectors><gtr:sector>Aerospace, Defence and Marine,Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors><gtr:url>http://vprover.org</gtr:url></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs><gtr:softwareAndTechnicalProductOutput><gtr:description>Vampire is the first order theorem prover. It has been World Champion in first-order theorem proving in various divisions 34 times. In 2015 it has won 5 out of 8 divisions, in 4 of them solving more problems than all other systems together. In the main division Vampire has not been beaten since 2002.</gtr:description><gtr:id>786B8D87-8BF7-452B-9001-3FBB4EA041E7</gtr:id><gtr:impact>Vampire is used in many applications, including program analysis and reasoning in algebra by various universities and high tech companies.

It is also a workhorse for trying new ideas in theorem proving. One can argue that many inventions implemented in Vampire, including indexing techniques, AVATAR architecture, and splitting methods considerably advanced the whole area of first-order theorem proving</gtr:impact><gtr:outcomeId>56e03b88500f40.17495063</gtr:outcomeId><gtr:title>Vampire</gtr:title><gtr:type>Software</gtr:type><gtr:url>http://vprover.org</gtr:url><gtr:yearFirstProvided>2016</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput></gtr:softwareAndTechnicalProductOutputs><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>4AB6C411-CE4A-426C-A312-64C3E88438B9</gtr:id><gtr:title>Bound Propagation for Arithmetic Reasoning in Vampire</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/6e174011e05a1884e740a9ca1ebe3944"><gtr:id>6e174011e05a1884e740a9ca1ebe3944</gtr:id><gtr:otherNames>Dragan I</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:isbn>978-1-4799-3035-7</gtr:isbn><gtr:outcomeId>56e0395c35b018.62127846</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>A0EC6DF3-65CF-4A2C-8339-CD67FCBAA0AD</gtr:id><gtr:title>Set of Support for Theory Reasoning</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/dd96b4901f249668497c7ed6a156b446"><gtr:id>dd96b4901f249668497c7ed6a156b446</gtr:id><gtr:otherNames>Reger G</gtr:otherNames></gtr:author></gtr:authors><gtr:outcomeId>5aaacdc0535b22.32986139</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>AD2AC139-D099-416C-B372-4661CBB64620</gtr:id><gtr:title>Better Proof Output for Vampire</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/dd96b4901f249668497c7ed6a156b446"><gtr:id>dd96b4901f249668497c7ed6a156b446</gtr:id><gtr:otherNames>Reger G</gtr:otherNames></gtr:author></gtr:authors><gtr:outcomeId>5aaacdc0c66706.91945768</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>D8F76ED6-6F8F-40C6-8EA9-7D78F4F655F2</gtr:id><gtr:title>A Report of ARCADE 2017</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/dd96b4901f249668497c7ed6a156b446"><gtr:id>dd96b4901f249668497c7ed6a156b446</gtr:id><gtr:otherNames>Reger G</gtr:otherNames></gtr:author></gtr:authors><gtr:outcomeId>5aaacdbfce73a0.30856065</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>BE1F0564-46BF-4AB7-8D96-B56FCD24ACDD</gtr:id><gtr:title>First-Order Interpolation and Interpolating Proof Systems</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/e3c32984a1102b739d74d277487f8481"><gtr:id>e3c32984a1102b739d74d277487f8481</gtr:id><gtr:otherNames>Kov?cs L</gtr:otherNames></gtr:author></gtr:authors><gtr:outcomeId>5aaacdc257f828.38765838</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>5F3493A1-1E56-4265-933D-C89AFF6A59FE</gtr:id><gtr:title>Towards an Abstraction-Refinement Framework for Reasoning with Large Theories</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/b25845b0e991d5ed50b9c00b02d974ca"><gtr:id>b25845b0e991d5ed50b9c00b02d974ca</gtr:id><gtr:otherNames>Lopez Hernandez J</gtr:otherNames></gtr:author></gtr:authors><gtr:outcomeId>5aaacdc29c02b8.18819195</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>C40084EF-6FB2-4A79-8EB8-7CDA22E0357C</gtr:id><gtr:title>New Techniques in Clausal Form Generation</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/dd96b4901f249668497c7ed6a156b446"><gtr:id>dd96b4901f249668497c7ed6a156b446</gtr:id><gtr:otherNames>Reger G</gtr:otherNames></gtr:author></gtr:authors><gtr:outcomeId>5aaacdc1a98238.45320836</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>B70EBA30-AB66-43D8-8022-450FA43DC7DE</gtr:id><gtr:title>Coming to terms with quantified reasoning</gtr:title><gtr:parentPublicationTitle>ACM SIGPLAN Notices</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/e3c32984a1102b739d74d277487f8481"><gtr:id>e3c32984a1102b739d74d277487f8481</gtr:id><gtr:otherNames>Kov?cs L</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>5aaacdc2780a67.13697292</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>A4CBCF63-7B29-47FE-9109-32E47926C8E5</gtr:id><gtr:title>Checkable Proofs for First-Order Theorem Proving</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/dd96b4901f249668497c7ed6a156b446"><gtr:id>dd96b4901f249668497c7ed6a156b446</gtr:id><gtr:otherNames>Reger G</gtr:otherNames></gtr:author></gtr:authors><gtr:outcomeId>5aaacdc00a9dc7.53858932</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>C9ABAB3E-3D39-47E0-BA04-21F24A7AE153</gtr:id><gtr:title>Global Subsumption Revisited (Briefly)</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/dd96b4901f249668497c7ed6a156b446"><gtr:id>dd96b4901f249668497c7ed6a156b446</gtr:id><gtr:otherNames>Reger G</gtr:otherNames></gtr:author></gtr:authors><gtr:outcomeId>5aaacdc0e6aef8.55109242</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>789CADAD-D7C3-4AEE-886A-C3CD4ADCA663</gtr:id><gtr:title>AVATAR Modulo Theories</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/dd96b4901f249668497c7ed6a156b446"><gtr:id>dd96b4901f249668497c7ed6a156b446</gtr:id><gtr:otherNames>Reger G</gtr:otherNames></gtr:author></gtr:authors><gtr:outcomeId>5aaacdc206a7c1.41925145</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/K032674/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>