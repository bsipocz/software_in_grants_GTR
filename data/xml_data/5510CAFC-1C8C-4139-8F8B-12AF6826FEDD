<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/5BB4F8BF-B4E0-4EAF-9AF5-885E19D64850"><gtr:id>5BB4F8BF-B4E0-4EAF-9AF5-885E19D64850</gtr:id><gtr:name>University of Strathclyde</gtr:name><gtr:department>Computer and Information Sciences</gtr:department><gtr:address><gtr:line1>16 Richmond Street</gtr:line1><gtr:line4>Glasgow</gtr:line4><gtr:postCode>G1 1XQ</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/5BB4F8BF-B4E0-4EAF-9AF5-885E19D64850"><gtr:id>5BB4F8BF-B4E0-4EAF-9AF5-885E19D64850</gtr:id><gtr:name>University of Strathclyde</gtr:name><gtr:address><gtr:line1>16 Richmond Street</gtr:line1><gtr:line4>Glasgow</gtr:line4><gtr:postCode>G1 1XQ</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/C0E4FAD2-3C8B-410A-B6DF-3B9B9E433060"><gtr:id>C0E4FAD2-3C8B-410A-B6DF-3B9B9E433060</gtr:id><gtr:name>University of St Andrews</gtr:name><gtr:address><gtr:line1>College Gate</gtr:line1><gtr:line4>St. Andrews</gtr:line4><gtr:line5>Fife</gtr:line5><gtr:postCode>KY16 9AJ</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/5772314F-0021-4928-A509-0BB340B96715"><gtr:id>5772314F-0021-4928-A509-0BB340B96715</gtr:id><gtr:name>University of San Diego</gtr:name><gtr:address><gtr:line1>5998 Alcala Park</gtr:line1><gtr:region>Outside UK</gtr:region></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/F64071F6-F21C-4667-9C17-8B423836432A"><gtr:id>F64071F6-F21C-4667-9C17-8B423836432A</gtr:id><gtr:name>Institute for Advanced Study</gtr:name><gtr:address><gtr:line1>Institute for Advanced Study</gtr:line1><gtr:line2>Einstein Drive</gtr:line2><gtr:postCode>NJ 08540</gtr:postCode><gtr:region>Outside UK</gtr:region></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/F128C1F3-340C-4C0B-9BD0-93B2CEFF81BB"><gtr:id>F128C1F3-340C-4C0B-9BD0-93B2CEFF81BB</gtr:id><gtr:name>University of Paris Diderot (Paris 7)</gtr:name><gtr:address><gtr:line1>6th European PCRD</gtr:line1><gtr:line2>13 rue Pierre et Marie Curie</gtr:line2><gtr:postCode>F-75205</gtr:postCode><gtr:region>Outside UK</gtr:region></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/B5750C27-7358-4FF2-842C-1C5A1E937D3D"><gtr:id>B5750C27-7358-4FF2-842C-1C5A1E937D3D</gtr:id><gtr:name>Chalmers University of Technology</gtr:name><gtr:address><gtr:line1>Chalmers University of Technology</gtr:line1><gtr:line4>Gothenburg</gtr:line4><gtr:postCode>SE-41296</gtr:postCode><gtr:region>Outside UK</gtr:region><gtr:country>Sweden</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/956E999D-84FF-4CBE-8DDF-49169EA9E142"><gtr:id>956E999D-84FF-4CBE-8DDF-49169EA9E142</gtr:id><gtr:name>Carnegie Mellon University</gtr:name><gtr:address><gtr:line1>5000 Forbes Avenue</gtr:line1><gtr:line4>Pittsburgh</gtr:line4><gtr:line5>PA 15213</gtr:line5><gtr:region>Outside UK</gtr:region><gtr:country>United States</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/F262B9E0-E9D1-4BFF-B9BF-B4C81D12D8B9"><gtr:id>F262B9E0-E9D1-4BFF-B9BF-B4C81D12D8B9</gtr:id><gtr:name>Microsoft Research Ltd</gtr:name><gtr:address><gtr:line1>21 Station Road</gtr:line1><gtr:postCode>CB1 2FB</gtr:postCode><gtr:region>East of England</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/0BD0B05E-91E9-461A-B3D1-036884523A3A"><gtr:id>0BD0B05E-91E9-461A-B3D1-036884523A3A</gtr:id><gtr:firstName>C</gtr:firstName><gtr:otherNames>T</gtr:otherNames><gtr:surname>McBride</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/0A6772D2-A0BB-4324-9CC8-1C45E906A1EC"><gtr:id>0A6772D2-A0BB-4324-9CC8-1C45E906A1EC</gtr:id><gtr:firstName>Neil</gtr:firstName><gtr:surname>Ghani</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FM016951%2F1"><gtr:id>5510CAFC-1C8C-4139-8F8B-12AF6826FEDD</gtr:id><gtr:title>Homotopy Type Theory: Programming and Verification</gtr:title><gtr:status>Active</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/M016951/1</gtr:grantReference><gtr:abstractText>The cost of software failure is truly staggering. Well known 
individual cases include the Mars Climate Orbiter failure 
(&amp;pound;80 million), Ariane Rocket disaster (&amp;pound;350 million), Pentium 
Chip Division failure (&amp;pound;300 million), and more recently the heartbleed 
bug (est. &amp;pound;400 million). There are many, many more examples. Even worse, 
failures such as one in the Patriot Missile System and another 
in the Therac-25 radiation system have cost lives. More generally, a 
2008 study by the US government estimated that faulty
software costs the US economy &amp;pound;100 billion
annually. 

There are many successful approaches to software verification
(testing, model checking etc). One approach is to find mathematical
proofs that guarantees of software correctness. However, the
complexity of modern software means that hand-written mathematical
proofs can be untrustworthy and this has led to a growing desire for
computer-checked proofs of software correctness. 
Programming languages and interactive proof systems like Coq, Agda,
NuPRL and Idris have been developed based on a formal system called
Martin-L&amp;ouml;f Type Theory. In these systems, we can not only write
programs, but we can also express properties of programs using types,
and write programs to express proofs that our programs are correct.
In this way, both large mathematical theorems such as the Four Colour
Theorem, and large software systems such as the CompCert C compiler
have been formally verified. However, in such large projects, the
issue of scalability arises: how can we use these systems to build large
libraries of verified software in an effective way?

This is related to the problem of reusability and modularity: a
component in a software system should be replaceable by another which
behaves the same way even though it may be constructed in a completely
different way. That is, we need an &amp;quot;extensional equality&amp;quot; which is
computationally well behaved (that is, we want to run programs using
this equality). Finding such an ty is a fundamental and
difficult problem which has remained unresolved for over 40 years.

But now it looks like we might have a solution! Fields medallist
Vladimir Voevodsky has come up with a completely different take on the
problem by thinking of equalities as paths such as those which occur
in one of the most abstract branches of mathematics, namely homotopy
theory, leading to Homotopy Type Theory (HoTT). In HoTT, two objects
are completely interchangeable if they behave the same way. However,
most presentations of HoTT involve axioms which lack computational
justification and, as a result, we do not have programming languages
or verification systems based upon HoTT. The goal of our project is
to fix that, thereby develop the first of a new breed of HoTT-based
programming languages and verification systems, and develop case
studies which demonstrate the power of HoTT to programmers and
those interested in formal verification.

We are an ideal team to undertake this research because i) we have
unique skills and ideas ranging from the foundations of HoTT to the
implementation and deployment of programming language and verification
tools; and ii) the active collaboration of the most important figures
in the area (including Voevodsky) as well as industrial participation
to ensure that we keep in mind our ultimate goal -- usable programming
language and verification tools.</gtr:abstractText><gtr:potentialImpactText>In the short term, we expect impact in the following areas:

1. EPSRC has a goal of growing its research in programming languages
and programme verification and this research contributes directly -
and immediately - to this goal. This research also contributes
immediately to both the overall aim and the three objectives of
the EPSRC-funded Grand Challenge 6 &amp;quot;Dependable Systems Evolution&amp;quot;. The
research also contributes indirectly to the EPSRC themes of the
Digital Economy, Global Uncertainty and cyber security by increasing
trust in software by establishing machine-checked mathematical proofs
guaranteeing correct program behaviour.

2. Further impact will be generated by producing the first HoTT-based programming
language which, unlike current languages, allows programming with
quotients and supports reusability and modularity by using an extensional but
computationally well-behaved equality. This will be clearly demonstrated via a
case study concerning Units of Measure, a feature within 
Microsoft's commercial language F#.

In the long term, we expect impact in the following areas:

3. Because of the huge cost of software failures as
detailed in the proposal, there is an emerging industry surrounding 
formally verified software. This research contributes to this area
by aiming to build the first of a new breed of more powerful
verification environments with better ability to scale to large
systems due to HoTT's increased support for reusability and modularity.
 
4. The need for trust in results across the sciences
means that there will be a growing interest in formal verification
of such human knowledge. By developing more powerful systems for
formal verification, our research will contribute to this goal.</gtr:potentialImpactText><gtr:fund><gtr:end>2019-03-31</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2015-04-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>499631</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>CBCF3FD3-1BF3-4637-8D7D-4EF57BE8EA6C</gtr:id><gtr:title>Type theory in type theory using quotient inductive types</gtr:title><gtr:parentPublicationTitle>ACM SIGPLAN Notices</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/af4ad7fe6fc1741367b3719fec1b118c"><gtr:id>af4ad7fe6fc1741367b3719fec1b118c</gtr:id><gtr:otherNames>Altenkirch T</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>585d461eca08d8.40611830</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/M016951/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>D7BA1404-E001-4782-929E-E96E28B01201</gtr:id><gtr:percentage>20</gtr:percentage><gtr:text>Computer Sys. &amp; Architecture</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>80</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>