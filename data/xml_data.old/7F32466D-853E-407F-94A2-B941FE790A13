<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations><gtr:collaborator url="http://gtr.ukri.org:80/organisation/1324DE36-6F7F-4779-9CD0-C0D25061E171"><gtr:id>1324DE36-6F7F-4779-9CD0-C0D25061E171</gtr:id><gtr:name>University of Warsaw</gtr:name><gtr:address><gtr:line1>Krakowskie Przedmiescie 26/28</gtr:line1><gtr:postCode>00-927</gtr:postCode><gtr:region>Outside UK</gtr:region><gtr:country>Poland</gtr:country></gtr:address></gtr:collaborator></gtr:collaborations><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/318B5D98-4CB4-4B10-A876-08FC93071A56"><gtr:id>318B5D98-4CB4-4B10-A876-08FC93071A56</gtr:id><gtr:name>King's College London</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>Capital House</gtr:line1><gtr:line2>2nd Floor, Guys Campus</gtr:line2><gtr:line3>42 Weston Street</gtr:line3><gtr:line4>London</gtr:line4><gtr:postCode>SE1 3QD</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/318B5D98-4CB4-4B10-A876-08FC93071A56"><gtr:id>318B5D98-4CB4-4B10-A876-08FC93071A56</gtr:id><gtr:name>King's College London</gtr:name><gtr:address><gtr:line1>Capital House</gtr:line1><gtr:line2>2nd Floor, Guys Campus</gtr:line2><gtr:line3>42 Weston Street</gtr:line3><gtr:line4>London</gtr:line4><gtr:postCode>SE1 3QD</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/1324DE36-6F7F-4779-9CD0-C0D25061E171"><gtr:id>1324DE36-6F7F-4779-9CD0-C0D25061E171</gtr:id><gtr:name>University of Warsaw</gtr:name><gtr:address><gtr:line1>Krakowskie Przedmiescie 26/28</gtr:line1><gtr:postCode>00-927</gtr:postCode><gtr:region>Outside UK</gtr:region><gtr:country>Poland</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>COLLABORATOR</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/A2AD2F02-5DAC-41B3-8878-743AE3A4EF3A"><gtr:id>A2AD2F02-5DAC-41B3-8878-743AE3A4EF3A</gtr:id><gtr:firstName>Maxime</gtr:firstName><gtr:surname>Crochemore</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FJ017108%2F1"><gtr:id>7F32466D-853E-407F-94A2-B941FE790A13</gtr:id><gtr:title>Approximate Matching of Sequences.</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/J017108/1</gtr:grantReference><gtr:abstractText>One of the most ancient, fundamental and still active research field in theoretical computer science concerns Pattern Matching and its many approaches. The classic pattern matching problem consists in recognizing a pattern P as &amp;quot;matching&amp;quot; or &amp;quot;not matching&amp;quot; within a given text T and of listing all the occurrence positions, if any. It is
straightforward that the text may be whatever kind of input data and the pattern is usually a smaller piece of the same kind of data. One instance of the problem is to suppose that the text is provided before the pattern.
Then the text can be preprocessed to build an index data structure that accelerates dramatically further searches.
There exist several such data structures. This branch of pattern matching is usually called Text Indexing.
Its natural application scenario is when the text does not change or changes slowly with respect to the great amount of pattern search queries, e.g. a sequenced genome, a digital library or a biometric database.
The most important variant of Text Indexing concerns &amp;quot;approximate matching&amp;quot; of the pattern with text segments.
It is called Approximate Pattern Matching. Approximate means that an occurrence of the pattern within the text is considered a match even if it presents some errors, but if the distance (resp. similarity) between the pattern and the text segment is under (resp. over) a certain threshold.

Approximate variants of text indexing fit well with scenarios where a mistyping errors may occurs, the data sampling process is prone to introduce errors, the data source is not constant over the time as for biometric data, or when we are just looking for data similarity, e.g. for genes mutations in DNA sequences.

Pattern matching plays a fundamental role in many research and application fields, like information retrieval, data mining, bioinformatics, molecular biology functional and structural analysis, molecular pharmacology, computational musicology, network security, biometric identification, and many others. Among these, bioinformatics and computational molecular biology are the domains that mostly and directly benefit from any enhancement of pattern matching theoretical knowledge and solutions.

While straight text indexing counts many efficient solutions, its approximate versions have not found optimal solutions yet. Several solutions exploit the property that an approximate match is usually composed of some shorter and closer
matches, i.e. exact matches or approximate matches with a smaller number of errors. This approach does not provide any breakthrough towards an optimal solution.

Our approach is to design data structures and their related algorithms to get an efficient solution to the problem. We have explored and experimented several solutions that provided remarkable potentialities. They need to be developed further and tailored to some applications. Implementation for external memory and for distributed calculus shall be
investigated. As a by-product some theoretical results related to the distance between sequences should be achieved. The complexity of many classical result will be reviewed to highlight their dependence from the maximal-repetition-with-error parameter. All this is expected to provide a substantial step forward in the pattern matching research field.

The technological breakthrough proposed in this research allows to dramatically decrease the computational cost of detecting local similarities within a large family of biological sequences and of performing some approximate pattern matching related tasks. Furthermore, our designed algorithms will extend the range of applications of approximate pattern matching based solutions as they will allow to accomplish more complex investigations on sequences with the same computational resource either at the level of personal computer scale solutions, and of big research centres.</gtr:abstractText><gtr:potentialImpactText>Approximate pattern matching is involved in a lot of research fields as well as industrial applications. Pattern matching based solutions are widely used in a direct fraction and as a component of more complex solutions. For instance, in gene analysis, either the functional and the structural ones, the main investigation step concerns collecting information about sequences by looking for similar occurrences inside already known organisms since similar sequences frequently present similar functions and similar structures. With respect to a set of sequences, like among different species, the presence of similar sequences is likely to mean that those
descend from a common ancestor. This is the common way to build phylogenetic trees.

A common approximate pattern matching approach exploit the property that an approximate match is usually composed of some shorter and closer simpler matches, i.e. exact matches or approximate matches with a smaller number of errors. For instance, the pattern 'aaabccc' matches the 'abaaccc' with two errors and it comprises a match with one error of the initial part of the pattern 'aaa' with 'aba' in the text, closely followed by the exact match of the final part of the pattern 'ccc'. This approach is used to over-pass the current limits of theoretical solutions, but it allows to move just a little step forward, which is dearly paid in complexity and computational effort, usually accomplished via parallel computing or grid computing. A kind of technology and
resources accessible to just few big farms or big research centres, that, moreover, are still finite and that already have almost reached the actual technological and physical computational bounds. Theoretical advances represents the main source of enhancements in the short term.

Our outcomes, namely the set of algorithms and data structures for approximate indexing and for some related problems, will provide efficient solutions or, at least, an enhancement with respect to the actual state of art about these problems both in term of time and space computational resources.
Our algorithms application is two-fold. It will be candidate either to replace many of the previous
pattern matching algorithms in current solutions in order of either save resources or to accomplish more complex tasks with the same resources. It will also allow to develop a new generation of tools that previously were practically infeasible due to computational limits. For instance, the possibility to keep the approximate index of a whole genome in the memory of a personal computer represents an important technological breakthrough. This, together with the forthcoming availability of next-next-generation sequencing systems will provide a powerful investigation tool to researchers in medical genetics and genetic pharmacology. They will better and faster find the genetic variations responsible for some diseases and are likely to develop subject-specific therapy and medicines. Let us notice that this approach does not fit with centralized computational models that big research centres provide online as a service, because this approach requires to work each time on a different set of data. Furthermore, online services never appeared for many different disciplines, so our solutions may be their first chance to combinatorially analyse their data.

Our research is expected to be relevant also to the software industry and others concerned with the efficient implementation of search engines, information gathering and indexing services on the Web. Also, our indexing schemes would be useful in searching music libraries as well as searching molecular sequences in DNA/RNA and relevant databases.</gtr:potentialImpactText><gtr:fund><gtr:end>2013-11-30</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2012-06-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>156690</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs><gtr:collaborationOutput><gtr:collaboratingOrganisation>University of Warsaw</gtr:collaboratingOrganisation><gtr:country>Poland, Republic of</gtr:country><gtr:description>Approximate matching of sequences</gtr:description><gtr:id>87CCCEA3-14AA-4593-B4DC-E97E075BABBF</gtr:id><gtr:outcomeId>b97063a4b97063b8-1</gtr:outcomeId><gtr:piContribution>We investigate the approximate matching of sequences problem and we are working to devise a new data structure to solve efficiently this problem for a bounded number of errors in both the text and the pattern. The research group of Prof. Wojciech Rytter is highly active on the domain of data structures and algorithms dealing with textual data. They advised on the design of indexes appropriate to our research project.</gtr:piContribution><gtr:sector>Academic/University</gtr:sector><gtr:start>2012-01-01</gtr:start></gtr:collaborationOutput></gtr:collaborationOutputs><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>Findings for this project have produced a significant progress on the design of data structures for efficient text indexing. This type of structure provides basic tools in the area of text mining and information retrieval.</gtr:description><gtr:firstYearOfImpact>2014</gtr:firstYearOfImpact><gtr:id>6A297621-DECA-4059-B46C-C06786CB8494</gtr:id><gtr:impactTypes><gtr:impactType>Cultural</gtr:impactType></gtr:impactTypes><gtr:outcomeId>545cc460976437.40054008</gtr:outcomeId><gtr:sector>Digital/Communication/Information Technologies (including Software),Pharmaceuticals and Medical Biotechnology</gtr:sector></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>The research provided solutions for approximate indexing whose goal is to pre-compute full-text indexes accepting efficient approximate queries. We provide algorithms that builds the index data structure in time almost linear in the size of the sequence and answer subsequent approximate queries in almost linear time in the size of the query.</gtr:description><gtr:exploitationPathways>The solution could be implemented to be given to potential users in Bioinformatics.</gtr:exploitationPathways><gtr:id>95580909-874A-4DE6-8289-7F7FC778B1BF</gtr:id><gtr:outcomeId>545cc54ff113c6.07852987</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software),Pharmaceuticals and Medical Biotechnology</gtr:sector></gtr:sectors><gtr:url>https://www.cambridge.org/core/journals/mathematical-structures-in-computer-science/article/div-classtitlethe-longest-common-substring-problemdiv/1DA955004B11A551E2BD130AA834CF41</gtr:url></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>362EAE45-472A-42C6-8611-2EDEBA8E7689</gtr:id><gtr:title>A note on the longest common compatible prefix problem for partial words</gtr:title><gtr:parentPublicationTitle>Journal of Discrete Algorithms</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/6556751317b5f241812316ac158a13ab"><gtr:id>6556751317b5f241812316ac158a13ab</gtr:id><gtr:otherNames>Crochemore M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>56d71c8e49da84.30520427</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>98E256FC-1FF8-4410-8347-DFFE9B628F49</gtr:id><gtr:title>Indexing a sequence for mapping reads with a single mismatch.</gtr:title><gtr:parentPublicationTitle>Philosophical transactions. Series A, Mathematical, physical, and engineering sciences</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/6556751317b5f241812316ac158a13ab"><gtr:id>6556751317b5f241812316ac158a13ab</gtr:id><gtr:otherNames>Crochemore M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:issn>1364-503X</gtr:issn><gtr:outcomeId>545cc79d827fb8.30029050</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>4068AF50-60BD-4C23-85DA-5E2C358A363E</gtr:id><gtr:title>Computing the Longest Previous Factor</gtr:title><gtr:parentPublicationTitle>European Journal of Combinatorics</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/6556751317b5f241812316ac158a13ab"><gtr:id>6556751317b5f241812316ac158a13ab</gtr:id><gtr:otherNames>Crochemore M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:outcomeId>doi_53cfeffef671b26a</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>15D9F136-D6EB-4319-9A85-18B69329471E</gtr:id><gtr:title>ON-LINE CONSTRUCTION OF A SMALL AUTOMATON FOR A FINITE SET OF WORDS</gtr:title><gtr:parentPublicationTitle>International Journal of Foundations of Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/2153680ddc6bef98b52f45a1f790e5fb"><gtr:id>2153680ddc6bef98b52f45a1f790e5fb</gtr:id><gtr:otherNames>CROCHEMORE M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:outcomeId>56d71c8e107091.51208060</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>260CD34A-D7AE-44F2-9237-DD407E7A1575</gtr:id><gtr:title>Dictionary-symbolwise flexible parsing</gtr:title><gtr:parentPublicationTitle>Journal of Discrete Algorithms</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/6556751317b5f241812316ac158a13ab"><gtr:id>6556751317b5f241812316ac158a13ab</gtr:id><gtr:otherNames>Crochemore M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:outcomeId>doi_53cff9ff989aae9f</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>35C7B604-2A2A-4A81-B2CA-1BFCF868CE13</gtr:id><gtr:title>The Rightmost Equal-Cost Position Problem</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/6556751317b5f241812316ac158a13ab"><gtr:id>6556751317b5f241812316ac158a13ab</gtr:id><gtr:otherNames>Crochemore M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:isbn>978-1-4673-6037-1</gtr:isbn><gtr:outcomeId>doi_53d0570574de99ea</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>754A6008-53B3-4108-B8F6-E67C75E446D2</gtr:id><gtr:title>The longest common substring problem</gtr:title><gtr:parentPublicationTitle>Mathematical Structures in Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/2153680ddc6bef98b52f45a1f790e5fb"><gtr:id>2153680ddc6bef98b52f45a1f790e5fb</gtr:id><gtr:otherNames>CROCHEMORE M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>5898a887cbbc50.28331509</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>1B88E8B0-9425-488C-BA4B-367E7769C142</gtr:id><gtr:title>Locating maximal approximate runs in a string</gtr:title><gtr:parentPublicationTitle>Theoretical Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/a80a3ba07406d8a09d4d04615771bf5e"><gtr:id>a80a3ba07406d8a09d4d04615771bf5e</gtr:id><gtr:otherNames>Amit M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>5aa1472c7ac549.38689727</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>AC63AD9F-233F-4F32-B916-54D84BC610EE</gtr:id><gtr:title>A comparison of index-based lempel-Ziv LZ77 factorization algorithms</gtr:title><gtr:parentPublicationTitle>ACM Computing Surveys</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/184e25b44f7079f8d905a46e3ae3ea9c"><gtr:id>184e25b44f7079f8d905a46e3ae3ea9c</gtr:id><gtr:otherNames>Al-Hafeedh A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:outcomeId>doi_53d0750757fe7044</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>0244B2AB-E5D5-4E20-A042-0FC8550FA503</gtr:id><gtr:title>A note on efficient computation of all Abelian periods in a string</gtr:title><gtr:parentPublicationTitle>Information Processing Letters</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/6556751317b5f241812316ac158a13ab"><gtr:id>6556751317b5f241812316ac158a13ab</gtr:id><gtr:otherNames>Crochemore M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:outcomeId>doi_53cff7ff796ad5aa</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/J017108/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>