<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/D1774113-D5D2-4B7C-A412-66A90FE4B96F"><gtr:id>D1774113-D5D2-4B7C-A412-66A90FE4B96F</gtr:id><gtr:name>University of Cambridge</gtr:name><gtr:department>Computer Laboratory</gtr:department><gtr:address><gtr:line1>Lensfield Road</gtr:line1><gtr:line4>Cambridge</gtr:line4><gtr:postCode>CB2 1EW</gtr:postCode><gtr:region>East of England</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/D1774113-D5D2-4B7C-A412-66A90FE4B96F"><gtr:id>D1774113-D5D2-4B7C-A412-66A90FE4B96F</gtr:id><gtr:name>University of Cambridge</gtr:name><gtr:address><gtr:line1>Lensfield Road</gtr:line1><gtr:line4>Cambridge</gtr:line4><gtr:postCode>CB2 1EW</gtr:postCode><gtr:region>East of England</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/34CE7AD0-B167-4C0D-A4F5-F6ACE8233E8B"><gtr:id>34CE7AD0-B167-4C0D-A4F5-F6ACE8233E8B</gtr:id><gtr:name>Galois, Inc</gtr:name><gtr:address><gtr:line1>421 SW 6th Avenue</gtr:line1><gtr:line2>Suite 300</gtr:line2><gtr:region>Outside UK</gtr:region></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/FF330969-69E6-4C62-AE31-AD4AF0921FE2"><gtr:id>FF330969-69E6-4C62-AE31-AD4AF0921FE2</gtr:id><gtr:name>Cambridge Econometrics</gtr:name><gtr:address><gtr:line1>Covent Garden</gtr:line1><gtr:line4>Cambridge</gtr:line4><gtr:postCode>CB1 2HS</gtr:postCode><gtr:region>East of England</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/2220746F-CAF8-41B9-A3BB-5767020B26E8"><gtr:id>2220746F-CAF8-41B9-A3BB-5767020B26E8</gtr:id><gtr:name>Naked Science Limited</gtr:name><gtr:address><gtr:line1>36 West Green</gtr:line1><gtr:postCode>CB2 5SA</gtr:postCode><gtr:region>East of England</gtr:region></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/EA3442A5-F08E-42D4-B069-FB4F02E5AECD"><gtr:id>EA3442A5-F08E-42D4-B069-FB4F02E5AECD</gtr:id><gtr:name>Baincore Limited</gtr:name><gtr:address><gtr:line1>C/o Adept Scientific Ltd.</gtr:line1><gtr:line2>Amor Way</gtr:line2><gtr:postCode>SG6 1ZA</gtr:postCode><gtr:region>East of England</gtr:region></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/4BEB7365-5AE4-433D-B9F8-83D156132E37"><gtr:id>4BEB7365-5AE4-433D-B9F8-83D156132E37</gtr:id><gtr:name>Polyhedron Software ltd</gtr:name><gtr:address><gtr:line1>Amor Way</gtr:line1><gtr:postCode>SG6 1ZA</gtr:postCode><gtr:region>East of England</gtr:region></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/F8DE1D4F-E008-49B2-B325-771F48C4E952"><gtr:id>F8DE1D4F-E008-49B2-B325-771F48C4E952</gtr:id><gtr:name>National Centre for Atmospheric Science</gtr:name><gtr:address><gtr:line1>NCAS Headquarters</gtr:line1><gtr:line2>School of Eart and Environment</gtr:line2><gtr:line3>University of Leeds</gtr:line3><gtr:postCode>LS2 9JT</gtr:postCode><gtr:region>Yorkshire and the Humber</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/EBE8271E-2A98-46EA-8FE9-29B15FBC6E48"><gtr:id>EBE8271E-2A98-46EA-8FE9-29B15FBC6E48</gtr:id><gtr:firstName>Andrew</gtr:firstName><gtr:otherNames>Colin</gtr:otherNames><gtr:surname>Rice</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/46B7F263-7987-4E65-B4E1-881AFC0F8B80"><gtr:id>46B7F263-7987-4E65-B4E1-881AFC0F8B80</gtr:id><gtr:firstName>Alan</gtr:firstName><gtr:surname>Mycroft</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/67AB19CB-996C-4338-8F1C-98549EA08F58"><gtr:id>67AB19CB-996C-4338-8F1C-98549EA08F58</gtr:id><gtr:firstName>Dominic</gtr:firstName><gtr:otherNames>Alaistair</gtr:otherNames><gtr:surname>Orchard</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FM026124%2F1"><gtr:id>471BCF74-0F22-4EC7-A0F9-35E80D4DC89C</gtr:id><gtr:title>CamFort: Automated evolution and verification of computational science models</gtr:title><gtr:status>Active</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/M026124/1</gtr:grantReference><gtr:abstractText>Scientific models play a vital role in science and policy making. Many models are now expressed as complex computer programs which are often the result of decades of research and development, possibly involving multiple researchers or teams. This has lead to significant investment in maintaining these models and evolving them to use modern programming approaches or to work efficiently on new hardware platforms (such as cloud computing resources). However, the complexity of these models makes maintenance and evolution difficult. In particular, changing a complex model's code whilst ensuring it produces the same results is difficult; maintenance/evolution of complex models is often error prone. 

The complexity of a piece of software can be classified as either intrinsic or accidental. Intrinsic complexity is an essential reflection of the complexity inherent in the problem and solution at hand. Alternatively, accidental complexity arises from the particular programming language, design or tools used to implement the solution. Many of the research contributions of programming language design and software engineering have been aimed at reducing the accidental complexity of software. However, many of these approaches have not been targetted at scientific computing. 

There is now a need to develop these contributions so that they meet the needs of scientists. Addressing these needs will provide huge benefits to science and policy through increased productivity and trust in models. Our collaborations with leading research groups in science have highlighted the huge existing investments in established models. We are therefore aiming to support the evolution, rather than replacement, of existing code and working practices. Our goal is to apply cutting edge programming language and software engineering research to help develop &amp;quot;sustainable&amp;quot; software, which maintains its value over generations of researcher. Our focus is on models developed in the Fortran language, as this remains a dominant programming language in scientific computing, owing in part to its longevity. 

We will provide practical tools which scientists can use to reduce the accidental complexity of models through evolving a code base, as well as tools for automatically verifying that any maintenance/evolution activities preserve the models behaviour. We will develop new mechanisms for program comprehension and transformation in order to bring effective techniques from programming language design and software engineering across the chasm to scientific computing. Ultimately, reducing the effort to maintain and evolve code will free-up scientists to focus on the core aspects of the science, and will lead to models that are more easily communicated, disseminated, and reused between researchers, supporting core ideals of science.</gtr:abstractText><gtr:potentialImpactText>Computer modelling is now a large part of science and engineering research. However, there are many challenges, e.g., verification, parallelisation, and maintenance. Despite significant programming language and software engineering research to address these concerns, very few results are applied to science; there is little interaction between natural science and programming research communities. Given the importance, the benefits, and the challenges of computational science, it is critical that foundational programming language and software engineering research be targeted at computational science. There is a great opportunity for progress and impact if these communities interact. Our project does exactly this, addressing problems of verified model evolution. However, many more interdisciplinary projects are needed. Part of our project's impact is therefore in promoting a cultural shift to computer science engagement with the sciences, which is critical to the health of future scientific research.

In programming language and software engineering research, our project will provide contributions to various areas such as (1) parsing - accommodating languages with embedded fragments of an unrecognised language, e.g. pre-processor code; (2) program analysis - for advanced refactorings and new verification techniques, e.g. advanced resource analysis and high-level programming pattern detection; (3) verification - techniques for differential testing of program fragments (e.g., before and after refactoring). More broadly, the interdisciplinary nature of this project will provide knowledge and data on the programming needs of computational scientists, which will aid future language research into new programming approaches for science.

As noted by the 'Programming languages and compilers' research area of the EPSRC ICT theme, a lack of implementation effort in this area has held-back impact. Our project includes significant implementation and engagement effort to ensure adoption, impact, and appropriate evaluation of the new programming tools.

Our work benefits scientists and engineers in academia and industry who are involved in computer modelling using Fortran. Our tools will aid the evolution of existing code base which may use custom pre-processors. Furthermore, our tools for automated testing will improve verification of evolution activities, reducing bugs and the effort required to find and correct them. In the short term, our tools will have immediate impact on our collaborators as our research is evaluated in the context of active scientific research. Our collaborators include the Cambridge Centre for Climate Change Mitigation Research (4CMR), the Met Office (the Unified Model), the Centre for Climate Science (Department of Geography), and the Department of Chemistry. The scope of our impact is broadened by dissemination activities (workshops, seminars) and providing the tools free online (and open source). 

On medium to long-term scales, our work will indirectly benefit other aspects of computer modelling by reducing maintenance and verification efforts and thus allowing scientists to focus on other aspects, e.g. underlying science and validation of models. 

Scientific research benefits society mainly through technology (when science is applied via engineering) and policy (informed by predictions). Since our research aims to improve computer modelling in science and engineering, we expect more long-term, indirect impact, although this is difficult to quantify given the technical nature of our research. Nonetheless, many of our collaborators are climate scientists and thus there is route to social, environmental, and policy-based impact. For example, the 4CMR has a number of ongoing projects with policy makers (including OFWAT, the Environment Agency, Department of Energy and Climate Change, Highways Agency, and British Land); our collaboration with 4CMR provides an opportunity for indirect policy/social impact.</gtr:potentialImpactText><gtr:fund><gtr:end>2018-08-31</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2015-07-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>542082</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs><gtr:disseminationOutput><gtr:description>Invited lecture at Southampton CDT</gtr:description><gtr:form>A talk or presentation</gtr:form><gtr:geographicReach>Regional</gtr:geographicReach><gtr:id>1AE5CAD3-754B-45EE-886A-3565FF8B6E91</gtr:id><gtr:impact>Invited lecture at Southampton CDT &amp;quot;Next Generation Computational Modelling&amp;quot;, title &amp;quot;Lightweight Verification for Computational Science Models&amp;quot;. The intention was to inform new computational scientists about the need for verification and testing in scientific code and to present ways of doing this.</gtr:impact><gtr:outcomeId>58b99ab3146806.09970226</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Postgraduate students</gtr:primaryAudience><gtr:year>2016</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>Presentation at Software Sustainability Institute's Collaborations Workshop</gtr:description><gtr:form>A talk or presentation</gtr:form><gtr:geographicReach>National</gtr:geographicReach><gtr:id>D0E1E163-492A-4DE1-A06A-8F9EBE9FF723</gtr:id><gtr:impact>Presentation on units of meaure and dimension checking for Fortran code. 

We aimed to increase awareness and get feedback on the idea. One concrete outcome is that we were invited to present at the next Fortran Modernisation Workshop.</gtr:impact><gtr:outcomeId>5840d330629195.04619391</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Professional Practitioners</gtr:primaryAudience><gtr:url>https://www.software.ac.uk/cw16</gtr:url><gtr:year>2016</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>Organised meeting on Testing and Verification for Computational Science (TVCS)</gtr:description><gtr:form>Participation in an activity, workshop or similar</gtr:form><gtr:geographicReach>Regional</gtr:geographicReach><gtr:id>C52EF5B1-775F-4CFE-8FA2-3376177F6FAE</gtr:id><gtr:impact>The need for more rigorous software verification in computational science is well known. Often the responsibility is placed on the scientist, but increased care and attention is not enough. There is a wealth of research in computer science aimed at automating testing and verification, yet little of this has crossed over into practice in the sciences.

This meeting will provide a forum to discuss recent work and new ideas, and to foster links between researchers interested in the intersection of verification, programming languages, and computational science. The meeting is aimed at both computer scientists and natural scientists employing computational techniques. 

The meeting comprised of 10 talks given by a variety of computer scientists and computational scientists. Including a keynote from Sylvie Boldo from Inria in Orsay, France.

The objective was to start a dialogue between our fields and gain better understanding of problems. We made contact with users to trial our units of measure software and got feedback on our ideas for stencil computations.</gtr:impact><gtr:outcomeId>5840d2869e8ac9.79264443</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Professional Practitioners</gtr:primaryAudience><gtr:url>http://www.cl.cam.ac.uk/~dao29/meeting-tvcs/</gtr:url><gtr:year>2016</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>Presentations at Fortran Modernisation Workshops</gtr:description><gtr:form>A talk or presentation</gtr:form><gtr:geographicReach>National</gtr:geographicReach><gtr:id>5F2FE161-64B7-4B67-A565-870455DCF450</gtr:id><gtr:impact>We have given a number of presentations on the Camfort tool focussing on units of measure to computational scientists attending the Fortran Modernisation Workshop:

13-14 July 2016 - Oxford 
28-29 July 2016 - University of Southampton
24-25 August 2016 - Culham Centre for Fusion Energy
01-02 September 2016 - Queen Mary University of London
28 September 2016 - Daresbury
03 Febuary 2017 - Manchester

The most significant outcome of this has been that we were asked to provide Power8 binaries of CamFort so that our tool can be incorporated into practical tutorials. But we have also informed lots of scientists about the potential for lightweight verification.</gtr:impact><gtr:outcomeId>5840d40899a446.34440347</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Professional Practitioners</gtr:primaryAudience><gtr:url>http://www.nag.co.uk/content/fortran-modernization-workshop</gtr:url><gtr:year>2016</gtr:year></gtr:disseminationOutput></gtr:disseminationOutputs><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs><gtr:softwareAndTechnicalProductOutput><gtr:description>CamFort is a refactoring and verification tool for scientific Fortran programs. It currently supports Fortran 66, 77, and 90 with various legacy exntesions.</gtr:description><gtr:id>8E4663F1-D1C0-4757-9F97-8FCB8535596E</gtr:id><gtr:impact>9 people watching project for updates, 32 people have starred our repository, 5 people have forked the project to work on their own.

We've given tutorials on Camfort at numerous venues - see engagement activities.</gtr:impact><gtr:outcomeId>58b99c03741c80.15070874</gtr:outcomeId><gtr:title>CamFort</gtr:title><gtr:type>Software</gtr:type><gtr:url>https://github.com/camfort/camfort</gtr:url><gtr:yearFirstProvided>2016</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput></gtr:softwareAndTechnicalProductOutputs><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>0773614B-E4F3-4419-A996-F1EBEAFDB9D2</gtr:id><gtr:title>Lightning Talk: Supporting Software Sustainability with Lightweight Specifications</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/1c9bda49c065a96baab120a66523bb94"><gtr:id>1c9bda49c065a96baab120a66523bb94</gtr:id><gtr:otherNames>Contrastin MOJP</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>5840d0ba8aab02.18956674</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>29979B1C-77B0-44F5-9E7A-2E3542443FF0</gtr:id><gtr:title>Units-of-Measure Correctness in Fortran Programs</gtr:title><gtr:parentPublicationTitle>COMPUTING IN SCIENCE &amp; ENGINEERING</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/481e11a33cb9c609a089a378996a7f83"><gtr:id>481e11a33cb9c609a089a378996a7f83</gtr:id><gtr:otherNames>Contrastin Mistral</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:issn>1521-9615</gtr:issn><gtr:outcomeId>5a351afa0495a4.44552599</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>F592FED3-90BB-4DDD-A7A7-F6282D06E0E9</gtr:id><gtr:title>Verifying spatial properties of array computations</gtr:title><gtr:parentPublicationTitle>Proceedings of the ACM on Programming Languages</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/0bdfc974eb839e582587b41d5a581001"><gtr:id>0bdfc974eb839e582587b41d5a581001</gtr:id><gtr:otherNames>Orchard D</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>5a6134ecaaea89.06509420</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>E636D313-BEE8-4C8B-9EE7-842975EED7D8</gtr:id><gtr:title>Evolving Fortran types with inferred units-of-measure</gtr:title><gtr:parentPublicationTitle>Journal of Computational Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/0bdfc974eb839e582587b41d5a581001"><gtr:id>0bdfc974eb839e582587b41d5a581001</gtr:id><gtr:otherNames>Orchard D</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>585d55f49036d7.49398349</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>C2B39BAA-063A-4EA7-BE6B-47BDB565D894</gtr:id><gtr:title>Units-of-Measure Correctness in Fortran Programs</gtr:title><gtr:parentPublicationTitle>Computing in Science &amp; Engineering</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/7c4fb6775d998cc07cd8041636d61f79"><gtr:id>7c4fb6775d998cc07cd8041636d61f79</gtr:id><gtr:otherNames>Contrastin M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>56a38d8b53ea25.07988461</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/M026124/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>50</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>E05CFE0B-163D-412D-A3C2-28E89B2CA336</gtr:id><gtr:percentage>50</gtr:percentage><gtr:text>Software Engineering</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>