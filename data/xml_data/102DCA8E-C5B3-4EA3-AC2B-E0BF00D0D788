<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations><gtr:collaborator url="http://gtr.ukri.org:80/organisation/1D62836F-9B11-450E-A387-4BAB41F7E644"><gtr:id>1D62836F-9B11-450E-A387-4BAB41F7E644</gtr:id><gtr:name>Mozilla Research</gtr:name></gtr:collaborator><gtr:collaborator url="http://gtr.ukri.org:80/organisation/3DF2F8DD-33A5-44A1-81D7-347A6C2FBDC8"><gtr:id>3DF2F8DD-33A5-44A1-81D7-347A6C2FBDC8</gtr:id><gtr:name>Stanford University</gtr:name><gtr:address><gtr:line1>450 Serra Mall</gtr:line1><gtr:region>Outside UK</gtr:region><gtr:country>United States</gtr:country></gtr:address></gtr:collaborator><gtr:collaborator url="http://gtr.ukri.org:80/organisation/F724BB81-CAD8-43A7-B2C0-394CD9DE4639"><gtr:id>F724BB81-CAD8-43A7-B2C0-394CD9DE4639</gtr:id><gtr:name>University of California, San Diego</gtr:name><gtr:address><gtr:line1>9500 Gilman Drive</gtr:line1><gtr:line4>La Jolla</gtr:line4><gtr:line5>CA 92093</gtr:line5><gtr:region>Outside UK</gtr:region><gtr:country>United States</gtr:country></gtr:address></gtr:collaborator><gtr:collaborator url="http://gtr.ukri.org:80/organisation/BAB368AC-F53E-4B01-A4D9-23CBC4A1996D"><gtr:id>BAB368AC-F53E-4B01-A4D9-23CBC4A1996D</gtr:id><gtr:name>Google</gtr:name></gtr:collaborator></gtr:collaborations><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/3A5E126D-C175-4730-9B7B-E6D8CF447F83"><gtr:id>3A5E126D-C175-4730-9B7B-E6D8CF447F83</gtr:id><gtr:name>University College London</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>Gower Street</gtr:line1><gtr:line4>London</gtr:line4><gtr:postCode>WC1E 6BT</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/3A5E126D-C175-4730-9B7B-E6D8CF447F83"><gtr:id>3A5E126D-C175-4730-9B7B-E6D8CF447F83</gtr:id><gtr:name>University College London</gtr:name><gtr:address><gtr:line1>Gower Street</gtr:line1><gtr:line4>London</gtr:line4><gtr:postCode>WC1E 6BT</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/1D62836F-9B11-450E-A387-4BAB41F7E644"><gtr:id>1D62836F-9B11-450E-A387-4BAB41F7E644</gtr:id><gtr:name>Mozilla Research</gtr:name><gtr:roles><gtr:role><gtr:name>COLLABORATOR</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/3DF2F8DD-33A5-44A1-81D7-347A6C2FBDC8"><gtr:id>3DF2F8DD-33A5-44A1-81D7-347A6C2FBDC8</gtr:id><gtr:name>Stanford University</gtr:name><gtr:address><gtr:line1>450 Serra Mall</gtr:line1><gtr:region>Outside UK</gtr:region><gtr:country>United States</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>COLLABORATOR</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/F724BB81-CAD8-43A7-B2C0-394CD9DE4639"><gtr:id>F724BB81-CAD8-43A7-B2C0-394CD9DE4639</gtr:id><gtr:name>University of California, San Diego</gtr:name><gtr:address><gtr:line1>9500 Gilman Drive</gtr:line1><gtr:line4>La Jolla</gtr:line4><gtr:line5>CA 92093</gtr:line5><gtr:region>Outside UK</gtr:region><gtr:country>United States</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>COLLABORATOR</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/BAB368AC-F53E-4B01-A4D9-23CBC4A1996D"><gtr:id>BAB368AC-F53E-4B01-A4D9-23CBC4A1996D</gtr:id><gtr:name>Google</gtr:name><gtr:roles><gtr:role><gtr:name>COLLABORATOR</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/CEB4F379-1566-403D-BB57-94C685C9B7AE"><gtr:id>CEB4F379-1566-403D-BB57-94C685C9B7AE</gtr:id><gtr:firstName>Mark</gtr:firstName><gtr:otherNames>James</gtr:otherNames><gtr:surname>Handley</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/7EDECC9C-4C40-4388-88DB-ECA412D34EB7"><gtr:id>7EDECC9C-4C40-4388-88DB-ECA412D34EB7</gtr:id><gtr:firstName>Peter</gtr:firstName><gtr:surname>O'Hearn</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/08825339-619B-4F60-9070-CE1D638BDAB9"><gtr:id>08825339-619B-4F60-9070-CE1D638BDAB9</gtr:id><gtr:firstName>Juan Antonio</gtr:firstName><gtr:surname>Navarro Perez</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/F468A768-9FF8-4154-8064-E584D786FE9D"><gtr:id>F468A768-9FF8-4154-8064-E584D786FE9D</gtr:id><gtr:firstName>Byron</gtr:firstName><gtr:surname>Cook</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/2F586A49-82D9-4CF3-8F20-9C6A8D6790FE"><gtr:id>2F586A49-82D9-4CF3-8F20-9C6A8D6790FE</gtr:id><gtr:firstName>Brad</gtr:firstName><gtr:otherNames>Nelson</gtr:otherNames><gtr:surname>Karp</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FK032542%2F1"><gtr:id>102DCA8E-C5B3-4EA3-AC2B-E0BF00D0D788</gtr:id><gtr:title>Program Verification Techniques for Understanding Security Properties of Software</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/K032542/1</gtr:grantReference><gtr:abstractText>This proposal aims to develop automatic program verification methods that help security engineers to understand software that they have not written themselves. The engineer will be able to make sophisticated queries about resource requirements and temporal behaviour of code, such as about memory safety, privileges, or information flow. Our methods will even support synthesis of behavioural properties for the engineer: rather than make a closed-world assumption, where the complete program and physical computing device are known, our tools will discover logical descriptions of execution environments (preconditons, protocols, invariants, etc.) that pinpoint the assumptions necessary for code safety or those that trigger violations. Such tools would aid engineers by, for example, advising where to concentrate effort when looking for critical security breaches. They would also suggest where to place effort in hardening an application. Finally, by using strong analysis techniques based on verification, guarantees of security properties could be obtained, as well as flaws discovered.
 
Towards realising this vision we have assembled a team whoseexperience ranges from program verification research on logics and algorithms to systems security research involving new operating system primitives and software structuring principles that achieve robust security goals.</gtr:abstractText><gtr:potentialImpactText>The work on this proposal will have potential for impact into the industry and the public sector. 

We have links into Microsoft, both into static analysis research and into the security division on the product side. The London-based SME Monoidics ltd markets a static analysis tool which would be well placed to be influenced by the theoretical work and analysis prototypes done in this project. We also have a longstanding collaboration with Google on Native Client (NaCl), which securely runs untrusted native code downloaded from the Internet within the Chrome web browser.

These specific connections provide viable avenues for industrial impact of the results of this project. More generally, 
static analysis is gaining more attention in industry as time goes on. Major players in avionics, consumer electronics, and the automotive and defence industries use static analysis for bug-catching in-house. Thus, if this project were to achieve its aims there would appear to be opportunity for further industrial impact in the mid- to long-term (.e., 5-10 years and out).
 
In the public sector, the mere fact of GCHQ's support for the Research Institute in Automatic Program Analysis and Verification indicates interest, and potential for impact. The UK Government has made clear that they view cybersecurity as important, from the Cabinet Office Cybersecurity Strategy document in 2009, through to a parliamentary briefing note &amp;quot;Cybersecurity in the UK&amp;quot; in 2011, to the Cybersecurity Challenge launched in 2012. Generally speaking, as far as the public sector goes, work under this RI call will likely have more avenues for impact into the public sector than static analysis work has had before.</gtr:potentialImpactText><gtr:fund><gtr:end>2017-04-06</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2013-10-07</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>876542</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs><gtr:collaborationOutput><gtr:collaboratingOrganisation>Stanford University</gtr:collaboratingOrganisation><gtr:country>United States of America</gtr:country><gtr:description>UCL-Stanford Collaboration on Web Browser Security</gtr:description><gtr:id>A2FF989D-D4D0-47CC-B15A-43E061030D29</gtr:id><gtr:impact>HotOS 2013 paper, Toward Principled Browser Security
OSDI 2014 paper, Protecting Users by Confining JavaScript with COWL</gtr:impact><gtr:outcomeId>5463a2b5198a90.16249467-1</gtr:outcomeId><gtr:partnerContribution>Same as the contributions our research team has made; we are equal collaborators on all aspects of the research.</gtr:partnerContribution><gtr:piContribution>Collaborated on the design of new privacy techniques for web browsers. Contributed to the research problem definition, design of the privacy techniques, selection of test-case applications, design of experimental evaluation, and writing up of the research in peer-reviewed publications.</gtr:piContribution><gtr:sector>Academic/University</gtr:sector><gtr:start>2013-01-01</gtr:start></gtr:collaborationOutput><gtr:collaborationOutput><gtr:collaboratingOrganisation>University of California, San Diego (UCSD)</gtr:collaboratingOrganisation><gtr:country>United States of America</gtr:country><gtr:department>Department of Computer Science and Engineering</gtr:department><gtr:description>UCL-UCSD collaboration on web security and privacy</gtr:description><gtr:id>C6FBCFFD-3433-4081-A537-AEE9E821E2A4</gtr:id><gtr:impact>Not multi-disciplinary; all within Computer Science.

No outputs yet.</gtr:impact><gtr:outcomeId>58ca6595b4c2f2.29429221-1</gtr:outcomeId><gtr:partnerContribution>Ongoing design extensions and improvements to the COWL (Confinement with Origin Web Labels) system for web privacy.</gtr:partnerContribution><gtr:piContribution>Ongoing design extensions and improvements to the COWL (Confinement with Origin Web Labels) system for web privacy.</gtr:piContribution><gtr:sector>Academic/University</gtr:sector><gtr:start>2016-01-01</gtr:start></gtr:collaborationOutput><gtr:collaborationOutput><gtr:collaboratingOrganisation>Google</gtr:collaboratingOrganisation><gtr:country>United States of America</gtr:country><gtr:department>Research at Google</gtr:department><gtr:description>UCL-Stanford Collaboration on Web Browser Security</gtr:description><gtr:id>70B63B87-09B3-401D-9C36-80FC2C27D6E4</gtr:id><gtr:impact>HotOS 2013 paper, Toward Principled Browser Security
OSDI 2014 paper, Protecting Users by Confining JavaScript with COWL</gtr:impact><gtr:outcomeId>5463a2b5198a90.16249467-3</gtr:outcomeId><gtr:partnerContribution>Same as the contributions our research team has made; we are equal collaborators on all aspects of the research.</gtr:partnerContribution><gtr:piContribution>Collaborated on the design of new privacy techniques for web browsers. Contributed to the research problem definition, design of the privacy techniques, selection of test-case applications, design of experimental evaluation, and writing up of the research in peer-reviewed publications.</gtr:piContribution><gtr:sector>Private</gtr:sector><gtr:start>2013-01-01</gtr:start></gtr:collaborationOutput><gtr:collaborationOutput><gtr:collaboratingOrganisation>Mozilla Research</gtr:collaboratingOrganisation><gtr:country>Global</gtr:country><gtr:description>UCL-Stanford Collaboration on Web Browser Security</gtr:description><gtr:id>696F5B8A-0353-42EF-8655-75A6BB87714F</gtr:id><gtr:impact>HotOS 2013 paper, Toward Principled Browser Security
OSDI 2014 paper, Protecting Users by Confining JavaScript with COWL</gtr:impact><gtr:outcomeId>5463a2b5198a90.16249467-2</gtr:outcomeId><gtr:partnerContribution>Same as the contributions our research team has made; we are equal collaborators on all aspects of the research.</gtr:partnerContribution><gtr:piContribution>Collaborated on the design of new privacy techniques for web browsers. Contributed to the research problem definition, design of the privacy techniques, selection of test-case applications, design of experimental evaluation, and writing up of the research in peer-reviewed publications.</gtr:piContribution><gtr:sector>Charity/Non Profit</gtr:sector><gtr:start>2013-01-01</gtr:start></gtr:collaborationOutput></gtr:collaborationOutputs><gtr:disseminationOutputs><gtr:disseminationOutput><gtr:description>Invited talk at Microsoft Research, Redmond, USA</gtr:description><gtr:form>A talk or presentation</gtr:form><gtr:geographicReach>International</gtr:geographicReach><gtr:id>88037FF8-7D83-4337-8821-BEF52D281FA2</gtr:id><gtr:impact>Received an invitation to give a talk at Microsoft Research in Redmond in the USA on my work on the COWL web browser privacy project. Delivered a 90 minute-long talk (including Q&amp;amp;A) on the design and implementation of the system to influential researchers at Microsoft, including people involved with web security-related products and research at Microsoft.</gtr:impact><gtr:outcomeId>56e06c036e25b5.00172675</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Industry/Business</gtr:primaryAudience><gtr:url>http://research.microsoft.com/apps/video/default.aspx?id=244746&amp;r=1</gtr:url><gtr:year>2015</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>Presentation on Browser Privacy to UK Cyber Security Research Conference 2014</gtr:description><gtr:form>A talk or presentation</gtr:form><gtr:geographicReach>International</gtr:geographicReach><gtr:id>43D99D66-39CC-4627-945E-4C4C4FD85AF3</gtr:id><gtr:impact>Presentation led to questions and interest from representatives of the UK government (GCHQ, BIS, OCSIA).

James Quinault, CBE, the head of OCSIA in the UK government, initiated the meeting by citing my research on COWL (the subject of my presentation) as an example of the sort of world-leading technical work on security and privacy that the UK excels at.

After my talk, two representatives from GCHQ asked if I would visit their site and give a longer technical talk on my research on web browser privacy.</gtr:impact><gtr:outcomeId>5463a5ecad2e27.82432769</gtr:outcomeId><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Policymakers/parliamentarians</gtr:primaryAudience><gtr:year>2014</gtr:year></gtr:disseminationOutput></gtr:disseminationOutputs><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>Our work on COWL (for web privacy) has led to the creation of a draft standard (First Public Working Draft) with the World Wide Web Consortium (W3C), the body that standardises how the web works (and thus the features included in web browsers, servers, and sites). This standardisation process, which is ongoing at this writing, may eventually lead to the incorporation of COWL into widely used web browsers (e.g., Mozilla Firefox and Google Chrome), and thus to widespread use of COWL to improve privacy for web users.</gtr:description><gtr:firstYearOfImpact>2015</gtr:firstYearOfImpact><gtr:id>088986F9-333C-4EF6-A5B7-07F29CCAD19A</gtr:id><gtr:impactTypes><gtr:impactType>Economic</gtr:impactType></gtr:impactTypes><gtr:outcomeId>56e0706c3bc626.54070387</gtr:outcomeId><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>Today's web developers cobble together JavaScript code from libraries and other web applications written by potentially malicious third parties. The threat to web users' privacy is severe: unbeknownst to either a web application's user or its developer, malicious code included in the application may leak the user's sensitive data to unauthorised third parties. With our collaborators at Mozilla, Google, Stanford, and UCSD, we have designed and built Confinement with Origin Web Labels (COWL), a confinement system for modern web browsers that prevents malicious JavaScript code in web applications from exfiltrating such sensitive data. COWL strengthens privacy for users while also increasing flexibility for application developers: its approach to confinement enables the creation of featureful web applications (e.g., third-party mashups) that are disallowed in the status-quo web.

We have produced implementations of COWL for the Mozilla Firefox and Google Chromium web browsers, and released the former as open source. We have demonstrated the applicability of COWL to a wide range of web applications. We have taken a major first step toward the adoption of COWL in mainstream web browsers by standardising COWL with the World Wide Web Consortium (W3C), the standards body for the web; the First Public Working Draft (FPWD) of COWL was released in October 2015, and our standardisation efforts with the W3C continue. COWL also appeared in USENIX OSDI 2014, the co-premier venue (with ACM SOSP) for computer systems research.

---

Vulnerabilities in modern server-side applications that give rise to sensitive data disclosures arise when programmers make errors: e.g., forgetting to sanitise input from the remote user before executing a dangerous operation with that input, or forgetting to include the appropriate access control check before sending access-controlled data to a remote user. We have designed and built G8, a run-time policy system for the popular Node.js JavaScript development framework for server-side applications. By enforcing security invariants at runtime, G8 blocks unsafe operations and unauthorised disclosures of sensitive information that would otherwise have resulted from programmer errors.

We have produced an implementation of G8 for the Node.js development environment that augments the V8 JavaScript runtime to enforce labeled information flow control-based policies. We have demonstrated that G8 successfully prevents exploits of vulnerabilities in popular server-side Node.js applications, such as the etherpad collaborative text editor.

---

To understand whether or not software may exhibit a specific dangerous (or desirable) behaviour, formal proof of invariants that hold in all the software's possible executions is invaluable. We have devised new formal program analyses and built tools that implement these analyses for real-world program source code.

We have produced analyses and tools that, e.g., prove when an event may happen infinitely often in the future of a program's execution; prove whether fairness is achieved in the execution of a program with infinite branching; and disprove termination of a program through overapproximation.</gtr:description><gtr:exploitationPathways>COWL may be deployed in mainstream web browsers, for use by the world's web users; our activity to standardise COWL is ongoing.

G8 may be used to secure Node.js server-side applications against attacks that disclose sensitive information to unauthorised parties.

Our program analyses may be used by researchers and practitioners alike to determine whether real-world software exhibits desired security properties.</gtr:exploitationPathways><gtr:id>4F19E30F-7AE3-4B4D-AD58-348BB0A65C80</gtr:id><gtr:outcomeId>56e070347b2d09.75109796</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs><gtr:softwareAndTechnicalProductOutput><gtr:description>Implementations of a confinement system to protect users' privacy in the Google Chromium and Mozilla Firefox web browsers.</gtr:description><gtr:id>B207EB87-85BE-4531-901D-120FD3303B78</gtr:id><gtr:impact>Early thus far, but press coverage about the code release and research project:

http://www.theregister.co.uk/2014/10/07/boffins_build_cowl_web_privacy_system_to_cut_malware_off_at_the_knees/
http://www.engadget.com/2014/10/06/cowl-web-privacy/
http://www.networkworld.com/article/2691741/microsoft-subnet/researchers-unveil-cowl-a-new-system-to-protect-surfers-privacy.html</gtr:impact><gtr:outcomeId>5463a40c0c7f59.09622624</gtr:outcomeId><gtr:title>COWL Confinement Systems for Web Browsers</gtr:title><gtr:type>Software</gtr:type><gtr:url>http://cowl.ws</gtr:url><gtr:yearFirstProvided>2014</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput></gtr:softwareAndTechnicalProductOutputs><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>9391B511-42F0-4A54-BF40-BC88F838878C</gtr:id><gtr:title>Learning to Decipher the Heap for Program Verification</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/9de00df37a4c71607eb406145eb5e2d1"><gtr:id>9de00df37a4c71607eb406145eb5e2d1</gtr:id><gtr:otherNames>Brockschmidt M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>58ca5f369e9122.75002328</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>B172E786-D81B-42C2-BC0E-067A081FDA57</gtr:id><gtr:title>Faster Temporal Reasoning for Infinite-State Programs</gtr:title><gtr:parentPublicationTitle>Formal Methods in Computer-Aided Design 2014 (FMCAD 2014)</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/8702ad21227e42e5aa9cbfe77c0e06a4"><gtr:id>8702ad21227e42e5aa9cbfe77c0e06a4</gtr:id><gtr:otherNames>Cook B</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:outcomeId>5463a012b1cdb2.08044118</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>F34C54F9-0329-44F9-93AB-0D7813B97ED6</gtr:id><gtr:title>Toward Principled Browser Security</gtr:title><gtr:parentPublicationTitle>Proceedings of the 14th Workshop on Hot Topics in Operating Systems (HotOS XIV)</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/3a8b2c343f11cee7ac6616ac31a7ea2d"><gtr:id>3a8b2c343f11cee7ac6616ac31a7ea2d</gtr:id><gtr:otherNames>Yang E</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:outcomeId>54639e7015c9d8.55029661</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>F03981E8-D168-433E-B2B0-BCC18553D2E3</gtr:id><gtr:title>Disproving Termination with Overapproximation</gtr:title><gtr:parentPublicationTitle>Formal Methods in Computer-Aided Design 2014 (FMCAD 2014)</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/8702ad21227e42e5aa9cbfe77c0e06a4"><gtr:id>8702ad21227e42e5aa9cbfe77c0e06a4</gtr:id><gtr:otherNames>Cook B</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:outcomeId>5463a071990c92.27891311</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>C4403315-F29D-4F9D-946D-DD21461A4A38</gtr:id><gtr:title>Protecting Users by Confining JavaScript with COWL</gtr:title><gtr:parentPublicationTitle>Proceedings of the 11th USENIX Symposium on Operating Systems Design and Implementation (OSDI 2014)</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/3d7877f21eb2a1db262d187825c6bf86"><gtr:id>3d7877f21eb2a1db262d187825c6bf86</gtr:id><gtr:otherNames>Stefan D</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:outcomeId>54639f1c089c37.33578512</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/K032542/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>