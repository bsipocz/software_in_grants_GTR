<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/12247D49-C076-43CB-B063-A4E785DFEE99"><gtr:id>12247D49-C076-43CB-B063-A4E785DFEE99</gtr:id><gtr:firstName>James</gtr:firstName><gtr:otherNames>Benjamin</gtr:otherNames><gtr:surname>Worrell</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FH018581%2F1"><gtr:id>F9585135-AFC1-4EF1-A823-D3948822F368</gtr:id><gtr:title>Extensions of the Church Synthesis Problem</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/H018581/1</gtr:grantReference><gtr:abstractText>In theoretical computer science, synthesis refers to the process of taking a logical specification, determining whether it is realizable, and, if so, generating an implementation that meets the specification. Thus synthesis involves the passage from a high-level descriptive view of a system to a more implementation-oriented view. Ideally a solution to the synthesis problem involves a decision procedure that generates the implementation automatically from the specification. In full generality it is not possible to automatically synthesize implementations. However, by carefully restricting the specification and implementation formalisms one can achieve decidability. One can trace the origins of the synthesis problem to an influential paper by the logician Alonzo Church in the 1960s, which posed the problem of synthesizing finite-state machine implementations of specifications written in second-order monadic logic over the natural numbers. It is this approach that we seek to develop in this project.One direction we plan to investigate asks that not only the specification, but also the implementation be given in a logical formalism. This is a smaller step than refining directly to a state machine implementation and opens the way to understand in an abstract way the relationship between the relative expressiveness and complexity of the specification and implementation formalisms.In another direction we plan to consider the challenging problem of synthesizing real-time systems from real-time specifications. Real-time systems include physical hardware, real-time controllers, communication protocols and embedded systems. To accurately model such systems one must take account of real-time behaviour, e.g., latency in hardware, timeouts in protocols or the frequency of stimuli from the environment. The major challenge here is that implementing a non-trivial real-time specification requires that we go beyond finite-state implementations.Finally we plan to consider synthesis relative to oracles. Oracles model background knowledge that can be used both in the specification and implementation. Even though such an oracle could refer to information that is only semi-computable, we still want to be able to say that synthesis relative to such an oracle is decidable.</gtr:abstractText><gtr:potentialImpactText>The proposed research concerns the problem of synthesizing system components from high-level input-output logical specifications. The motivation for the synthesis problem that we study originally came from the theory of sequential circuits, and we consider that the potential long-term beneficiaries are hardware and software companies. While propositional logic synthesis is already used in VLSI design to great effect, the version of the synthesis problem that we study is much more challenging from an algorithmic point of view since it involves temporal and predicate logics. Nevertheless, given the increasing complexity of modern software and hardware systems, and the need to optimize designs with respect to area, speed or power, there is a clear need to provide further automated support to designers. Thus, while automated synthesis for highly expressive specification languages, such as predicate and temporal logics, is an ambitious goal, and carries a significant element of risk, we feel that research in this area has the potential for great impact over the long term. This grant proposes to do foundational research. Given the current state of the art, it is unrealistic to expect direct or short-term industrial applications of this work. In particular, the field is not sufficiently well developed to consider industrial case studies. However we believe that foundational research will prove indispensable for unlocking the potential of automatic synthesis. By analogy with the closely related field of model checking, we believe the time period between foundational studies and industrial benefits being realized could be up to twenty years. The influence of this research will necessarily be mediated through subsequent application-oriented research. Thus our main strategy to maximize the impact of the research is through disseminating our results to other researchers working in automated verification.</gtr:potentialImpactText><gtr:fund><gtr:end>2010-09-07</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2009-12-08</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>60867</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>This research is foundational and has yet to be directly used in industry.</gtr:description><gtr:id>3F7E8D40-1305-4AAE-8AF6-2E966331BC20</gtr:id><gtr:impactTypes/><gtr:outcomeId>546391a4f32859.28801529</gtr:outcomeId></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>Synthesis is the process of automatically or semi-automatically building a system from a specification, e.g., building a circuit from a functional description of input-output behaviour. The idea is such a system should be correct by design.

This grant tackles the problem of real-time synthesis, in which the specification concerns the input-output behaviour of a real-time system and the goal of synthesis is a system that realises this behaviour.

A master problem in this domain is the Church Synthesis Problem (due to Alonzo Church), in which both the specification and the synthesized system realising the specification are presented as formulas. In this grant we generalise the Chuch Synthesis Problem by generalising the underlying logic to allow it specify properties of real-time systems.

The main finding of the grant is an algorithm to solve the Church Synthesis Problem over the reals, that is, an algorithm for sythesising real-time systems from specifications.</gtr:description><gtr:exploitationPathways>A natural extension of this work would involve having the synthesis procedure output a less abstract model of the desired system (e.g., as an automaton rather than a formula). This would enhance the capability of current tool support for designing real-time systems. Current tools are restricted to verification (checking correctness) rather than synthesis (constructing systems that are correct by design).</gtr:exploitationPathways><gtr:id>B39AD451-247E-425D-A624-6BB5F840CF23</gtr:id><gtr:outcomeId>54639130e6d117.32761527</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>4B7F1EE4-A9F3-448D-BD65-B7E36A0F86A2</gtr:id><gtr:title>Expressing Cardinality Quantifiers in Monadic Second-Order Logic over Trees</gtr:title><gtr:parentPublicationTitle>FUNDAMENTA INFORMATICAE</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/870bdea952938fc9046add305cd97a77"><gtr:id>870bdea952938fc9046add305cd97a77</gtr:id><gtr:otherNames>Barany Vince</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:issn>0169-2968</gtr:issn><gtr:outcomeId>doi_55f952952e36f1e0</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>38E595E1-3E91-49BA-BFFE-9B41A36A3509</gtr:id><gtr:title>Alternating Timed Automata over Bounded Time</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/918800646f21b4ca406ed7449fe25334"><gtr:id>918800646f21b4ca406ed7449fe25334</gtr:id><gtr:otherNames>Jenkin M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:isbn>978-1-4244-7588-9</gtr:isbn><gtr:outcomeId>doi_53d05b05b2e276a2</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/H018581/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>