<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/ACE617BE-3E38-4485-9965-C2A062A22E3A"><gtr:id>ACE617BE-3E38-4485-9965-C2A062A22E3A</gtr:id><gtr:firstName>Jeremy</gtr:firstName><gtr:surname>Gibbons</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FK020919%2F1"><gtr:id>7E0E747D-AE9A-42B5-89AF-BF68BEB04D9C</gtr:id><gtr:title>A Theory of Least Change for Bidirectional Transformations</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/K020919/1</gtr:grantReference><gtr:abstractText>A bidirectional transformation is a means of maintaining consistency between multiple information sources: when one source is edited, the others may need updating to restore consistency. There are many domains in which bidirectional transformations are needed. Currently, the best-known of these is model-driven development. Model-driven development is the approach to developing software in which models - specialised descriptions of only certain aspects of the software to be built - are important artefacts in the development. Some or all code may be generated from models, rather than written by hand. Different experts work on different models, adapted to their needs, each recording their decisions in their own model. In order to end up with a correct system, the models need to be kept consistent; when one developer changes one model, another model may need to be changed to match, and vice versa. Another current application is the &amp;quot;view update&amp;quot; problem in databases (updating source tables after edits to view tables). Potential applications include integrating different electronic health records, maintaining consistency between a high-level systems biology model and a more detailed model of some aspect, providing user-friendly access to machine-oriented data representation, automating the coevolution of a program with its proof of correctness, etc.

A bidirectional transformation can be implemented in terms of several unidirectional restoring functions, one per source; but this duplicates information (for example, information about the structure of the models being related appears in every function), wasting effort and risking inconsistencies. Bidirectional transformation languages allow one to describe the consistency relationship and the restoring functions with a single declarative specification. A good bidirectional transformation language should support the developer of the transformation by not allowing the developer to write nonsense: when a transformation is considered correct according to the language, it should obey basic sanity properties.

Various natural properties of bidirectional transformations are now well understood; in particular, &amp;quot;correctness&amp;quot; (that the bidirectional transformation does actually restore consistency) and &amp;quot;hippocraticness&amp;quot; (that if an edited source remains consistent, then the bidirectional transformation makes no changes). What is much less well understood, and what we will study in this project, is the &amp;quot;principle of least change&amp;quot; (that a bidirectional transformation should not make unnecessary changes when it enforces consistency).

Our hypotheses are: (i) that this Principle of Least Change can be precisely and productively captured; (ii) that our understanding of the Principle will benefit from work on &amp;quot;provenance&amp;quot; in databases - provenance involves building and using a record of which outputs depend on which inputs, and how they do so; and (iii) that this will lead to a theory of &amp;quot;alignment&amp;quot; - matching of parts - for non-free datatypes such as associative lists and graphs. Graphs are an especially important datatype, because they are ubiquitous in software engineering. In particular, the models in model-driven development are often types of graph, such as class diagrams and statecharts.

This project will work on the mathematical foundations of bidirectional transformations. The reason for doing this is in order that a better understanding of the Principle of Least Change will, in future, contribute to more usable and more reliable model-driven engineering tools, supporting efficient and correct software development, even in the face of continuous change. It will thus enable software developers to combine the advantages of model-driven development with those of agile methods. By enabling better languages and tools to be developed, it will also make practical the use of bidirectional transformations in a wide range of other application areas.</gtr:abstractText><gtr:fund><gtr:end>2017-02-28</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2013-08-31</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>309018</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>We have discovered that the technical device called monads can be useful to
describe, formally, correctness properties for the type of software
artefact we're studying (bidirectional transformations). These are
particularly useful in that, we showed, they can be used to reason about
situations in which the bidirectional transformation needs to have
so-called effects, such as interacting with the user.

We have developed several notions of least surprise; that is, properties
that can help such bidirectional transformations to have behaviour that
will be useful and not disruptive to their users. We showed why the most
obvious version of such a property does not always give the bidirectional
transformation the best behaviour, and we investigated alternatives
deriving from mathematical analysis.

We have developed the concept of subspace pairs, which help us to describe
situations in which a bidirectional transformation may have very safe,
predictable behaviour under some circumstances, so that the user could feel
confident in using it without checking under those circumstances, while
under other circumstances it may be necessary for the user to check whether
the transformation's behaviour is what is wanted.

Unexpectedly, we found a close relationship between bidirectional
transformations and a well-known relationship between concurrent processes,
viz bisimulation. In a nutshell, bidirectional transformations are
proof-relevant bisimulations; here proof-relevant means that it does not
only matter that things are related, but precisely how they are related.

We found several areas that need more investigation than we could do on
this grant: for example, we found that witness structures, which help to
demonstrate whether data sources are consistent, can be described using
dependent types; we now hypothesise that it will be important for a
bidirectional transformation to explain its actions, and we think an
approach via dependent types may help us to do this.</gtr:description><gtr:exploitationPathways>Our findings will help people who design bidirectional transformation
languages (including, we hope, ourselves) to make choices that will make
the languages easy to use to write bidirectional transformations that will
do what users want without confusing or surprising them. Such languages may
be embedded in a general purpose programming language such as Haskell,
making use of our monad-based work, or may be free-standing languages. This
is one ingredient in an ongoing agenda of helping model-driven development
to be more generally applicable in an agile way, thereby making it feasible
to develop high quality software faster and more cheaply.</gtr:exploitationPathways><gtr:id>B9E6CF77-3285-4DF2-BCBA-F6611964F1D3</gtr:id><gtr:outcomeId>56cdc3fbc00105.59761913</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs><gtr:softwareAndTechnicalProductOutput><gtr:description>This is primarily a theoretical, foundational project. However, we have
established the Bx Example Repository, which is a resource for the
whole community interested in bidirectional transformations, including both
theoreticians and practitioners. It records and discusses interesting
examples of bidirectional transformations, some theoretical, some
industrial in origin.</gtr:description><gtr:id>723AD638-B91D-455A-8AA1-68CA146C22F0</gtr:id><gtr:impact>N/A</gtr:impact><gtr:outcomeId>58c6d269442542.01202193</gtr:outcomeId><gtr:title>BX Repository</gtr:title><gtr:type>Software</gtr:type><gtr:url>http://bx-community.wikidot.com/examples:home</gtr:url><gtr:yearFirstProvided>2014</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput></gtr:softwareAndTechnicalProductOutputs><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>59399680-E0F2-47DB-9147-E2578CBFE37D</gtr:id><gtr:title>Coalgebraic Aspects of Bidirectional Computation</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/bbc03458e65a6807247c5cdbb4969743"><gtr:id>bbc03458e65a6807247c5cdbb4969743</gtr:id><gtr:otherNames>Abou-saleh, F</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>56cc77177ab920.65874475</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>B66729E7-30D0-40A8-A04E-67BC22D4A30E</gtr:id><gtr:title>Coalgebraic Aspects of Bidirectional Computation</gtr:title><gtr:parentPublicationTitle>The Journal of Object Technology</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/7db31b3da964eda0efcbaeba8efddc63"><gtr:id>7db31b3da964eda0efcbaeba8efddc63</gtr:id><gtr:otherNames>F. Abou-Saleh</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:issn>16601769</gtr:issn><gtr:outcomeId>58c684c4893c95.55949411</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>B54A04F9-2C0E-472C-99CA-FC87D6F23795</gtr:id><gtr:title>On principles of Least Change and Least Surprise for bidirectional transformations</gtr:title><gtr:parentPublicationTitle>The Journal of Object Technology</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/8e0d0dc778f066c9c7db7ccc8b53f3e8"><gtr:id>8e0d0dc778f066c9c7db7ccc8b53f3e8</gtr:id><gtr:otherNames>J. Cheney</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:issn>16601769</gtr:issn><gtr:outcomeId>58c685afe53db4.56265918</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>63BAA1A7-695F-48A1-8013-22994E992AA8</gtr:id><gtr:title>Entangled State Monads</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/533d6b5b301803f4cd1d8f4781cc43b8"><gtr:id>533d6b5b301803f4cd1d8f4781cc43b8</gtr:id><gtr:otherNames>Cheney J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:outcomeId>5460bd933c6e94.02550482</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>E0EF0B53-B67E-41B8-928D-920E0C3EC7DD</gtr:id><gtr:title>Towards a Repository of BX Examples</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/533d6b5b301803f4cd1d8f4781cc43b8"><gtr:id>533d6b5b301803f4cd1d8f4781cc43b8</gtr:id><gtr:otherNames>Cheney J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:outcomeId>5460be1de79838.98513369</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>0904ADB5-850C-4E14-9CC7-F4F595A133D0</gtr:id><gtr:title>Profunctor Optics: Modular Data Accessors</gtr:title><gtr:parentPublicationTitle>The Art, Science, and Engineering of Programming</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/29cfe6d780576bf668b6e628e0ff936b"><gtr:id>29cfe6d780576bf668b6e628e0ff936b</gtr:id><gtr:otherNames>Pickering M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>5a7c39092890b8.90195427</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>43F5A1E7-532B-47A1-B11A-2DB46B71FA56</gtr:id><gtr:title>Reflections on Monadic Lenses</gtr:title><gtr:parentPublicationTitle>The Computing Research Repository (CoRR)</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/8c7e4675d8e0e6ab1ff694b53dd1fd28"><gtr:id>8c7e4675d8e0e6ab1ff694b53dd1fd28</gtr:id><gtr:otherNames>Faris Abou-Saleh</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>58c67fd39f7168.85151207</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>76C8744E-33CC-4D30-96AE-E1CFA9064018</gtr:id><gtr:title>Towards a Principle of Least Surprise for Bidirectional Transformations</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/4f066d2e4f967110e9cf48f2af77608d"><gtr:id>4f066d2e4f967110e9cf48f2af77608d</gtr:id><gtr:otherNames>Cheney, J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>56cc7774787131.00884146</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>0D1C5FBB-4DEC-4CD5-9D20-35C1B2832FDF</gtr:id><gtr:title>Coalgebraic Aspects of Bidirectional Computation.</gtr:title><gtr:parentPublicationTitle>The Journal of Object Technology</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/7c5ef01f748229ef0d15be42f010625e"><gtr:id>7c5ef01f748229ef0d15be42f010625e</gtr:id><gtr:otherNames>Abou-Saleh F</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>5a7c3908e096c3.17443478</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>C89E7152-B8F9-4DE8-A47F-A6D798B20873</gtr:id><gtr:title>On principles of Least Change and Least Surprise for bidirectional transformations.</gtr:title><gtr:parentPublicationTitle>The Journal of Object Technology</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/533d6b5b301803f4cd1d8f4781cc43b8"><gtr:id>533d6b5b301803f4cd1d8f4781cc43b8</gtr:id><gtr:otherNames>Cheney J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>5a6f2ccf06d505.26288871</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/K020919/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>0A982A4A-12CF-4734-AFCA-A5DC61F667F3</gtr:id><gtr:percentage>75</gtr:percentage><gtr:text>Information &amp; Knowledge Mgmt</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>E05CFE0B-163D-412D-A3C2-28E89B2CA336</gtr:id><gtr:percentage>25</gtr:percentage><gtr:text>Software Engineering</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>