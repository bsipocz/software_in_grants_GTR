<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/46387D84-F71E-4B7D-8C7D-9C288F113510"><gtr:id>46387D84-F71E-4B7D-8C7D-9C288F113510</gtr:id><gtr:name>Imperial College London</gtr:name><gtr:department>Dept of Computing</gtr:department><gtr:address><gtr:line1>South Kensington Campus</gtr:line1><gtr:line2>Exhibition Road</gtr:line2><gtr:line4>London</gtr:line4><gtr:postCode>SW7 2AZ</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/46387D84-F71E-4B7D-8C7D-9C288F113510"><gtr:id>46387D84-F71E-4B7D-8C7D-9C288F113510</gtr:id><gtr:name>Imperial College London</gtr:name><gtr:address><gtr:line1>South Kensington Campus</gtr:line1><gtr:line2>Exhibition Road</gtr:line2><gtr:line4>London</gtr:line4><gtr:postCode>SW7 2AZ</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/0F1757B3-2316-42E5-B610-986E09D6A2A8"><gtr:id>0F1757B3-2316-42E5-B610-986E09D6A2A8</gtr:id><gtr:firstName>Petar</gtr:firstName><gtr:surname>Maksimovic</gtr:surname><gtr:orcidId>0000-0002-0400-7467</gtr:orcidId><gtr:roles><gtr:role><gtr:name>RESEARCHER</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/F3F02906-B12D-42CE-900C-FD7E039C083F"><gtr:id>F3F02906-B12D-42CE-900C-FD7E039C083F</gtr:id><gtr:firstName>Philippa</gtr:firstName><gtr:surname>Gardner</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FP021921%2F1"><gtr:id>637A349E-0306-43A0-AE0D-26E1F077BEEC</gtr:id><gtr:title>Research Institute in Verified Trustworthy Software Systems (VeTSS)</gtr:title><gtr:status>Active</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/P021921/1</gtr:grantReference><gtr:abstractText>Modern software systems comprise components constructed by many parties, ranging from individual open-source developers to companies and government organisations spanning the globe. They are written in multiple, complex languages, depend on the correctness of sophisticated third-party libraries, exploit concurrency and distribution to handle vast data sets, and are developed according to new software design processes that advocate frequent source code updates. Traditional methods for ensuring software reliability are inadequate in this modern context: modern companies move fast, leaving little time for code analysis and testing; traditional testing methods do not work well with concurrent and distributed programs; and the reluctance of users to update mobile apps renders the deployment of software fixes ineffective. Scalable techniques that can provide trust, in the deep technical sense of analysis and verification, are vital not only to support safe software, but also to give stability to this international software infrastructure.

The purpose of this new Research Institute in Verified Trustworthy Software Systems (RIVeTSS) is to bring together and support world-class UK academics and industrialists in systems, security and verification, unified by a common interest in program analysis and verification, at the forefront of research developments in fundamental theories and industrial-strength tools, targeting real-world applications. Such analysis of program behaviour is of critical importance to proper management of the rapid evolution of modern software systems</gtr:abstractText><gtr:potentialImpactText>RIVeTSS will have direct industrial impact. While key ideas behind analysis and verification were introduced more than three decades ago, only recently have these techniques become practical as a result of significant advances in fundamental theory, solver technology, and scalable tool development. The resulting explosion of activity is evidenced by papers appearing in the best theoretical and practical conferences, tools being used in industry, and expert academics transferring to industry. Despite this success, program analysis and verification for modern software systems is in its infancy. In the context of applying program analysis to improve software quality, Facebook has the saying: &amp;quot;this journey is 1% finished'' [Facebook Infer tool, open-source announcement, 2015]. RIVeTSS will catalyse a change in industrial practice by developing industrial-strength tools, influencing industrial standards, and improving core software infrastructure, so that analysis and verification become routinely used in industrial software development, leading to broad, sustainable and long-term industrial impact.

RIVeTSS will have substantial societal impact. We already face critical danger from faults in software, ranging from intellectual and monetary theft, to failures that have led to loss of life. As society becomes even more dependent upon computer and communication systems, and the complexity of these systems grows, we expect to see more failures and greater damage. Therefore, analysis techniques for verifying the correctness, security and privacy of software systems are crucial.

RIVeTSS will also have economic impact. Modern large software systems must be composed of software units constructed by many parties, ranging from individual open source developers, to companies and government organisations that span the globe. Techniques that can provide trust, in the deep technical sense of verification, are absolutely vital to support not only safe software, but also to give stability to this international software infrastructure. More directly, economic impact will arise from the reduction in effort required for software maintenance due to the high degree of reliability that analysis and verification can offer.

An essential issue is to understand how to make program analysis and verification trustworthy. In security and aircraft industries, certification is based on out-dated ideas of trusting that a developer is a good person and tracking the provenance of software. Instead, software should be judged on fundamental scientific principles, such as &amp;quot;Are the behaviours exhibited by the software the ones we want?&amp;quot; In the high-assurance software group at GCHQ, the process of software certification is done by GCHQ employees reading the code. Instead, software should be, at least in part, assessed by industry using trusted analysis and verification tools. A key role of RIVeTSS is to develop a culture of best practice amongst academics and industry, leading discussion about how to move industry standards and processes in the right direction. Analysis and verification should be embedded right at the heart of the software design process, even to the extent that lawyers can actually guarantee software behaviour.</gtr:potentialImpactText><gtr:fund><gtr:end>2022-02-28</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2017-03-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>654849</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>2D5E99E0-6368-46D0-A283-1F66A339D06D</gtr:id><gtr:title>Verified trustworthy software systems.</gtr:title><gtr:parentPublicationTitle>Philosophical transactions. Series A, Mathematical, physical, and engineering sciences</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/d5e33b2e7c51125a6948be5e36810bc1"><gtr:id>d5e33b2e7c51125a6948be5e36810bc1</gtr:id><gtr:otherNames>Gardner P</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:issn>1364-503X</gtr:issn><gtr:outcomeId>5a5ccd82147127.49202888</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/P021921/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>50</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>E05CFE0B-163D-412D-A3C2-28E89B2CA336</gtr:id><gtr:percentage>50</gtr:percentage><gtr:text>Software Engineering</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>