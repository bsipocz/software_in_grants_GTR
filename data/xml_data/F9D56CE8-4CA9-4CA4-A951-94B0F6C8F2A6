<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/46B41008-0EB4-4E28-BBFB-E98366999EC5"><gtr:id>46B41008-0EB4-4E28-BBFB-E98366999EC5</gtr:id><gtr:name>Durham University</gtr:name><gtr:department>Engineering and Computing Sciences</gtr:department><gtr:address><gtr:line1>Old Shire Hall</gtr:line1><gtr:line2>Old Elvet</gtr:line2><gtr:line4>Durham</gtr:line4><gtr:line5>County Durham</gtr:line5><gtr:postCode>DH1 3HP</gtr:postCode><gtr:region>North East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/46B41008-0EB4-4E28-BBFB-E98366999EC5"><gtr:id>46B41008-0EB4-4E28-BBFB-E98366999EC5</gtr:id><gtr:name>Durham University</gtr:name><gtr:address><gtr:line1>Old Shire Hall</gtr:line1><gtr:line2>Old Elvet</gtr:line2><gtr:line4>Durham</gtr:line4><gtr:line5>County Durham</gtr:line5><gtr:postCode>DH1 3HP</gtr:postCode><gtr:region>North East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/078C1593-36F7-47DF-8A41-F2FE1B970A2B"><gtr:id>078C1593-36F7-47DF-8A41-F2FE1B970A2B</gtr:id><gtr:firstName>Thomas</gtr:firstName><gtr:surname>Friedetzky</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FE029124%2F1"><gtr:id>F9D56CE8-4CA9-4CA4-A951-94B0F6C8F2A6</gtr:id><gtr:title>Property Testing</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/E029124/1</gtr:grantReference><gtr:abstractText>Computer storage, such as hard drives and RAM, is rapidly dropping inprice. One implication of this is that many software applications arefaced with ever growing data sets to deal with as input. Neithercomputational power nor communication bandwidth seem to be able to copewith this increase in data in the foreseeable future.There are two immediate problems when we want to run any kind ofapplication on a huge input. Firstly, the data might be stored on aremote server with relatively low communication bandwidth. In this caseeven only reading the entire input is infeasible, let alone processing it. Secondly, what is considered to be ``efficient'' these days may not be fast enough in real-world terms, namely algorithms with arunning time that is polynomial in the size of the input.Parts of the Theoretical Computer Science community are investigating whatis referred to as property testing, which is about determiningwhether an input (for ease of discussion typically abstracted as some kindof combinatorial structure like a matrix, a graph, a function, or astring) has some specified property or not, whilst looking at only a smallfraction of the actual input. Example: As a concrete example, consider the following. Suppose youare given a (very long) string S as input, and wish to determine whetherS is covered by a pattern P. More specifically, an algorithm for thistask is given S, and the required output would be ``yes'' if there exists a frequently occurring pattern P (P is not part of the input itself, and thus not known to the algorithm). This type of question is relevant to manyreal-world situations (databases, telecommunications, search engines). Another question might be if there is some number of patterns (possibly allowing for slight variations thereof) that cover much of the input. There of course exist exact polynomial-time algorithms for this task, but one may be happy with an approximate answer, or one may want to use an approximate answer to merely decide whether or not to spend time and resources to actually run an exact algorithm.The question related to how much of the input needs to be looked at iscommonly referred to as query complexity. This measure relates tothe communication bandwidth issue outlined above. Another issue ofimportance is of course that of the running time complexity of thecorresponding testing algorithms. In many cases, it is going to be afairly easily determined and expressed function in the query complexity(or, more precisely, in the specified distance parameter; more aboutthis later), but this is by no means always the case. Regardless, almostall property testing algorithms fitting this framework have querycomplexity and running time that is sub-linear in the size of the input,again, ideally, independent of the input size, but sometimes only barelybelow linear.In some sense, property testing is to decision problems what the class ofapproximation algorithms are to optimisation problems. There is onenotable difference, however. In property testing, unlike approximationalgorithms, one is not necessarily considering hard problems, as inNP-hard, but problems where exact, polynomial-time decision algorithmsare already known; consider for instance testing for bipartiteness, whichis, of course, trivially decidable in linear time. There are exceptionsto this general rule, however; see for instance [FM06] where theauthors look at isomorphy between graphs.The connection to the world of approximation algorithms is even closer. Avery interesting, relatively new research direction is to marry sub-lineartesting</gtr:abstractText><gtr:fund><gtr:end>2011-03-31</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2007-10-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>137236</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>No non-academic impact that I would be aware of.</gtr:description><gtr:id>EAEF4155-E5FB-4626-B3E4-2246572FB3B9</gtr:id><gtr:impactTypes/><gtr:outcomeId>56e01f073507e3.34837071</gtr:outcomeId></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>The body of work undertaken with the support of this grant was foundational/mathematical in nature. We have developed, and applied, probabilistic and combinatorial methods to a variety of problems, including very efficient algorithms for tournament graphs, basic models for randomised load balancing, or communication in networks. This involved the design and formal analysis of algorithms for these problem settings.</gtr:description><gtr:exploitationPathways>All results were published in proceedings of highly regarded conferences and/or journals, and as such can and will be used by other academics.</gtr:exploitationPathways><gtr:id>2934C566-074D-4B1E-A21D-7C047869582D</gtr:id><gtr:outcomeId>56e01d984a6ba1.87227178</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>25EABB56-8F68-46B9-AB80-6764494C0EC9</gtr:id><gtr:title>Balls into non-uniform bins</gtr:title><gtr:parentPublicationTitle>Journal of Parallel and Distributed Computing</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/cf5ba8a1c4bae2cc73e3870ab610d6cd"><gtr:id>cf5ba8a1c4bae2cc73e3870ab610d6cd</gtr:id><gtr:otherNames>Berenbrink P</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:outcomeId>56e0212222c8f4.90945843</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>B524626C-7439-49AF-80AB-CAB9F1224FA9</gtr:id><gtr:title>Balls into non-uniform bins</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/cf5ba8a1c4bae2cc73e3870ab610d6cd"><gtr:id>cf5ba8a1c4bae2cc73e3870ab610d6cd</gtr:id><gtr:otherNames>Berenbrink P</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:isbn>978-1-4244-6442-5</gtr:isbn><gtr:outcomeId>56e022d9420569.72976899</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>DE1C2127-D84D-49FB-B929-DAD216376241</gtr:id><gtr:title>Sublinear-time algorithms for tournament graphs</gtr:title><gtr:parentPublicationTitle>Journal of Combinatorial Optimization</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/ab8789aaa234c23f5640cc9c65cd5958"><gtr:id>ab8789aaa234c23f5640cc9c65cd5958</gtr:id><gtr:otherNames>Dantchev S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:outcomeId>doi_53cfdcfdcc69b1bd</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>0C5EEBA4-A368-4B58-A66F-353BBED9F2D8</gtr:id><gtr:title>Balls into bins with related random choices</gtr:title><gtr:parentPublicationTitle>Journal of Parallel and Distributed Computing</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/cf5ba8a1c4bae2cc73e3870ab610d6cd"><gtr:id>cf5ba8a1c4bae2cc73e3870ab610d6cd</gtr:id><gtr:otherNames>Berenbrink P</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:outcomeId>doi_53cffdffd872e28b</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/E029124/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>70</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject><gtr:researchSubject><gtr:id>DEA11FBC-BEED-4EDD-890B-97D728462D26</gtr:id><gtr:percentage>30</gtr:percentage><gtr:text>Mathematical sciences</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>70</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>9A30FDC6-AEB7-447C-A30E-0EF6BDB406FB</gtr:id><gtr:percentage>30</gtr:percentage><gtr:text>Logic &amp; Combinatorics</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>