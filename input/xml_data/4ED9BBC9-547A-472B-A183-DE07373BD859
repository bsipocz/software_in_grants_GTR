<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/5BB4F8BF-B4E0-4EAF-9AF5-885E19D64850"><gtr:id>5BB4F8BF-B4E0-4EAF-9AF5-885E19D64850</gtr:id><gtr:name>University of Strathclyde</gtr:name><gtr:address><gtr:line1>16 Richmond Street</gtr:line1><gtr:line4>Glasgow</gtr:line4><gtr:postCode>G1 1XQ</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/D5337A10-AC8A-402A-8164-C5F9CC6B0140"><gtr:id>D5337A10-AC8A-402A-8164-C5F9CC6B0140</gtr:id><gtr:name>Queen Mary, University of London</gtr:name><gtr:address><gtr:line1>Mile End Road</gtr:line1><gtr:line4>London</gtr:line4><gtr:postCode>E1 4NS</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>FELLOW</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/CA8D8BB2-49D8-411C-925C-DC5D6F72C283"><gtr:id>CA8D8BB2-49D8-411C-925C-DC5D6F72C283</gtr:id><gtr:firstName>Julian</gtr:firstName><gtr:surname>Hedges</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role><gtr:role><gtr:name>FELLOW</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FN021282%2F1"><gtr:id>4ED9BBC9-547A-472B-A183-DE07373BD859</gtr:id><gtr:title>A compositional approach to game-theoretic economic modelling</gtr:title><gtr:status>Active</gtr:status><gtr:grantCategory>Fellowship</gtr:grantCategory><gtr:grantReference>EP/N021282/1</gtr:grantReference><gtr:abstractText>Game theory is the mathematical study of strategic interaction and decision-making under uncertainty. It is arguably the central tool of microeconomics, and is also widely used in evolutionary biology, cybersecurity and military strategy, among other application areas. 

Compositionality, one of the most fundamental ideas of software science, is the principle that the behaviour of a system should be understandable in terms of the behaviour of its components. Compositionality allows large, complex systems to be designed, implemented, analysed and tested in a modular way, and allows modules to be reused in different contexts. Without this, modern software engineering would be impossible.

Game models, however, are not compositional, and generally must be produced in their entirety rather than by combining standard components. As a result, game-theoretic modelling is a slow process, as small variations in the domain to be modelled can lead to large changes needed in the model. In particular this means that game-theoretic models are currently not well-suited to software implementation.

This project concerns a new approach to game theory which is compositional, and therefore promises the possibility of software support for economists and other users of game theory on a scale that is currently impossible. Specifically, it should be possible to specify, simulate, solve and more generally reason about games in a way that allows the reuse of existing work. For example a typical economic system has a hierarchical structure, from agents to households to markets to economies, and it should be possible to gradually build models of each level in a way that directly uses existing models of the lower levels.

The mathematical techniques and concepts underlying this approach mostly come from proof theory (part of mathematical logic) and the theory of programming languages (part of theoretical computer science). Fortunately there is no need for users to learn this sophisticated and (to them) unfamiliar theory, because it is also possible to hide the mathematics behind an intuitive graphical language known as string diagrams, which have been widely studied recently due to applications in quantum information theory, linguistics and abstract algebra. This means that game theoretic software can be graphical and intuitive, but still have a strong theoretical underpinning.

The purpose of this project is to develop the mathematical theory needed for these economic applications, in a way that exploits the close relationship between theory and applications in this area, while using a worked example (based on modelling of smart energy grids) to provide a continual test of the practical benefits of compositionality.

A large part of the theoretical part of this project will involve extending the theory of selection functions with various known concepts in game theory, such as repeated games, imperfect information and different solution concepts, which can be found in any standard text on game theory. This will largely consist of generalising existing theory to the new framework.</gtr:abstractText><gtr:potentialImpactText>This project explicitly concerns working towards applications in economics. Specifically, the hope is that an approach to economic game theory using techniques from proof theory and theoretical computer science can be scalable, in a way that standard economic techniques are not. Moreover, the theory can be used to develop computer software that can be used by working economists and others without a need for deep knowledge of the underlying mathematics.

Of course, the range of impacts resulting from such a theory depending on exactly how far the scalability can be pushed, and the methodology of the project has been designed so as to continually test this scalability.

Examples of possible impacts, arranged approximately in increasing order of scale (and timescale), include:

- Developing software for economics and business education, which could be used for example in massively online courses

- Developing a framework for rapid development of software for behavioural laboratory experiments in economics, used both in universities and in commercial settings (for example with consumer focus groups)

- Developing software models of relatively simple markets or other economic situations, useful to companies within the market as well as within academia

- Developing software models of a large and complex market, such as the energy sector of a particular country, by composing existing models of component parts, in a way that can be used to predict consequences of policy decisions

- Developing models of complex economic events such as corporate mergers and economic shocks, which involve many interacting markets and other systems, in a way that can be used to predict consequences of policy decisions</gtr:potentialImpactText><gtr:fund><gtr:end>2019-06-05</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2016-06-06</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>259303</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications/><gtr:identifiers><gtr:identifier type="RCUK">EP/N021282/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>25</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>25</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>