<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/68D0E3C9-9246-4CFC-B5E9-48584CF82993"><gtr:id>68D0E3C9-9246-4CFC-B5E9-48584CF82993</gtr:id><gtr:name>University of Manchester</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>Oxford Road</gtr:line1><gtr:city>Manchester</gtr:city><gtr:postCode>M13 9PL</gtr:postCode><gtr:region>North West</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/68D0E3C9-9246-4CFC-B5E9-48584CF82993"><gtr:id>68D0E3C9-9246-4CFC-B5E9-48584CF82993</gtr:id><gtr:name>University of Manchester</gtr:name><gtr:address><gtr:line1>Oxford Road</gtr:line1><gtr:city>Manchester</gtr:city><gtr:postCode>M13 9PL</gtr:postCode><gtr:region>North West</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/1E4BD10F-81B9-4F6E-B207-2D50C70C50AD"><gtr:id>1E4BD10F-81B9-4F6E-B207-2D50C70C50AD</gtr:id><gtr:firstName>Luis</gtr:firstName><gtr:surname>Plana Cabrera</gtr:surname><gtr:roles><gtr:role><gtr:name>RESEARCHER</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/E7015D6B-3846-4E4F-A5BB-CBF9B025EB07"><gtr:id>E7015D6B-3846-4E4F-A5BB-CBF9B025EB07</gtr:id><gtr:firstName>Stephen</gtr:firstName><gtr:surname>Furber</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/D3B32405-C377-4F99-9562-BA01B2F5CB7A"><gtr:id>D3B32405-C377-4F99-9562-BA01B2F5CB7A</gtr:id><gtr:firstName>Mikel</gtr:firstName><gtr:surname>Lujan</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/91D7B2F1-28B5-4B9D-B73E-5B0D419D2C45"><gtr:id>91D7B2F1-28B5-4B9D-B73E-5B0D419D2C45</gtr:id><gtr:firstName>Behram</gtr:firstName><gtr:surname>Khan</gtr:surname><gtr:roles><gtr:role><gtr:name>RESEARCHER</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/9DDD436F-7EB8-449D-82A8-2A958E20AE34"><gtr:id>9DDD436F-7EB8-449D-82A8-2A958E20AE34</gtr:id><gtr:firstName>Daniel</gtr:firstName><gtr:surname>Goodman</gtr:surname><gtr:roles><gtr:role><gtr:name>RESEARCHER</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FJ016330%2F1"><gtr:id>2C98466B-3D9D-4FE4-844E-BE793AA17149</gtr:id><gtr:title>DOME: Delaying and Overcoming Microprocessor Errors</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/J016330/1</gtr:grantReference><gtr:abstractText>Modern day computer systems have benefited from being designed and manufactured using an ever-increasing budget of transistors with very reliable integrated circuits. However, moving forward such a ''free lunch'' is over and forgotten nightmares faced by computer pioneers are coming back to haunt us. Not so long ago, unreliable valves were the basic building blocks for computers and research focussed on how to successfully compute, overcoming this underlying weakness (e.g. von Neuman, 1956, ''Probabilistic logics and the synthesis of reliable organisms from unreliable components'').

State-of-the-art integrated circuit technologies have now reached the range of 40-22 nanometers, posing significant reliability challenges. Hard or permanent errors can manifest themselves at any point during a processor's lifetime. During manufacturing, errors can render a proportion of a chip incapable of computing, thus decreasing yield and profit.
As we move towards smaller and smaller components, transistors take less and less time to wearout, becoming more prone to failure in the field. Traditional reliability solutions involve applying high-cost redundancy to the hardware structures within the processor, providing backup spares for when errors occur. On the application side, solutions also involve redundancy by running multiple copies of each piece of software.

A common criticism of current reliability solutions is that they do not consider how the software and hardware can be co-designed synergistically to tackle this challenge. Redesigning and reimplementing general purpose software applications will incur an unaffordable price tag. Our hypothesis is that virtualization technologies (a layer that transparently hides the underlying platform from the application software) have an important role to play. In particular, managed runtime environments (MREs) have become pervasive for high-productivity software developers and represent a promising vehicle for providing reliability mechanisms. Within these systems, applications can be monitored and morphed without user intervention.

There are two complementary strands to our proposed research, focused around a co-designed MRE and multicore computer architecture. Firstly, we will consider wearout mitigation schemes to slow processor ageing and lengthen a chip's lifetime before a hard fault occurs. Secondly, given that an error will occur at some point during a system's life, we will develop error-tolerance approaches that maintain execution on faulty hardware.

If successful, we believe this project will be seen as a significant milestone in the development of wearout-conscious and error-tolerant multicore architectures over the next decade. This research programme will advance our understanding of the field, tackling the UK Microelectronics Grand Challenge of Moore for Less that has been signposted by EPSRC. It is also important to highlight that this proposal tackles a key aspect of the new EPSRC ICT capability priority on &amp;quot;Many-core architectures and concurrency in distributed and embedded systems&amp;quot;.</gtr:abstractText><gtr:potentialImpactText>State-of-the-art integrated circuit technologies have now reached the range of 45-22 nanometres, posing significant reliability challenges. Moving forward, multicore and many-core chips reliability is as a key design challenge for systems designers. DOME, our proposed research program, provides a transparent path forward for software applications. Managed runtime environments (MREs) have become pervasive for high-productivity software developers and represent a promising virtualisation vehicle for providing reliability mechanisms. Within these systems, applications can be monitored and morphed without application developer intervention.

Our objectives are focused around a co-designed MRE and computer architecture for multicore chips. We will consider wearout mitigation schemes to slow processor ageing and lengthen a chip's lifetime before a hard fault occurs. Given that an error will occur at some point during a system's life, we will develop error-tolerance approaches that maintain execution on faulty hardware.

If successful, we believe this project will be seen as a significant milestone in the development of wearout-conscious and error-tolerant multicore architectures over the next decade. This research programme will advance our understanding of the field, tackling the UK Microelectronics Grand Challenge of Moore for Less that has been signposted by EPSRC.

The main beneficiaries of this work can be broadly categorised into two groups. Firstly, academics stand to benefit through the development of our ideas into working prototypes. We are aiming to restructure software on-the-fly to adapt to changes in the underlying system's reliability. This is something that has never been done before and, if successful, will open up a new research area of dynamic optimisation for reliability.

The second group of beneficiaries is industry. We have secured strong letters of support from major companies, such as UK-based ARM, Microsoft and Qualcomm. They testify that our proposed research is both necessary to address the upcoming challenges that they face, and it also outlines novel solutions to the problems. Interactions with UK industry will allow our ideas to be fed into their research and development efforts in this area.

Furthermore, alongside the activities described above, at an early stage in the project we intend to identify the core IP generated from the research. With this in hand, we will evaluate the potential for further economic gain. Both universities have an excellent track record in commercial exploitation, Silistix and Transitive being two such examples.

As with any long-term research, it is complex to express its impact on the wider research community and society. However, EPSRC's vision for a digital economy is underpinned by the need for reliable electronics and systems. This proposal will significantly contribute towards this goal. Similarly, DOME will provide contribute towards the new EPSRC ICT capability theme on &amp;quot;many-core architectures and concurrency in distributed and embedded systems&amp;quot;.</gtr:potentialImpactText><gtr:fund><gtr:end>2016-09-30</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2012-09-27</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>589624</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>Commercialisation is being pursued of ARMOR (see http://apt.cs.manchester.ac.uk/projects/ARMOR/RowHammer/armor.html)

We have open-source a dynamic binary modification tool for the ARM architecture (see http://github.com/beehive-lab/mambo). 

As the ARM architecture expands beyond its traditional embedded domain, there is a growing interest in dynamic binary modification (DBM) tools for general-purpose multicore processors that are part of the ARM family. Existing DBM tools for ARM suffer from introducing large overheads in the execution of applications. The specific questions that this article addresses are (i) how to develop such DBM tools for the ARM architecture and (ii) whether new optimisations are plausible and needed.

We describe the general design of MAMBO, a new DBM tool for ARM, which we release together with this publication [1], and introduce novel optimisations to handle indirect branches. In addition, we explore scenarios in which it may be possible to relax the transparency offered by DBM tools to allow extra optimisations to be applied. These scenarios arise from analysing the most typical usages: for example, application binaries without handcrafted assembly.

The performance evaluation shows that MAMBO introduces small overheads for SPEC CPU2006 and PARSEC 3.0 when comparing with the execution times of the unmodified programs.

[1] MAMBO: A Low-Overhead Dynamic Binary Modification Tool for ARM
C Gorgovan, A d'Antras, M Luj&amp;aacute;n
ACM Transactions on Architecture and Code Optimization 13 (1), 14</gtr:description><gtr:firstYearOfImpact>2014</gtr:firstYearOfImpact><gtr:id>03012CC8-D00E-40F9-9CF5-9D76657AD843</gtr:id><gtr:impactTypes><gtr:impactType>Economic</gtr:impactType></gtr:impactTypes><gtr:outcomeId>56e171bc70cd19.02412837</gtr:outcomeId><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>ARMOR is a hardware-solution to prevent Row Hammer Errors in DRAMs, designed and developed in the School of Computer Science at The University of Manchester. The main challenge to mitigate the Row-Hammer effect is to monitor the number of activations for each row in the DRAM, which imposes a significant storage overhead to the memory system. ARMOR monitors the activation stream at the memory interface level and detects which specific rows (i.e. hot rows) are at risk of being &amp;quot;hammered&amp;quot; at run-time. ARMOR is capable of detecting all the possible hot-rows in a system with a minimal storage overhead (e.g. 800 Bytes to protect 4 GB of DRAM).
Why ARMOR is a Promising Solution?
 It is capable of detecting all the possible Row Hammer errors with a high level of confidence.
 It provides precise information about the hammered rows (addresses) and the number of activations with a high level of accuracy.
- It does not need to know about the logical to physical mapping of DRAMs in order to mitigate Row Hammer error (ARMOR Cache Solution).
 - It is scalable according to the size of memory.
- It is technology independent and can easily support future device technologies.</gtr:description><gtr:exploitationPathways>UMIP (http://umip.com/) has provided funding to pay for the ARMOR patent, commercial viability studies and development of prototype with FPGAs/design boards.</gtr:exploitationPathways><gtr:id>097AC611-4FA8-46C9-A0CD-0A41CDD5A749</gtr:id><gtr:outcomeId>56e170f7d35146.52940613</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors><gtr:url>http://apt.cs.manchester.ac.uk/projects/ARMOR/RowHammer/armor.html</gtr:url></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>9113C74F-2075-45B6-A808-6C37BDD33E72</gtr:id><gtr:title>Cyclic Power-Gating as an Alternative to Voltage and Frequency Scaling</gtr:title><gtr:parentPublicationTitle>IEEE Computer Architecture Letters</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/5402cb46d0cab4ce3e2c28f7c71f108b"><gtr:id>5402cb46d0cab4ce3e2c28f7c71f108b</gtr:id><gtr:otherNames>Cakmaki Y</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>56e1385a176db6.72535169</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>73485194-40BF-49CA-AF76-EDCE2A2D0239</gtr:id><gtr:title>Write-Combined Logging: An Optimized Logging for Consistency in NVRAM</gtr:title><gtr:parentPublicationTitle>Scientific Programming</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/33b3a33f2507beb150e78e1e5a17353e"><gtr:id>33b3a33f2507beb150e78e1e5a17353e</gtr:id><gtr:otherNames>Zhang W</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>56e13825242817.22411027</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>ACCC0E54-0A17-412E-A517-CA2F50AC0C90</gtr:id><gtr:title>MAMBO</gtr:title><gtr:parentPublicationTitle>ACM Transactions on Architecture and Code Optimization</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/02abb7e1c15a15a1ba2f1615a01df92c"><gtr:id>02abb7e1c15a15a1ba2f1615a01df92c</gtr:id><gtr:otherNames>Gorgovan C</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>56e16bc07b2ad5.61306713</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>639B6764-7F05-4C36-B4FC-93D601A9EAA9</gtr:id><gtr:title>Optimizing Indirect Branches in Dynamic Binary Translators</gtr:title><gtr:parentPublicationTitle>ACM Transactions on Architecture and Code Optimization</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/d55fcd61c9d76375225b2bc65abd7f2e"><gtr:id>d55fcd61c9d76375225b2bc65abd7f2e</gtr:id><gtr:otherNames>D'antras A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>56e16d11d18363.42113159</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>593B5B20-3063-4A96-A724-E0E41C473E81</gtr:id><gtr:title>A Survey on Design Approaches to Circumvent Permanent Faults in Networks-on-Chip</gtr:title><gtr:parentPublicationTitle>ACM Computing Surveys</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/bb216576367f8fd92f0635103412f0ae"><gtr:id>bb216576367f8fd92f0635103412f0ae</gtr:id><gtr:otherNames>Werner S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>56e16f9a4f0ae1.56528449</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>1C602AC4-FE61-4FA7-B758-31B2EA8CD3BC</gtr:id><gtr:title>Amon: An Advanced Mesh-like Optical NoC</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/bb216576367f8fd92f0635103412f0ae"><gtr:id>bb216576367f8fd92f0635103412f0ae</gtr:id><gtr:otherNames>Werner S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>56e1331ec1ce29.79390332</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/J016330/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>D7BA1404-E001-4782-929E-E96E28B01201</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Computer Sys. &amp; Architecture</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>