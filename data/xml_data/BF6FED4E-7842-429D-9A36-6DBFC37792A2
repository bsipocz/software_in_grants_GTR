<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/46387D84-F71E-4B7D-8C7D-9C288F113510"><gtr:id>46387D84-F71E-4B7D-8C7D-9C288F113510</gtr:id><gtr:name>Imperial College London</gtr:name><gtr:department>Dept of Computing</gtr:department><gtr:address><gtr:line1>South Kensington Campus</gtr:line1><gtr:line2>Exhibition Road</gtr:line2><gtr:line4>London</gtr:line4><gtr:postCode>SW7 2AZ</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/46387D84-F71E-4B7D-8C7D-9C288F113510"><gtr:id>46387D84-F71E-4B7D-8C7D-9C288F113510</gtr:id><gtr:name>Imperial College London</gtr:name><gtr:address><gtr:line1>South Kensington Campus</gtr:line1><gtr:line2>Exhibition Road</gtr:line2><gtr:line4>London</gtr:line4><gtr:postCode>SW7 2AZ</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/15F3D7BA-DB1F-4F07-B6A4-63A9E95EE8A3"><gtr:id>15F3D7BA-DB1F-4F07-B6A4-63A9E95EE8A3</gtr:id><gtr:name>INRIA Rennes</gtr:name><gtr:address><gtr:line1>Campus universitaire de Beaulieu</gtr:line1><gtr:line4>35042 Rennes Cedex</gtr:line4><gtr:region>Outside UK</gtr:region><gtr:country>France</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/FA143EC1-E637-4E0C-80ED-0EA8ED214038"><gtr:id>FA143EC1-E637-4E0C-80ED-0EA8ED214038</gtr:id><gtr:name>University of Leuven</gtr:name><gtr:address><gtr:line1>Oude Markt 13</gtr:line1><gtr:line2>Box 5005</gtr:line2><gtr:region>outside UK</gtr:region></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/939CCF6A-56D1-4633-93B5-2088241E868C"><gtr:id>939CCF6A-56D1-4633-93B5-2088241E868C</gtr:id><gtr:name>Mozilla Foundation</gtr:name><gtr:address><gtr:line1>650 Castro Street, Suite 300</gtr:line1><gtr:postCode>CA 94041-2</gtr:postCode><gtr:region>Outside UK</gtr:region><gtr:country>United States</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/7D1FF4C7-DD25-4073-920E-B040B150B711"><gtr:id>7D1FF4C7-DD25-4073-920E-B040B150B711</gtr:id><gtr:name>Google Inc</gtr:name><gtr:address><gtr:line1>1600 Amphitheatre Parkway</gtr:line1><gtr:line2>Building 42</gtr:line2><gtr:postCode>94043</gtr:postCode><gtr:region>Outside UK</gtr:region><gtr:country>United States</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/F3F02906-B12D-42CE-900C-FD7E039C083F"><gtr:id>F3F02906-B12D-42CE-900C-FD7E039C083F</gtr:id><gtr:firstName>Philippa</gtr:firstName><gtr:surname>Gardner</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/A88D9597-B949-41C9-8339-B1766746FE4E"><gtr:id>A88D9597-B949-41C9-8339-B1766746FE4E</gtr:id><gtr:firstName>Sergio</gtr:firstName><gtr:surname>Maffeis</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FK032089%2F1"><gtr:id>BF6FED4E-7842-429D-9A36-6DBFC37792A2</gtr:id><gtr:title>Certified Verification of Client-Side Web Programs</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/K032089/1</gtr:grantReference><gtr:abstractText>The Web is evolving at enormous speed from a collection of mainly
static web pages to the current huge dynamic ecosystem where the
boundary between web pages and software application has become
indistinct (e.g. Google maps). This effect is so pronounced that
industry is beginning to view the Web as an operating system: e.g.,
Google's Chrome OS and Firefox OS. This quick transformation has come
at a price. We are stuck with dynamic languages developed for the
early Web. These languages are unsuited to the development of
sophisticated web applications, resulting in modern applications being
either overly conservative or needlessly unreliable and insecure.

JavaScript is the most widely used language for client-side web
programming: that is, in the web browser. Initially, JavaScript was
well-suited for the small web-programming tasks being asked of
it. With the modern Web however, the demands placed on JavaScript have
been huge. The dynamic nature of JavaScript makes understanding its
code notoriously difficult, leading to buggy, untrusted code. This
project will provide a certifying verification tool for JavaScript to
assert that e.g. a particular web application will maintain the
structure of a web page and not leak security information, or that a
browser extension will only perform permitted file system
operations. Our tool will automatically generate proofs which will be
certified (checked) by the well-known Coq proof assistant. Our
ambitious aim is to ensure that the software we use to communicate
with our banks is at least as reliable as the software as our banks
use to communicate with each other.</gtr:abstractText><gtr:potentialImpactText>A study by Boston Consulting Group 4 found that 8% of the UK GDP is
generated through the Internet. This share is expected to grow to 12%
by 2016, projecting the UK economy to become the world's most
internet-dependent economy. Meanwhile, the Cybersecurity position
statement of Research Council UK quotes the cost of cybercrime to the
UK in 2010 at &amp;pound;27 billion. This will inevitably rise as the UK becomes
more dependent on the Internet. The Web can only function as an
instrument of wealth creation if the programs that are used to access
it are robust, reliable and secure.

We will produce a variety of certifying verification tools, supported
by Coq and with a strong empirical link to industrial languages.
These verification tools will provide much needed support for the
engineers that build the Web.

Tasks 1-2. We provide systematic comparisons between browser
implementations and ECMA reference implementations. Library authors
will be interested in the comparisons between browser implementations,
because they will want their libraries to work on all
browsers. JavaScript implementers will be interested in the ECMA
reference implementations.

Task 3. We will provide the principled development of a core
certifying verification tool for JavaScript, rooted in the Coq
specifications given in Tasks 1-2. The main industrial impact will be
through Task 6.

Task 4. We will provide a library plugin interface for e.g. DOM, with
simple connections to the well-known academic and industrial
verification tools based on separation logic.

Task 5. Working with Miller from Google California, we will provide a
formal description of Secure ECMAScript (SES), proofs that
e.g. Google's makeContractHost enforces contracts between mutually
untrusting parties, and a proof that the SES implementation in
JavaScript is indeed secure.

Task 6. We will build specific, usable development tools for
JavaScript based on JSVerify and the DOM plugin, with the guidance of
Mozilla engineers. E.g., we wll assist a web application developer to
produce bug-free apps and a security analyst to review Firefox addons.


This proposal is highly ambitious, ranging from a Coq specification of
a real-world language through to industrially-accepted certifying
development tools. However, our recent research and discussions with
key industrial engineers suggest that these aims are not beyond reach.</gtr:potentialImpactText><gtr:fund><gtr:end>2017-02-28</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2013-09-30</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>893923</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs><gtr:furtherFundingOutput><gtr:amountPounds>13385</gtr:amountPounds><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:currCode>GBP</gtr:currCode><gtr:currCountryCode>United Kingdom</gtr:currCountryCode><gtr:currLang>en_GB</gtr:currLang><gtr:description>GCHQ Small Grants scheme</gtr:description><gtr:end>2015-03-02</gtr:end><gtr:fundingOrg>Government Communications Headquarters (GCHQ)</gtr:fundingOrg><gtr:id>174427A1-2760-4F24-8E8E-7486E780F477</gtr:id><gtr:outcomeId>58c2a9275743f1.75033305</gtr:outcomeId><gtr:sector>Public</gtr:sector><gtr:start>2015-02-01</gtr:start></gtr:furtherFundingOutput><gtr:furtherFundingOutput><gtr:amountPounds>5400</gtr:amountPounds><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:currCode>GBP</gtr:currCode><gtr:currCountryCode>United Kingdom</gtr:currCountryCode><gtr:currLang>en_GB</gtr:currLang><gtr:description>GCHQ Small Grants scheme</gtr:description><gtr:end>2017-03-02</gtr:end><gtr:fundingOrg>Government Communications Headquarters (GCHQ)</gtr:fundingOrg><gtr:id>8380E7BB-7E05-4254-A17B-348F60BA1AAE</gtr:id><gtr:outcomeId>58c2a9d37236d9.11098958</gtr:outcomeId><gtr:sector>Public</gtr:sector><gtr:start>2016-11-01</gtr:start></gtr:furtherFundingOutput><gtr:furtherFundingOutput><gtr:amountPounds>95151</gtr:amountPounds><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:currCode>GBP</gtr:currCode><gtr:currCountryCode>United Kingdom</gtr:currCountryCode><gtr:currLang>en_GB</gtr:currLang><gtr:description>GCHQ Small Grants scheme</gtr:description><gtr:end>2017-03-02</gtr:end><gtr:fundingOrg>Government Communications Headquarters (GCHQ)</gtr:fundingOrg><gtr:id>54FA7FAF-D613-452F-A67C-4A1D6130F1EB</gtr:id><gtr:outcomeId>58b6f2baea5e63.74236644</gtr:outcomeId><gtr:sector>Public</gtr:sector><gtr:start>2016-11-01</gtr:start></gtr:furtherFundingOutput></gtr:furtherFundingOutputs><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>Our work on the mechanised specification of JavaScript has led to a number of corrections and improvements to the newly published EcmaScript 6 standard, the worldwide standard for the JavaScript programming language.</gtr:description><gtr:firstYearOfImpact>2015</gtr:firstYearOfImpact><gtr:id>3244910F-957F-422C-93B8-933D1C7AE78D</gtr:id><gtr:impactTypes/><gtr:outcomeId>56cde12c739be0.75394417</gtr:outcomeId><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>We have developed JSCert, a formal mechanisation of the EcmaScript 5 standard in the proof assistant Coq, as well as JSRef, a JavaScript reference interpreter proven correct with respect to JSCert. We have extensively tested the JSRef interpreter and discovered a number of inconsistencies in the ES5 standard.

We have developed JSIL, an intermediate language for JavaScript that is well-suited for program analysis, and have completed the core of JSVerify, the first certifying general-purpose verification tool for JavaScript. JSVerify can verify a number of JavaScript internal functions and simple JavaScript programs.

We have also completed the ChromeParty browser extension, this extension is able to to capture realistic web browsing data and analyse privacy-related properties. We have reported bugs in the Chromium API for extensions (Chromium is the open-source core of Google Chrome), discovered while working on the ChromeParty extension.

We have designed a hybrid type system for enforcing secure information flow in a subset of JavaScript, which we have implemented and used for securing the code of simple Web applications. Furthermore, we have developed an information flow monitor for a core of JavaScript that can be extended with arbitrary Web APIs, such as the DOM API or the XMLHttpRequest API. Finally, we have designed and implemented a compiler for automatically sandboxing untrusted JavaScript third-party code and we showed how to use this compiler for automatically generating secure JavaScript Web applications.</gtr:description><gtr:exploitationPathways>JSCert and JSRef could be adapted for the EcmaScript 6 standard, or, with certain adjustments and interest from the EcmaScript committee, be directly used in the creation process of the forthcoming JavaScript standards. 

JSVerify, once completed, could be integrated with industrial-strength verification tools, such as Amazon's CMBC and Facebook's Infer.</gtr:exploitationPathways><gtr:id>AB66DFC8-DE69-4554-9D4F-6D335065DE1D</gtr:id><gtr:outcomeId>56cde597a54912.72986669</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors><gtr:url>http://jscert.org/</gtr:url></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs><gtr:softwareAndTechnicalProductOutput><gtr:description>JaVerT is a cutting-edge verification tool chain for JavaScript based on separation logic. JaVerT works by first translating JavaScript programs and specifications to a small intermediate goto language, called JSIL, and then performing verification on JSIL programs. JaVerT comprises: a
compiler from JavaScript to JSIL; a semi-automatic verification tool, called JSILVerify, based on a JSIL program logic; and a logic translator from JavaScript assertions to JSIL assertions.</gtr:description><gtr:id>9FCB6BF8-4498-4456-92A7-724377863EAC</gtr:id><gtr:impact>The JaVerT team is actively collaborating with Amazon and IBM. We are working with Julian Dolby, at IBM New York, on using the JaVerT infrastructure to build an automatic bug finding tool for JavaScript. The PhD student who started the project did an an internship at Amazon on designing a taint analysis for JavaScript using JSIL as a front-end for CBMC. We supervised four Master students (two MEng, once MSc, and one conversion MSc) in 2016.</gtr:impact><gtr:outcomeId>58ca8a22976321.82887986</gtr:outcomeId><gtr:title>JaVerT</gtr:title><gtr:type>Software</gtr:type><gtr:url>https://github.com/resource-reasoning/JavaScriptVerification/</gtr:url><gtr:yearFirstProvided>2016</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput><gtr:softwareAndTechnicalProductOutput><gtr:description>Coq files that define the semantics of a core of JavaScript, an interpreter for the language that can be exported in OCAML and proofs that the interpreter is correct and that the semantics respects reasonable invariants.</gtr:description><gtr:id>EFC31C04-EA3C-4D36-805D-CD85AA60B114</gtr:id><gtr:impact>We hosted 2 internships from France and attracted several Imperial College undergraduate students to contribute to the code.</gtr:impact><gtr:outcomeId>r-2552768134.095496fd5b1f2</gtr:outcomeId><gtr:title>Semantics of JavaSCript in Coq</gtr:title><gtr:type>Software</gtr:type><gtr:url>https://github.com/jscert/jscert</gtr:url><gtr:yearFirstProvided>2012</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput><gtr:softwareAndTechnicalProductOutput><gtr:description>Web application to test that browser correctly implements security standards.</gtr:description><gtr:id>6B9FBC89-820D-4595-8D3E-21A00198A1F3</gtr:id><gtr:impact>Discovered 2 bugs in Mozilla Firefox browser. Helped Mozilla Firefox security patch developer.
Discovered and reported security bugs in Blackberry browser.
Companion paper accepted to ISSTA 2015 conference.</gtr:impact><gtr:outcomeId>546337b86a8b98.40396354</gtr:outcomeId><gtr:title>Browser security testing web application</gtr:title><gtr:type>Webtool/Application</gtr:type><gtr:url>https://browseraudit.com</gtr:url><gtr:yearFirstProvided>2014</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput></gtr:softwareAndTechnicalProductOutputs><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>C062170F-7428-4F2D-BAB3-D6DFEB401B54</gtr:id><gtr:title>Mashic compiler: Mashup sandboxing based on inter-frame communication</gtr:title><gtr:parentPublicationTitle>Journal of Computer Security</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/c7c1bbb10ac71d2240ffa88c342bb109"><gtr:id>c7c1bbb10ac71d2240ffa88c342bb109</gtr:id><gtr:otherNames>Luo Z</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:outcomeId>58bed6dbd03be3.82433615</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>8ECFAA13-2907-403C-A37B-8B539981E20C</gtr:id><gtr:title>Abstract Domains for Type Juggling</gtr:title><gtr:parentPublicationTitle>Electronic Notes in Theoretical Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/9ce5ed30e503e6603d422552c9eec05b"><gtr:id>9ce5ed30e503e6603d422552c9eec05b</gtr:id><gtr:otherNames>Arceri V</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>58c1a82846a0f8.54014992</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>76C76702-8B96-42BE-81DD-2DE992854A74</gtr:id><gtr:title>JaVerT: JavaScript verification toolchain</gtr:title><gtr:parentPublicationTitle>Proceedings of the ACM on Programming Languages</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/445dc21057131f76b5575d77345384c9"><gtr:id>445dc21057131f76b5575d77345384c9</gtr:id><gtr:otherNames>Fragoso Santos J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>5aaa4f8ba2ec84.19468365</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>0C2E7075-70F2-40B9-B086-72772998E64D</gtr:id><gtr:title>2016 Sepcial Track on Computer Security</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/80c8b700e9efc4bc7097a0e177d7209a"><gtr:id>80c8b700e9efc4bc7097a0e177d7209a</gtr:id><gtr:otherNames>Bella G</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:isbn>9781450337397</gtr:isbn><gtr:outcomeId>58c1ab251eb4d5.32796680</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>5926EA84-1B98-4E6D-9E81-6247DFEB79D9</gtr:id><gtr:title>2015 Special Track on Computer Security</gtr:title><gtr:parentPublicationTitle>Proceedings of the ACM Symposium on Applied Computing</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/ea961f41a327e475217aa805395ccbd8"><gtr:id>ea961f41a327e475217aa805395ccbd8</gtr:id><gtr:otherNames>Bella G.</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>56ded92506cba1.65130271</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/K032089/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>67</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>E05CFE0B-163D-412D-A3C2-28E89B2CA336</gtr:id><gtr:percentage>33</gtr:percentage><gtr:text>Software Engineering</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>