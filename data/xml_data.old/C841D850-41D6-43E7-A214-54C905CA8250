<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/2DB7ED73-8E89-457A-A395-FAC12F929C1A"><gtr:id>2DB7ED73-8E89-457A-A395-FAC12F929C1A</gtr:id><gtr:name>University of Edinburgh</gtr:name><gtr:department>Sch of Informatics</gtr:department><gtr:address><gtr:line1>Old College</gtr:line1><gtr:line2>South Bridge</gtr:line2><gtr:line3>Mayfield Road</gtr:line3><gtr:line4>Edinburgh</gtr:line4><gtr:postCode>EH8 9YL</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/2DB7ED73-8E89-457A-A395-FAC12F929C1A"><gtr:id>2DB7ED73-8E89-457A-A395-FAC12F929C1A</gtr:id><gtr:name>University of Edinburgh</gtr:name><gtr:address><gtr:line1>Old College</gtr:line1><gtr:line2>South Bridge</gtr:line2><gtr:line3>Mayfield Road</gtr:line3><gtr:line4>Edinburgh</gtr:line4><gtr:postCode>EH8 9YL</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/4479E385-62A0-4CD9-B30F-0BBC29768579"><gtr:id>4479E385-62A0-4CD9-B30F-0BBC29768579</gtr:id><gtr:name>IBM United Kingdom Limited</gtr:name><gtr:address><gtr:line1>PO Box 41</gtr:line1><gtr:line2>North Harbour</gtr:line2><gtr:line4>Portsmouth</gtr:line4><gtr:line5>Hampshire</gtr:line5><gtr:postCode>PO6 3AU</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/9E185EA0-20AE-4C2E-A319-DBE6BA09A3D9"><gtr:id>9E185EA0-20AE-4C2E-A319-DBE6BA09A3D9</gtr:id><gtr:firstName>Ajitha</gtr:firstName><gtr:surname>Rajan</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FL024624%2F1"><gtr:id>C841D850-41D6-43E7-A214-54C905CA8250</gtr:id><gtr:title>Verifying Changes: How Much Will it Cost?</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/L024624/1</gtr:grantReference><gtr:abstractText>Most software systems evolve over time to adapt to changing environment, needs, new 
concepts, new technologies and standards. Modification to the software is
inevitable in software evolution and may be through growth in 
the number of functions, components and interfaces, or alteration of existing modules. 
Examples commonly seen are changes or upgrades in operating systems, browsers, communication software. 
Software maintenance to understand, implement and validate changes is a very expensive activity and costs billions of dollars each year in the software industry. 
In this proposal, we focus on the problem of validating changes and their
effects. This is typically carried out using regression testing,
defined as ``selective retesting of a system or component to verify that
modifications have not caused unintended effects and that the system or
component still complies with its specified requirements''

Regression testing is an expensive and time consuming process and
accounts for majority of the maintenance costs.
Balancing confidence in the software correctness (gained from extensive and
frequent regression testing) against cost of regression test effort is one
of the major challenges in software maintenance. 
Estimates of regression test cost will help developers and managers in
achieving this balance. Accurate regression test cost estimates are crucial
for planning project schedules, allocating resources, software reliability, monitoring and control. 
 
Cost models estimating maintenance effort and development effort have been developed in the past.
Nevertheless, these models cannot be used since crucial elements for predicting test effort 
such as testing requirements, test cases, test quality metrics are ignored for the most part in these models. 
Our goal in this proposal is to define a model that accurately estimates regression test cost for evolving
software taking into account effects of changes on software behaviour, testing requirements, industry and process specific information, and quality metrics to be satisfied. 
At the end of this proposal, we will have tools that when given the software changes and quality requirements as inputs can predict the cost of validating the changes. 
We will evaluate the test effort estimates on large open-source software evolution repositories 
such as DEBIAN GNU/Linux distribution releases and OpenSSH. 
We will also collaborate with IBM and evaluate our estimates on their software.

The prototype analysis tools that we develop during the course of the project
will be made freely available in open-source form. We will package and ship our analysis tools as part of
well-established distributions such as Debian. 
This will allow numerous developers of large-scale software (including our
project partner) to directly apply our techniques to their problems,
improving their development and maintenance processes.</gtr:abstractText><gtr:potentialImpactText>The main direct beneficiaries of the project include 

1) Software developers and project managers in the software industry.
The analysis techniques developed in our proposal will help developers of large scale software 
analyse the impact of changes and the test cases required to ensure software quality. 
Project managers can use the cost model we develop to plan and allocate resources for validating changes and reliability control. 
The cost model will also help managers in creating realistic project schedules. 

2) Any industry maintaining evolving software.
Accurate estimates of testing costs in evolving software will help organizations better plan the software maintenance process 
resulting in more effective use of the resources to produce better quality software. This will result in 
considerable economic gains for organizations maintaining large scale software 
by reducing cost of corrective effort, reducing redundancy in resource estimates,
preventing job losses from overbidding, and improving reliability of
software.

3) Software customers.
With the prevalence of software in today's world, most of us interact on a daily basis with software that is evolving.
Our cost models promise better project and resource planning, and improved reliability which will lead to better quality software at cheaper rates.</gtr:potentialImpactText><gtr:fund><gtr:end>2016-01-30</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2014-07-31</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>94734</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>We have presented and discussed our approach and findings with respect to improving test suite execution time at companies with software and tests in the embedded systems domain and compilers for parallel accelerators. We are still in discussion about using the techniques and their feasibility on company software and tests.</gtr:description><gtr:firstYearOfImpact>2016</gtr:firstYearOfImpact><gtr:id>68810F8C-1AC3-4EE2-96B5-D228DAEE11C4</gtr:id><gtr:impactTypes><gtr:impactType>Economic</gtr:impactType></gtr:impactTypes><gtr:outcomeId>56d9b1ef25f887.75372224</gtr:outcomeId><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>For changes proposed to a software, we have developed a methodology and tool to analyse the size of change and its impact on the software. 
We have also analysed the test effort required to verify these changes. We measured the execution time and energy consumed by the tests for changes on several open source benchmarks. 
We used a statistical machine learning technique to estimate the cost of test suite execution based on the application and hardware characteristics. We have recently submitted our findings to an international peer reviewed conference on empirical software engineering. 
While analysing changes made during software maintenance, we discovered we could optimise the software design for improved energy efficiency. We proposed simple compiler transformations for popular design patterns in software. Our findings were published in a top software engineering conference.</gtr:description><gtr:exploitationPathways>Energy efficient software development,
Improved software design,
Improved testing practices</gtr:exploitationPathways><gtr:id>6F23C7CF-3CA7-4BB2-BBDF-526A395A0002</gtr:id><gtr:outcomeId>56d9bcab419ff0.58306766</gtr:outcomeId><gtr:sectors><gtr:sector>Aerospace, Defence and Marine,Digital/Communication/Information Technologies (including Software),Electronics,Energy,Financial Services, and Management Consultancy</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>B78096CC-1664-410C-B283-50D6289D114E</gtr:id><gtr:title>Optimising Energy Consumption of Design Patterns</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/096d22cac5d89d6fe8f1de6dd705152d"><gtr:id>096d22cac5d89d6fe8f1de6dd705152d</gtr:id><gtr:otherNames>Noureddine A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>56dd5774c32cf6.80614016</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/L024624/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>E05CFE0B-163D-412D-A3C2-28E89B2CA336</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Software Engineering</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>