<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/03D8AFBB-3EA5-4885-B036-BD4F9F4F9849"><gtr:id>03D8AFBB-3EA5-4885-B036-BD4F9F4F9849</gtr:id><gtr:name>University of Sheffield</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>Firth Court</gtr:line1><gtr:line2>Western Bank</gtr:line2><gtr:line4>Sheffield</gtr:line4><gtr:line5>South Yorkshire</gtr:line5><gtr:postCode>S10 2TN</gtr:postCode><gtr:region>Yorkshire and The Humber</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/03D8AFBB-3EA5-4885-B036-BD4F9F4F9849"><gtr:id>03D8AFBB-3EA5-4885-B036-BD4F9F4F9849</gtr:id><gtr:name>University of Sheffield</gtr:name><gtr:address><gtr:line1>Firth Court</gtr:line1><gtr:line2>Western Bank</gtr:line2><gtr:line4>Sheffield</gtr:line4><gtr:line5>South Yorkshire</gtr:line5><gtr:postCode>S10 2TN</gtr:postCode><gtr:region>Yorkshire and The Humber</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/37EF6C9C-5F51-40DD-BED5-B792981BC119"><gtr:id>37EF6C9C-5F51-40DD-BED5-B792981BC119</gtr:id><gtr:name>Imperial Cancer Research Fund</gtr:name><gtr:address><gtr:line1>44 Lincoln's Inn Fields</gtr:line1><gtr:postCode>WC2A 3PX</gtr:postCode><gtr:region>London</gtr:region></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/00FE3D00-46A6-4EDB-9672-1565C1E10DB8"><gtr:id>00FE3D00-46A6-4EDB-9672-1565C1E10DB8</gtr:id><gtr:name>Massachusetts Institute of Technology</gtr:name><gtr:address><gtr:line1>77 Massachusetts Avenue</gtr:line1><gtr:postCode>02139</gtr:postCode><gtr:region>Outside UK</gtr:region></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/8D313FDD-E8CA-48F5-B13B-03885013E752"><gtr:id>8D313FDD-E8CA-48F5-B13B-03885013E752</gtr:id><gtr:name>BTEXACT</gtr:name><gtr:address><gtr:line1>British Telecom</gtr:line1><gtr:line2>Advanced Communications Technology Centr</gtr:line2><gtr:line3>Adastral Park, Martlesham Heath</gtr:line3><gtr:line4>Ipswich</gtr:line4><gtr:postCode>IP5 3RE</gtr:postCode><gtr:region>East of England</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/2F2E0FE9-CA09-40A3-9B2C-09521CBC9323"><gtr:id>2F2E0FE9-CA09-40A3-9B2C-09521CBC9323</gtr:id><gtr:firstName>Philip</gtr:firstName><gtr:otherNames>Stephen</gtr:otherNames><gtr:surname>McMinn</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FG009600%2F1"><gtr:id>D7B5A6C3-E4CF-4CD0-A17D-E0A3E04905B8</gtr:id><gtr:title>Automated Discovery of Emergent Misbehaviour</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/G009600/1</gtr:grantReference><gtr:abstractText>Computational models are essentially computer programs intended to simulate a natural system, such as an ant colony, the formation of skin tissue or the global economy. Scientists and industrialists use computational models to help develop their understanding of the natural system being modelled, to make forecasts, and to predict the impact of some change to the system. A topical example of an application of a computer model might be to predict the impact of nationalising the Northern Rock bank on the UK economy.Agent-based models are computational models which have been developed from the point of view of the main actors in the system, e.g. a terrorist in a model of civil uprising, or a voter in an election. Observations made from simulating the model can be understood and explained in terms of the individuals involved, answering questions such as 'why is there civil disturbance in this area of the country?', 'why is this political party popular here?' or 'why has a tumour developed here?'. Such inferences are arguably difficult to make from 'top-down' approaches to modelling, which are composed of a set of mathematical equations.As predictions and scientific discoveries are reliant on the models being implemented correctly, the consequences of not properly testing a model can be extremely serious, and have cost companies several millions of pounds in the past. However, traditional software testing strategies, which take a 'divide and conquer' approach, are difficult to apply to agent-based models. The interaction of agents in a simulation, often at random, produces complex patterns and behaviours. Thus, it is difficult to predict which causes will lead directly to which effects. The proposed research here intends to test agent-based models using intelligent search techniques, with the specific intention of 'homing in' on behaviours of the model that have not been exposed in previous simulation runs. In this way, the search process will encourage testing of the model in unlikely or ill-conceived situations, where the model's behaviour may diverge from that intended. In order to do this, the search process will build up an abstract picture of what the model is doing in simulation through extension of a technique known as invariant detection. Invariants are statements that are always found to be true. The search will essentially aim to falsify generated invariants generated from past simulations in order to demonstrate new behaviours of the model. These are likely to be rare or unexpected behaviours that may not have been previously tested, and thus possible instances where software errors may be lurking.</gtr:abstractText><gtr:fund><gtr:end>2012-07-31</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2009-08-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>241736</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>Agents have been used to model individual people in a crowd control simulation, cells in skin tissue, the main players in an economy; for example banks, countries, households and firms. During simulation, agents interact to produce complex macro-behaviours - emergent behaviours such as the self-organisation of blood vessel membranes in response to a tumour, uprising of terrorist activity or voting trends in election campaigns. Observations made from simulating the model can be understood and explained in terms of the individuals involved. 

The aim of this project was to develop testing techniques for agent-based simulation models, using a combination of metaheuristic search, invariant detection and mutation analysis. The key findings were as follows:

1. Random search works better than metaheuristic search for detecting anomalous behaviour (as detected through the violation of invariants using the Daikon tool). This is because the input domain is huge, and random search is highly diversified compared to a search that involves a fitness function. This led to some developments in search-based testing:

a) The development of input domain reduction strategies and when and why they will work for different search algorithms (Evolutionary, Local and Random). 

b) A theory backed up by empirical evaluation as to why different search algorithms (Evolutionary, Local and Random) perform better in generating test cases 

2. Anomalous behaviour may also be detected by statistical monitoring and checking for outliers. This was implemented into a tool called MASTER.

3. Test effectiveness can be evaluated using Mutation Analysis, yet multi-agent systems are suitably complex and different enough from existing software paradigms to warrant a definition of a set of mutation operators.</gtr:description><gtr:exploitationPathways>The research may be used to test agent-based models used in industry in order to gain confidence from the predictions made from them. The research has been used to build the MASTER prototype tool for agent testing. The tool may be further improved and the other research results may also form the basis of tools - or knowledge about how to improve them.</gtr:exploitationPathways><gtr:id>FFA0B44A-1BF0-41C3-86C4-F8C8C89F223B</gtr:id><gtr:outcomeId>r-2805224668.984510477737b18</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs><gtr:softwareAndTechnicalProductOutput><gtr:description>A tool for monitoring and testing agent-based model simulations.</gtr:description><gtr:id>04DEBFB7-AFCA-492F-A833-FF07B07CACED</gtr:id><gtr:impact>The tool notifies the tester about outlying potential anomalous behaviours of an agent-based model.</gtr:impact><gtr:outcomeId>r-7569312749.02942856fd48e12</gtr:outcomeId><gtr:title>MASTER (Multi-Agent Simulation TestER</gtr:title><gtr:type>Software</gtr:type><gtr:yearFirstProvided>2012</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput></gtr:softwareAndTechnicalProductOutputs><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>08F1239A-9621-4E49-A352-9F03C30BF619</gtr:id><gtr:title>An empirical investigation into branch coverage for C programs using CUTE and AUSTIN</gtr:title><gtr:parentPublicationTitle>Journal of Systems and Software</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/1e5088137f00f4cac15b9685ddf48ab4"><gtr:id>1e5088137f00f4cac15b9685ddf48ab4</gtr:id><gtr:otherNames>Lakhotia K</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:outcomeId>5464ab4872cd95.63768755</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>CEB2FA81-0BF6-4D58-B28C-3CF8234DABD4</gtr:id><gtr:title>Empirical evaluation of a nesting testability transformation for evolutionary testing</gtr:title><gtr:parentPublicationTitle>ACM Transactions on Software Engineering and Methodology</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/f99961bddc8144c6c9ca8ae7703db8dc"><gtr:id>f99961bddc8144c6c9ca8ae7703db8dc</gtr:id><gtr:otherNames>McMinn P</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2009-01-01</gtr:date><gtr:outcomeId>doi_55f9529524fc75e5</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>57AC9776-8DF9-424A-900C-2F0067F94E46</gtr:id><gtr:title>How Does Program Structure Impact the Effectiveness of the Crossover Operator in Evolutionary Testing?</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/f99961bddc8144c6c9ca8ae7703db8dc"><gtr:id>f99961bddc8144c6c9ca8ae7703db8dc</gtr:id><gtr:otherNames>McMinn P</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:isbn>978-1-4244-8341-9</gtr:isbn><gtr:outcomeId>5464b77609ba85.10262041</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>A6523B72-EB36-46B5-9244-ABC713FC7A1B</gtr:id><gtr:title>Modelling complex biological systems using an agent-based approach.</gtr:title><gtr:parentPublicationTitle>Integrative biology : quantitative biosciences from nano to macro</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/8a98cecf67fc971c9e2123c113c48ca0"><gtr:id>8a98cecf67fc971c9e2123c113c48ca0</gtr:id><gtr:otherNames>Holcombe M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:issn>1757-9694</gtr:issn><gtr:outcomeId>doi_53d02e02e5641c78</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>8BB254C0-A41D-4EDB-8EE2-18C5DCF0E21A</gtr:id><gtr:title>A Theoretical and Empirical Study of Search-Based Testing: Local, Global, and Hybrid Search</gtr:title><gtr:parentPublicationTitle>IEEE Transactions on Software Engineering</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/da66f6d497bab67a995823f6e77588f1"><gtr:id>da66f6d497bab67a995823f6e77588f1</gtr:id><gtr:otherNames>Harman M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:outcomeId>doi_53d05f05f5d6e9be</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>7F9989B4-C785-4E30-B0F0-AF069A828AFA</gtr:id><gtr:title>A multiobjective optimisation approach for the dynamic inference and refinement of agent-based model specifications</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/66a13ddd03d6a33a073bb32f8a925d2d"><gtr:id>66a13ddd03d6a33a073bb32f8a925d2d</gtr:id><gtr:otherNames>Adra S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2011-01-01</gtr:date><gtr:isbn>978-1-4244-7834-7</gtr:isbn><gtr:outcomeId>m_58837887791405f53c</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>AE47753C-9315-48F5-9C20-5D2CB7B17669</gtr:id><gtr:title>Input Domain Reduction through Irrelevant Variable Removal and Its Effect on Local, Global, and Hybrid Search-Based Structural Test Data Generation</gtr:title><gtr:parentPublicationTitle>IEEE Transactions on Software Engineering</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/f99961bddc8144c6c9ca8ae7703db8dc"><gtr:id>f99961bddc8144c6c9ca8ae7703db8dc</gtr:id><gtr:otherNames>McMinn P</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:outcomeId>doi_53d05f05f62ce496</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>FD63D85F-1983-400E-9098-73CF9153EAB0</gtr:id><gtr:title>Search-Based Software Testing: Past, Present and Future</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/f99961bddc8144c6c9ca8ae7703db8dc"><gtr:id>f99961bddc8144c6c9ca8ae7703db8dc</gtr:id><gtr:otherNames>McMinn P</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2011-01-01</gtr:date><gtr:isbn>978-1-4577-0019-4</gtr:isbn><gtr:outcomeId>56e0268d18a499.54185951</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>0DB3EEEB-F6B4-4641-B14C-EA7D9C3A8169</gtr:id><gtr:title>Automated Test Data Generation for Coverage: Haven't We Solved This Problem Yet?</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/1e5088137f00f4cac15b9685ddf48ab4"><gtr:id>1e5088137f00f4cac15b9685ddf48ab4</gtr:id><gtr:otherNames>Lakhotia K</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2009-01-01</gtr:date><gtr:isbn>978-1-4244-4977-4</gtr:isbn><gtr:outcomeId>56e027a7f0ed82.65880530</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>02023C9E-CF04-4AE9-8059-F10F99B2D214</gtr:id><gtr:title>Optimizing for the Number of Tests Generated in Search Based Test Data Generation with an Application to the Oracle Cost Problem</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/da66f6d497bab67a995823f6e77588f1"><gtr:id>da66f6d497bab67a995823f6e77588f1</gtr:id><gtr:otherNames>Harman M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:isbn>978-1-4244-6773-0</gtr:isbn><gtr:outcomeId>56e026fa6d5fb2.78300273</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>C713F28F-0A35-427A-8BA7-262590DE2F5D</gtr:id><gtr:title>An identification of program factors that impact crossover performance in evolutionary test input generation for the branch coverage of C programs</gtr:title><gtr:parentPublicationTitle>Information and Software Technology</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/f99961bddc8144c6c9ca8ae7703db8dc"><gtr:id>f99961bddc8144c6c9ca8ae7703db8dc</gtr:id><gtr:otherNames>McMinn P</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:outcomeId>5464aabdbf5ec8.15613094</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>23F6903A-C8E5-46A9-B84A-47880EDAD770</gtr:id><gtr:title>Mutation Operators for Agent-Based Models</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/66a13ddd03d6a33a073bb32f8a925d2d"><gtr:id>66a13ddd03d6a33a073bb32f8a925d2d</gtr:id><gtr:otherNames>Adra S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:isbn>978-1-4244-6773-0</gtr:isbn><gtr:outcomeId>doi_53d05905916217e3</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/G009600/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>41593421-CFAC-411D-94A7-E144022B0E6D</gtr:id><gtr:percentage>25</gtr:percentage><gtr:text>Artificial Intelligence</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>E05CFE0B-163D-412D-A3C2-28E89B2CA336</gtr:id><gtr:percentage>75</gtr:percentage><gtr:text>Software Engineering</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>