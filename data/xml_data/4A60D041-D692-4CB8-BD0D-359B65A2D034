<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/7CB47244-F466-4DB5-8B1C-DD4EFAF07BD4"><gtr:id>7CB47244-F466-4DB5-8B1C-DD4EFAF07BD4</gtr:id><gtr:firstName>Andrzej</gtr:firstName><gtr:surname>Murawski</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/12247D49-C076-43CB-B063-A4E785DFEE99"><gtr:id>12247D49-C076-43CB-B063-A4E785DFEE99</gtr:id><gtr:firstName>James</gtr:firstName><gtr:otherNames>Benjamin</gtr:otherNames><gtr:surname>Worrell</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/F4416405-8832-4572-915C-CF26F5084D21"><gtr:id>F4416405-8832-4572-915C-CF26F5084D21</gtr:id><gtr:firstName>Joel</gtr:firstName><gtr:surname>Ouaknine</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FG069158%2F1"><gtr:id>4A60D041-D692-4CB8-BD0D-359B65A2D034</gtr:id><gtr:title>Automated Verification of Probabilistic Programs</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/G069158/1</gtr:grantReference><gtr:abstractText>Since the 1970s it has been widely recognised that introducingrandomisation in the design of algorithms can yield substantialbenefits. Unfortunately, randomised algorithms and protocols arenotoriously difficult to get right, let alone to analyse and prove correct. The aim of this project is to develop algorithms, techniques, andtools to enable engineers and researchers to design and reason aboutprobabilistic systems. We will also tackle a number ofcomplexity and computability questions that arise naturally in thecontext of our planned research.One of the starting points for this proposal is the novel prototype toolAPEX, an automated equivalence checker for simple probabilisticprograms that was developed by us recently. APEX is based on game semantics, a sophisticated mathematicaltheory of programming languages, and is able to faithfullytranslate programs into probabilistic automata, which aretheoretical models of probabilistic computation. As a first step, the project aims to greatly expand, at both a practical and theoretical level, the current capabilities of our probabilistic verification framework. We will then develop new algorithms for checking the correctness of probabilistic programs, by analysing their associatedprobabilistic automata. This comprises the development of specification formalisms in which program properties can be expressed, as well as efficient methods for verifying that the properties are satisfied.We will also investigate techniques for making the automata representations of programs as compact as possible so thatthe verification tasks can be carried out efficiently.Another strand of the project will be a systematic studyof the theoretical issues that stem naturally from our investigations.We plan to evaluate the outcome of our work on a series of case studies, to becarried out simultaneously with the development and expansion of ourverification infrastructure. In the longer term, we expect that the algorithms andtools that we develop will become directly useful to system designers andprogrammers.</gtr:abstractText><gtr:fund><gtr:end>2011-10-31</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2009-11-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>290345</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>1) We have developed algorithms answering theoretical decidability and complexity questions about probabilistic systems, such as (among several others) efficient randomised algorithms for checking equivalence of probabilistic automata, and substantial improvements in the analysis of the expected termination time in Herman's algorithm, a well-studied distributed leader-election
protocol.

We have produced a website: http://www.cs.ox.ac.uk/apex ,
where our tool APEX can be downloaded or even experimented with directly online. The site also holds various case studies, publications, and other information about work carried out in this project. 

2) We have produced an open-source tool, APEX, enabling the analysis of probabilistic programs written in a simple C-like language. Based on game semantics, APEX can
even handle so-called open programs, i.e., programs in which variables or functions can be left unspecified. APEX transforms a program into an automaton that captures the program's probabilistic behaviour under all instantiations of the unspecified components. APEX can then perform sophisticated analyses on the resulting automata, which are
translated back into various assertions concerning the original probabilistic programs. In our experiments, for example, APEX was able to certify or disprove, as the case may be, properties such as termination or anonymity of various protocols, sometimes with an exponential speed-up over competing state-of-the-art approaches.</gtr:description><gtr:exploitationPathways>Further experiments, commercial development of software, and answering questions left open in papers.</gtr:exploitationPathways><gtr:id>C9A14086-79B8-4FFB-986B-B58390CB2475</gtr:id><gtr:outcomeId>56e0caa8da3da5.75943417</gtr:outcomeId><gtr:sectors><gtr:sector>Aerospace, Defence and Marine,Digital/Communication/Information Technologies (including Software),Transport,Other</gtr:sector></gtr:sectors><gtr:url>http://www.cs.ox.ac.uk/apex</gtr:url></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>1363781A-E5BA-493D-8D09-17F7F2A055F1</gtr:id><gtr:title>Three tokens in Herman&amp;acirc;??s algorithm</gtr:title><gtr:parentPublicationTitle>Formal Aspects of Computing</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/631d976e6f957e3d6cc7f113f92a1cb4"><gtr:id>631d976e6f957e3d6cc7f113f92a1cb4</gtr:id><gtr:otherNames>Kiefer S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:outcomeId>5630fe21624410.15289589</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>83B4E015-FAC6-48A1-B485-52C74019E9E3</gtr:id><gtr:title>On the Complexity of Equivalence and Minimisation for Q-weighted Automata</gtr:title><gtr:parentPublicationTitle>Logical Methods in Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/631d976e6f957e3d6cc7f113f92a1cb4"><gtr:id>631d976e6f957e3d6cc7f113f92a1cb4</gtr:id><gtr:otherNames>Kiefer S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:outcomeId>56b1c87c3f6544.02829774</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>08B6B89D-20C8-466D-BF36-2866B490B0A5</gtr:id><gtr:title>Reachability problems for Markov chains</gtr:title><gtr:parentPublicationTitle>Information Processing Letters</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/a5ab9c3f338c41c46b3df23664b66953"><gtr:id>a5ab9c3f338c41c46b3df23664b66953</gtr:id><gtr:otherNames>Akshay S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>56a64b5629d7e4.50656580</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>D37F5F53-D276-4E2C-B9A5-C8E52FC52591</gtr:id><gtr:title>On the Magnitude of Completeness Thresholds in Bounded Model Checking</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/c28268e312bb63b7c8347d60f46599c6"><gtr:id>c28268e312bb63b7c8347d60f46599c6</gtr:id><gtr:otherNames>Bundala D</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:isbn>978-1-4673-2263-8</gtr:isbn><gtr:outcomeId>563391a9602f71.26349705</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>BBAAFA1C-4376-4B4C-8742-7316CEB69888</gtr:id><gtr:title>Verifying multi-threaded software with impact</gtr:title><gtr:parentPublicationTitle>2013 Formal Methods in Computer-Aided Design, FMCAD 2013</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/e5e3fd7f691af8ccb15cce2dac3cd045"><gtr:id>e5e3fd7f691af8ccb15cce2dac3cd045</gtr:id><gtr:otherNames>Wachter B</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:outcomeId>56b1c87c048b27.77122308</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>5DA6405C-FFA1-4A6D-9CD9-EED67F282D74</gtr:id><gtr:title>Algorithmic probabilistic game semantics</gtr:title><gtr:parentPublicationTitle>Formal Methods in System Design</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/631d976e6f957e3d6cc7f113f92a1cb4"><gtr:id>631d976e6f957e3d6cc7f113f92a1cb4</gtr:id><gtr:otherNames>Kiefer S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:outcomeId>56b1c87c65c207.02864356</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/G069158/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>50</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>E05CFE0B-163D-412D-A3C2-28E89B2CA336</gtr:id><gtr:percentage>50</gtr:percentage><gtr:text>Software Engineering</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>