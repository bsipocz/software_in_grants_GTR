<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/EAAD4D43-BD15-432B-9385-2DBD0C65958D"><gtr:id>EAAD4D43-BD15-432B-9385-2DBD0C65958D</gtr:id><gtr:name>University of Bath</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>University of Bath</gtr:line1><gtr:line2>Claverton Down</gtr:line2><gtr:line4>Bath</gtr:line4><gtr:line5>Avon</gtr:line5><gtr:postCode>BA2 7AY</gtr:postCode><gtr:region>South West</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/EAAD4D43-BD15-432B-9385-2DBD0C65958D"><gtr:id>EAAD4D43-BD15-432B-9385-2DBD0C65958D</gtr:id><gtr:name>University of Bath</gtr:name><gtr:address><gtr:line1>University of Bath</gtr:line1><gtr:line2>Claverton Down</gtr:line2><gtr:line4>Bath</gtr:line4><gtr:line5>Avon</gtr:line5><gtr:postCode>BA2 7AY</gtr:postCode><gtr:region>South West</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/DD43001C-409F-452A-BC45-AA4152577BB5"><gtr:id>DD43001C-409F-452A-BC45-AA4152577BB5</gtr:id><gtr:firstName>James</gtr:firstName><gtr:surname>Laird</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FH023097%2F1"><gtr:id>F3AE3701-E856-44F3-BE06-E489A26C0557</gtr:id><gtr:title>Semantic Structures for Higher-Order Information Flow</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/H023097/1</gtr:grantReference><gtr:abstractText>The aim of this research is to develop a general theory for describing and reasoning about higher-order programs, which can operate not just on basic data (such as numerical values) but programs themselves (which may also be higher-order programs). These arise in many different settings, but their subtle and complicated nature means that errors and inefficiencies are difficult to identify and rectify or avoid, without a strong theoretical basis for doing so.One way to describe these programs uses mathematical models based on representing programs as strategies in a formal game. This game semantics'' has been used to develop very accurate models and powerful reasoning tools for a wide range of higher-order programming languages - in particular, languages with imperative or mutable variables, which can be used to store data and programs and subsequently updated. However, there is no systematic way of describing these models - proving that they are well-behaved'' must generally be done on a case-by-case basis. This project will investigate a new way of constructing models of such languages, using structures from category theory to capture the dependence of one event'' in a computation on another (for example, reading from a mutable variable returns the last piece of data written to it) in an abstract way. Any instance of these relatively simple structures can be used to construct a model of the associated language, and they can also be used to guarantee that the model captures all observable properties of the language, for example. This will make it easier to find new models and prove their key properties. By developing a calculus for describing the semantic structures which have been identified, the proposed research will yield a novel way to write down higher-order imperative programs themselves, to generate rules for determining when two programs are equivalent (i.e. interchangeable), and to suggest rules for controlling information flow - for example, preventing an update of one variable from changing the value stored in a different one.</gtr:abstractText><gtr:potentialImpactText>The aim of the project is to develop theories in support of improvements in programming languages and program verification tools, leading to more efficient programs with fewer errors. This will bring economic benefits and enhance quality of life by improving the reliability and effectiveness of computer systems, and the productivity, safety and security of their users. What is proposed is basic, blue sky research - it is a part of broader effort to develop better programs, based on sound theory. Thus benefits to society will be achieved indirectly, through knowledge transfer to the direct beneficiaries, who will primarily be academic. These include researchers working directly with semantics, such as those developing verification tools or new programming language features based on game semantics, as well as groups engaged in complementary basic research. The project will also have impact beyond this immediate circle - its aim is the creation of a body of research which rests on deep semantic foundations, but generates theories - such as a basic, typed calculus for describing higher-order programs - which can be understood and used independently of those foundations by researchers across a variety of fields, including those working in industry or collaborating with industrial partners. It will add value'' by enabling new applications of research which has hitherto been limited in its applicability to a restricted class of languages or combinations of computational effects (for example, implicit computational complexity for higher-order functions). Similarly, it will enhance the benefit of future research by broadening its scope. These impacts will be achieved principally by communication of the results of the research through academic channels, targeted to reach the various beneficiaries as effectively as possible. Thus dissemination activities will include presentation to subject-specific workshops, and international conferences focussed towards different applications, and publication of comprehensive papers in scholarly journals, placing results in context. The results of the research will be made freely available through open access repositories and via web pages which place it in context.</gtr:potentialImpactText><gtr:fund><gtr:end>2012-06-19</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2010-06-20</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>99985</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>This research has developed new ways of describing mathematical models of programming languages. In particular, models of objects with internal state which can be updated. These theories are now being used to propose new ways to program with stateful objects which lend themselves to mathematical reasonin - i.e. their properties (correctness, safety, security) can be proved.</gtr:description><gtr:exploitationPathways>This is basic, theoretical research - it could be taken forward by designers of programming language designers and program verification tools, who could use it to develop applications, as well as other theory researchers to focus and enrich their work; for example, to construct particular models of programming languages or logics for them.</gtr:exploitationPathways><gtr:id>00FFD029-F7B6-4522-949C-BAA009FB09E8</gtr:id><gtr:outcomeId>56debaff38a0d3.32555182</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>75F1D12E-ECA7-4635-81D2-CA8A053AF17E</gtr:id><gtr:title>Weighted Relational Models of Typed Lambda-Calculi</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/32ef196d364ee7cae32f8bde286d72e5"><gtr:id>32ef196d364ee7cae32f8bde286d72e5</gtr:id><gtr:otherNames>Laird J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:isbn>978-1-4799-0413-6</gtr:isbn><gtr:issn>10436871</gtr:issn><gtr:outcomeId>56deb5ec51bc51.00128734</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>7CF36852-DB13-4BC8-9573-705821CA6C97</gtr:id><gtr:title>Game semantics for a polymorphic programming language</gtr:title><gtr:parentPublicationTitle>Journal of the ACM</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/38d1e94652f26c4bb4ec76e3d1d319ae"><gtr:id>38d1e94652f26c4bb4ec76e3d1d319ae</gtr:id><gtr:otherNames>n/a n/a (Final Report data)</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:outcomeId>r_2021134676035dcc80</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>F3A07364-C139-4CC1-9A14-04F83DDB5795</gtr:id><gtr:title>Combining and Relating Control Effects and their Semantics</gtr:title><gtr:parentPublicationTitle>Electronic Proceedings in Theoretical Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/32ef196d364ee7cae32f8bde286d72e5"><gtr:id>32ef196d364ee7cae32f8bde286d72e5</gtr:id><gtr:otherNames>Laird J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:outcomeId>56deb675b2f057.23832534</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>34218056-C8F1-4424-AC0B-556D80386961</gtr:id><gtr:title>Game Semantics for a Polymorphic Programming Language</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/32ef196d364ee7cae32f8bde286d72e5"><gtr:id>32ef196d364ee7cae32f8bde286d72e5</gtr:id><gtr:otherNames>Laird J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date><gtr:isbn>978-1-4244-7588-9</gtr:isbn><gtr:outcomeId>doi_53d05b05b2cf29a1</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>355D5464-7639-479D-9FFA-9497299A4E36</gtr:id><gtr:title>Constructing differential categories and deconstructing categories of games</gtr:title><gtr:parentPublicationTitle>Information and Computation</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/32ef196d364ee7cae32f8bde286d72e5"><gtr:id>32ef196d364ee7cae32f8bde286d72e5</gtr:id><gtr:otherNames>Laird J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:outcomeId>5460a57286f2f1.17660761</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>2F4E9F52-053B-4CD1-9733-CBABDE5F3019</gtr:id><gtr:title>Imperative programs as proofs via game semantics</gtr:title><gtr:parentPublicationTitle>Annals of Pure and Applied Logic</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/2ff12ae28aad60541f4e83bffb4280b4"><gtr:id>2ff12ae28aad60541f4e83bffb4280b4</gtr:id><gtr:otherNames>Churchill M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:outcomeId>5460a652dfee02.66738533</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>0EEF5F7B-BCEF-48C2-A4D5-1200B235336A</gtr:id><gtr:title>Isomorphisms of Types in the Presence of Higher-Order References</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/7e6b2c861896932b793cf7be85856275"><gtr:id>7e6b2c861896932b793cf7be85856275</gtr:id><gtr:otherNames>Clairambault P</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2011-01-01</gtr:date><gtr:isbn>978-1-4577-0451-2</gtr:isbn><gtr:outcomeId>doi_53d05b05b30783f1</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>4C47A05D-71B1-4D9F-B792-7FC61A0602A1</gtr:id><gtr:title>Game semantics for a polymorphic programming language</gtr:title><gtr:parentPublicationTitle>Journal of the ACM</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/32ef196d364ee7cae32f8bde286d72e5"><gtr:id>32ef196d364ee7cae32f8bde286d72e5</gtr:id><gtr:otherNames>Laird J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:issn>00045411</gtr:issn><gtr:outcomeId>56deb5eb658627.97464805</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>EE072B0A-5962-41EF-81F2-B12D0698EF90</gtr:id><gtr:title>Imperative Programs as Proofs via Game Semantics</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/2ff12ae28aad60541f4e83bffb4280b4"><gtr:id>2ff12ae28aad60541f4e83bffb4280b4</gtr:id><gtr:otherNames>Churchill M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2011-01-01</gtr:date><gtr:isbn>978-1-4577-0451-2</gtr:isbn><gtr:outcomeId>doi_53d05b05b2eb3c53</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/H023097/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>