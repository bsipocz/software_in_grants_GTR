<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations><gtr:collaborator url="http://gtr.ukri.org:80/organisation/D1774113-D5D2-4B7C-A412-66A90FE4B96F"><gtr:id>D1774113-D5D2-4B7C-A412-66A90FE4B96F</gtr:id><gtr:name>University of Cambridge</gtr:name><gtr:address><gtr:line1>Lensfield Road</gtr:line1><gtr:line4>Cambridge</gtr:line4><gtr:postCode>CB2 1EW</gtr:postCode><gtr:region>East of England</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address></gtr:collaborator></gtr:collaborations><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/C842A34F-18F7-454D-A259-FED802368496"><gtr:id>C842A34F-18F7-454D-A259-FED802368496</gtr:id><gtr:name>University of Leicester</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>University Road</gtr:line1><gtr:line4>Leicester</gtr:line4><gtr:line5>Leicestershire</gtr:line5><gtr:postCode>LE1 7RH</gtr:postCode><gtr:region>East Midlands</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/C842A34F-18F7-454D-A259-FED802368496"><gtr:id>C842A34F-18F7-454D-A259-FED802368496</gtr:id><gtr:name>University of Leicester</gtr:name><gtr:address><gtr:line1>University Road</gtr:line1><gtr:line4>Leicester</gtr:line4><gtr:line5>Leicestershire</gtr:line5><gtr:postCode>LE1 7RH</gtr:postCode><gtr:region>East Midlands</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/D1774113-D5D2-4B7C-A412-66A90FE4B96F"><gtr:id>D1774113-D5D2-4B7C-A412-66A90FE4B96F</gtr:id><gtr:name>University of Cambridge</gtr:name><gtr:address><gtr:line1>Lensfield Road</gtr:line1><gtr:line4>Cambridge</gtr:line4><gtr:postCode>CB2 1EW</gtr:postCode><gtr:region>East of England</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>COLLABORATOR</gtr:name></gtr:role><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/F3D2FBC4-6952-4F04-8DB4-19B9DC3605A2"><gtr:id>F3D2FBC4-6952-4F04-8DB4-19B9DC3605A2</gtr:id><gtr:firstName>Tom</gtr:firstName><gtr:surname>Ridge</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FK022741%2F1"><gtr:id>186D59C7-8929-45F2-A023-5A61556EF8CD</gtr:id><gtr:title>Future filesystems: mechanized specification, validation, implementation and verification of filesystems</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/K022741/1</gtr:grantReference><gtr:abstractText>Filesystems are extremely important. Users depend on filesystems to store their files whenever they hit &amp;quot;save&amp;quot;. Businesses rely on databases to store their data safely, and these databases in turn rely on the filesystem.

Modern filesystems are designed to satisfy many complicated requirements. As a result, implementations are beset with problems. The implementation code is extremely complex, and almost inevitably contains bugs. These bugs can and do lead to data corruption and loss. Development time is very lengthy. Testing is also very lengthy and costly, and does not guarantee to eliminate all bugs. It is often unclear to application developers what guarantees a filesystem provides, so that it becomes extremely difficult to write correct applications for a given filesystem, let alone applications that are portable across different filesystems.

Even NASA was adversely affected by poor filesystem design. On January 21 2004, mission control lost contact with the Mars Exploration Rover (MER) Spirit. Fortunately Spirit had been equipped with a &amp;quot;crippled mode capability&amp;quot; to cope with unforeseen errors, and together with extensive efforts by the operations team, Spirit was returned to operational status 16 days later on February 6. The official report states: &amp;quot;the root cause of the anomaly was a design error in the software module that provides file system services&amp;quot;. Without crippled mode capability, &amp;quot;the MER mission may well have been lost&amp;quot;. The cost of the mission was estimated at over US$ 800 million.

What can be done to tackle these problems? For many decades, computer scientists have been developing techniques for producing dependable systems. One approach that is receiving much current interest is verification and correctness i.e. mathematical proof that software is correct according to its specification. The widespread need in the digital economy for reliable and dependable systems means that research in this area is increasingly important.

In 2003, Tony Hoare proposed a verification grand challenge for the following 15 years: a verified compiler. Following the NASA MER anomaly, two NASA research scientists, Rajeev Joshi and Gerard Holzmann, proposed a more tractable challenge: to build a verifiable filesystem. We will take up this challenge, and specify and build a verified filesystem.

This work is foundational in nature, but tackles the complexities of real-world systems. We will use very sophisticated and high-level logical techniques combined with state-of-the-art software development techniques to address the full complexity of real-world systems. The verified filesystem has the potential to impact both technologically highly sophisticated organizations such as NASA and internet giants such as Google, Amazon and Facebook, whilst also delivering benefits to end users. A verified filesystem can have a significant impact on many areas of the digital economy. For example, an ultra-reliable filesystem is a key part of the quest for ultra-reliable computing infrastructure, which in turn contributes to the goal of delivering information technology as a utility. Finally, in addition to real-world impact, this research will provide a solid mathematical foundation for further research and verification of critical applications that make use of filesystem functionality, such as databases and persistent message queues.</gtr:abstractText><gtr:potentialImpactText>Filesystems are of great importance to businesses and society as a whole. Even though our work is foundational in nature, improvements in underlying filesystem technology can lead to improvements in a wide range of real-world systems.

We plan to make the prototype verified filesystem freely available to end users. Although end users are typically not fanatically concerned about filesystem reliability, there are some use cases where they will experience tangible benefits. For example, users often experience the annoyance that is the &amp;quot;filesystem check&amp;quot; that follows a system crash. The large storage capacities of current hard disk drives can cause these checks to take a very long time. Our verified filesystem implementation will eliminate such checks: the filesystem will be constructed so that, at any point in time (including immediately before and after a crash), the on-disk representation of the filesystem will remain well-formed, thereby obviating the need for a filesystem check and recovery phase. In general, users will notice improved filesystem behaviour and reliability, particularly over host crashes.

NASA, and internet giants such as Amazon, Google and Facebook, may also benefit from our work. The &amp;quot;verified filesystem&amp;quot; was proposed as a challenge by NASA research scientists after problems were encountered with the Mars rover &amp;quot;Spirit&amp;quot;. Space technology is extremely expensive and has to operate in an environment where it is difficult or impossible to recover from failures. A verified filesystem could eliminate the possibility of certain types of failure from a central component of these systems, substantially reducing the system testing and validation effort, and ultimately leading to significant cost reductions. The internet giants Amazon, Google and Facebook are also concerned with reliability. These companies must appear to operate continuously, with (almost) 100% up-time and availability. To achieve this requires considerable investment in the underlying technology, including filesystems. Google in particular was heavily involved with the development of the recent iteration of the Linux filesystem, ext4. The verified filesystem envisaged in this proposal, and future high-performance versions, would potentially be of great interest to these companies, because ultra-reliable systems additionally reduce management and running costs, which are especially significant at the scale at which these companies operate.

There is also the potential to create new companies based around this technology. Although we plan to make the prototype filesystem freely available, a new company could be created around future, high-performance, fully-featured verified filesystem implementations. The business of the company NetApp (currently valued at around US$ 13 billion) was originally based on their filesystem implementation. A high risk/high reward approach would be to establish a company to sell complete filesystem implementations to companies such as NetApp. Another less risky approach, following Advanced RISC Machines (ARM), would be to license the intellectual property to companies such as NetApp, supported by customization and consultancy services.

Finally, we repeat that the verified filesystem specification and implementation detailed in this proposal is likely to play a key role in future efforts in the UK and abroad aimed at delivering a fully-fledged formally verified operating system and software stack. This has numerous commercial applications, for example, as part of provably-secure systems, which are of interest to organizations such as the Ministry of Defence and Government Communications Headquarters.

In terms of track record, Ridge previously worked on the grant &amp;quot;Reasoning with Relaxed Memory Models&amp;quot; (EPSRC grant EP/F036345) that has had significant impact on key industry players, such as Intel and IBM, and latterly influenced the C and C++ standards process.</gtr:potentialImpactText><gtr:fund><gtr:end>2015-04-30</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2013-05-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>91729</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs><gtr:collaborationOutput><gtr:collaboratingOrganisation>University of Cambridge</gtr:collaboratingOrganisation><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:department>Department of Haematology</gtr:department><gtr:description>Project involved talking to and working with U. Cambridge (Sewell et al.), FreeBSD (Watson), Docker (Madhavapeddy, Sheets)</gtr:description><gtr:id>28DA6181-4C0C-46C5-8D37-035F101195E1</gtr:id><gtr:impact>All outputs from the grant.</gtr:impact><gtr:outcomeId>58c6e14660a782.52627395-1</gtr:outcomeId><gtr:partnerContribution>Sheets contributed some of the testing code. Sewell helped on the paper and general management of project. Watson helped on the FreeBSD infrastructure.</gtr:partnerContribution><gtr:piContribution>-</gtr:piContribution><gtr:sector>Academic/University</gtr:sector><gtr:start>2013-01-01</gtr:start></gtr:collaborationOutput></gtr:collaborationOutputs><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>We have produced a formal model of POSIX and real-world (Linux, Mac) file systems. This is embodied in a file system test-suite and associated tools. The models are also available in theorem provers HOL4, Isabelle/HOL (and potentially Coq). We expect that these will form the standard file system models in academia in future research.</gtr:description><gtr:firstYearOfImpact>2015</gtr:firstYearOfImpact><gtr:id>8AE81060-221E-49CB-BB20-241CF3BAD051</gtr:id><gtr:impactTypes/><gtr:outcomeId>55b63782c5a785.62670840</gtr:outcomeId></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>We developed a formal model of file systems. This can be used to assess whether existing file systems behave properly, and also to design new, improved file systems.</gtr:description><gtr:exploitationPathways>We expect this research to become the standard model of file system behaviour in academia. We also expect new file system implementations based on this model.</gtr:exploitationPathways><gtr:id>0D2F2FA2-CEAE-4793-842D-25D0DA140FAB</gtr:id><gtr:outcomeId>546275aa154ff6.89154266</gtr:outcomeId><gtr:sectors><gtr:sector>Aerospace, Defence and Marine,Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors><gtr:url>http://www.tom-ridge.com/filesystems.html</gtr:url></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs><gtr:softwareAndTechnicalProductOutput><gtr:description>A formal model of POSIX and existing filesystems</gtr:description><gtr:id>B030A36E-FE63-4EBB-9AA0-3DAF50748F20</gtr:id><gtr:impact>-</gtr:impact><gtr:outcomeId>55b610e10946d9.09885878</gtr:outcomeId><gtr:title>SibylFS formal mechanized model of POSIX and real-world filesystems</gtr:title><gtr:type>Software</gtr:type><gtr:url>http://www.tom-ridge.com/filesystems.html</gtr:url><gtr:yearFirstProvided>2015</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput><gtr:softwareAndTechnicalProductOutput><gtr:description>Filesystem test suite (collection of test scripts)</gtr:description><gtr:id>9F1ACA7A-EF7B-4AE7-A24F-B2BD73D2B346</gtr:id><gtr:impact>-</gtr:impact><gtr:outcomeId>55b6115848b2c3.21185254</gtr:outcomeId><gtr:title>SibylFS test suite</gtr:title><gtr:type>Software</gtr:type><gtr:url>http://www.tom-ridge.com/filesystems.html</gtr:url><gtr:yearFirstProvided>2015</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput><gtr:softwareAndTechnicalProductOutput><gtr:description>Filesystem test tools</gtr:description><gtr:id>B9CD3198-7579-47A2-A890-0C885E8A5535</gtr:id><gtr:impact>-</gtr:impact><gtr:outcomeId>55b6111d435234.61071579</gtr:outcomeId><gtr:title>SibylFS test tools</gtr:title><gtr:type>Software</gtr:type><gtr:url>http://www.tom-ridge.com/filesystems.html</gtr:url><gtr:yearFirstProvided>2015</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput></gtr:softwareAndTechnicalProductOutputs><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>F5B72994-E106-430D-9EA1-FC8A45BEA0D5</gtr:id><gtr:title>SibylFS: formal specification and oracle-based testing for POSIX and real-world file systems</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/1c3ebdd4fb497fe98793dbec3345c644"><gtr:id>1c3ebdd4fb497fe98793dbec3345c644</gtr:id><gtr:otherNames>Ridge T</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:outcomeId>55b60fbe7dd935.63695494</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/K022741/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>D7BA1404-E001-4782-929E-E96E28B01201</gtr:id><gtr:percentage>50</gtr:percentage><gtr:text>Computer Sys. &amp; Architecture</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>50</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>