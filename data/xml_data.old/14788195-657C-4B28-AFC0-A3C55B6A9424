<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.ukri.org/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.ukri.org:80/organisation/BECA2763-0902-40AA-8DB2-836A5731CF58"><gtr:id>BECA2763-0902-40AA-8DB2-836A5731CF58</gtr:id><gtr:name>Brunel University</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>Brunel University</gtr:line1><gtr:line4>Uxbridge</gtr:line4><gtr:line5>Middlesex</gtr:line5><gtr:postCode>UB8 3PH</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/BECA2763-0902-40AA-8DB2-836A5731CF58"><gtr:id>BECA2763-0902-40AA-8DB2-836A5731CF58</gtr:id><gtr:name>Brunel University</gtr:name><gtr:address><gtr:line1>Brunel University</gtr:line1><gtr:line4>Uxbridge</gtr:line4><gtr:line5>Middlesex</gtr:line5><gtr:postCode>UB8 3PH</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.ukri.org:80/organisation/494B354C-3B3E-4E1D-8B85-ED1BE0076DBA"><gtr:id>494B354C-3B3E-4E1D-8B85-ED1BE0076DBA</gtr:id><gtr:name>British Sky Broadcasting Ltd</gtr:name><gtr:address><gtr:line1>Sky London</gtr:line1><gtr:line2>Centaurs Business Park</gtr:line2><gtr:line3>Grant Way</gtr:line3><gtr:postCode>TW7 5QD</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.ukri.org:80/person/7D95D718-E0E8-4A40-9D16-7BF80DCA0C12"><gtr:id>7D95D718-E0E8-4A40-9D16-7BF80DCA0C12</gtr:id><gtr:firstName>Tracy</gtr:firstName><gtr:surname>Hall</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/029C6FE6-CF91-4402-9055-68B7A1091785"><gtr:id>029C6FE6-CF91-4402-9055-68B7A1091785</gtr:id><gtr:firstName>Steve</gtr:firstName><gtr:otherNames>John</gtr:otherNames><gtr:surname>Counsell</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.ukri.org:80/person/62B878FA-3A33-4216-A9E8-862B0B4643E1"><gtr:id>62B878FA-3A33-4216-A9E8-862B0B4643E1</gtr:id><gtr:firstName>David</gtr:firstName><gtr:otherNames>Hutchinson</gtr:otherNames><gtr:surname>Bowes</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.ukri.org:80/projects?ref=EP%2FL011751%2F1"><gtr:id>14788195-657C-4B28-AFC0-A3C55B6A9424</gtr:id><gtr:title>USING FAULT CHARACTERISTICS TO IMPROVE SOFTWARE FAULT PREDICTION</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/L011751/1</gtr:grantReference><gtr:abstractText>SIGNIFICANCE: Faults in software code are a significant cost to companies, as well as a risk to human safety and business success. Finding and fixing faults in code costs the UK software industry billions of pounds every year. Significant cost savings are available with even small improvements in our capability to find faults before systems are delivered to users. 

BACKGROUND: Our previous work shows that during the last 10 years, 208 studies have published hundreds of different fault prediction models. These studies are usually typified by researchers applying one or more of the many modeling techniques to one or more of the many available data sets, then applying performance measures to report how well that model predicts faults.

PROBLEM: Models do not perform consistently above the current predictive performance ceiling of about 80% recall. We propose that an important contributor to this underperformance is that models treat all faults as homogeneous. No previous attempt has been made to understand what characteristics make a fault predictable or what features a model needs in order to predict faults with particular characteristics. 

AIM: To build a fault prediction model ensemble which is focused on the characteristics of faults and which consistently performs above the current performance ceiling.

METHOD: This 36 month project is based on analysing the code and fault data from six commercial systems and from six open source systems. We will conduct detailed quantitative and qualitative analysis of the characteristics of the faults in these systems, identifying for example whether the characteristics of faults are problems in code interfaces, algorithmic problems, structural problems, typographic problems, etc. We will construct a set of prediction models with a large variety of features (e.g. different modeling techniques, different independent variables, etc.). We will use these models to empirically identify relationships between fault characteristics and the features of individual models. This means that we will identify what features of prediction models predict faults with particular characteristics. We will build ensembles of models with features that cover the widest range of fault characteristics. We will evaluate those models on industrial systems in collaboration with a company.</gtr:abstractText><gtr:potentialImpactText>Faults are hugely costly to the UK software industry. Resourcing developers to find and fix faults is very expensive. The opportunity cost of developers doing this is significant. The costs of failing to find and fix faults can be catastrophic to both human life and business success. Finding faults early in the lifecycle reduces the cost of fixing these faults and mitigates the risk to humans and businesses. Research that improves our capability to find faults offers companies huge potential benefits. Indeed because the cost of finding and fixing faults is so significant even a small improvement in fault finding capability will save a large amount of money. Consequently our proposal is very important to the UK software industry.
 
Despite the potential importance of fault prediction to the software industry, uptake of fault prediction has been slow by companies. This is predominately because, as described earlier, the predictive performance of models typically does not go beyond 80% recall. Companies want better predictive performances to justify an investment in fault prediction models. In addition generating in-house fault prediction expertise is not straightforward. The field is complex and few companies have such expertise available. As a result industry does not currently have much appetite for fault prediction.
 
Our work will make a significant impact on increasing industrial take-up of fault prediction models for two reasons: First, our model ensemble will offer improved predictive performances. This in itself will make it more attractive to companies. Second, our impact and dissemination strategy is designed to explicitly target industrial take-up of our model ensemble. Ensuring our model ensemble impacts on the software industry is based around producing genuinely useful and usable tools for industry, as well as effectively drawing these tools to the attention of industry. 
 
Our impact strategy has the following elements: Delivering our model ensemble in the form of a highly usable IDE/ANT plug-in tool; Developing a fault analysis web site that companies can submit code to and it will be automatically analysed for faults; An industry workshop on fault prediction; Both industry and academic orientated publications.</gtr:potentialImpactText><gtr:fund><gtr:end>2017-04-27</gtr:end><gtr:funder url="http://gtr.ukri.org:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2014-04-28</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>394315</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>The software defect prediction tools that we have developed are now being evaluated by our industrial partners in their software development teams. Other companies are also interested in trying out our defect prediction tools. We are also in the latter stages of discussing the licencing of our tool to a commercial company.</gtr:description><gtr:firstYearOfImpact>2015</gtr:firstYearOfImpact><gtr:id>E3C78C84-B799-4067-8A37-4503A5987063</gtr:id><gtr:impactTypes><gtr:impactType>Economic</gtr:impactType></gtr:impactTypes><gtr:outcomeId>56dd7e86442876.39024724</gtr:outcomeId><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs><gtr:intellectualPropertyOutput><gtr:description>Our ELFF defect prediction tool is about to go under licence to a commercial company. The licence negotiations are currently at advanced stages.</gtr:description><gtr:grantRef>EP/L011751/1</gtr:grantRef><gtr:id>8153629C-CFE0-473B-A223-03A03F4A0F96</gtr:id><gtr:impact>This is all pending and depends on the outcomes of licencing negotiations.</gtr:impact><gtr:licensed>No</gtr:licensed><gtr:outcomeId>58b44b04990c96.75308394</gtr:outcomeId><gtr:protection>Copyrighted (e.g. software)</gtr:protection><gtr:title>ELFF software defect prediction tool</gtr:title></gtr:intellectualPropertyOutput></gtr:intellectualPropertyOutputs><gtr:keyFindingsOutput><gtr:description>We are still analysing faults in commercial and open source systems. Our current/interim findings are that:
- commercial systems seem to contain fewer faults than open source systems.
- ensemble approaches seem to predict faults better than single model approaches.
- Code cleaning could improve the prediction of faults.</gtr:description><gtr:exploitationPathways>By the end of the project we will have completed our analysis and have finished out tools. These findings and tools will take the fault prediction community forward and hopefully will be used by companies.</gtr:exploitationPathways><gtr:id>F4552083-2001-4C41-8C52-72085980564E</gtr:id><gtr:outcomeId>56dd7e1079f115.91870756</gtr:outcomeId><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs><gtr:researchMaterialOutput><gtr:description>A software defect prediction tool for use by researchers and developers.</gtr:description><gtr:id>D02FED5B-46D8-413E-95B4-4B6A5A7FB02D</gtr:id><gtr:impact>The tool is currently in evaluation with our industrial partner (Sky Plc). We are also talking to other companies about transferring the tool into industrial practice.</gtr:impact><gtr:outcomeId>58b449f08b8457.30679072</gtr:outcomeId><gtr:providedToOthers>false</gtr:providedToOthers><gtr:title>ELFF Defect prediction tool</gtr:title><gtr:type>Improvements to research infrastructure</gtr:type></gtr:researchMaterialOutput></gtr:researchMaterialOutputs><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication><gtr:id>51B709BC-1D05-4886-8742-1823EF247E28</gtr:id><gtr:title>Evolutionary coupling measurement: Making sense of the current chaos</gtr:title><gtr:parentPublicationTitle>Science of Computer Programming</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/061a41220ee343c0f880525d3625e7f3"><gtr:id>061a41220ee343c0f880525d3625e7f3</gtr:id><gtr:otherNames>Kirbas S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>5a2fe1de40ab04.99675542</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>D0A0BCB9-496B-47ED-9679-DA1BA4F61286</gtr:id><gtr:title>Getting Defect Prediction Into Industrial Practice: the ELFF Tool</gtr:title><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/49389dde36eb5b37f277555c7d8d745c"><gtr:id>49389dde36eb5b37f277555c7d8d745c</gtr:id><gtr:otherNames>Bowes D</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:outcomeId>5a9956d54bd8e5.25808290</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>ECF67559-95DC-4A0B-A83A-E4A2C73C2886</gtr:id><gtr:title>The relationship between evolutionary coupling and defects in large industrial software</gtr:title><gtr:parentPublicationTitle>Journal of Software: Evolution and Process</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/061a41220ee343c0f880525d3625e7f3"><gtr:id>061a41220ee343c0f880525d3625e7f3</gtr:id><gtr:otherNames>Kirbas S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:issn>20477481</gtr:issn><gtr:outcomeId>58b4425554d1f3.37024997</gtr:outcomeId></gtr:publication><gtr:publication><gtr:id>C280F3B8-4F5D-4BE4-BCC2-318EAB4DF542</gtr:id><gtr:title>Software defect prediction: do different classifiers find the same defects?</gtr:title><gtr:parentPublicationTitle>Software Quality Journal</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.ukri.org:80/person/49389dde36eb5b37f277555c7d8d745c"><gtr:id>49389dde36eb5b37f277555c7d8d745c</gtr:id><gtr:otherNames>Bowes D</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:issn>15731367</gtr:issn><gtr:outcomeId>58b442552c25f1.12634031</gtr:outcomeId></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/L011751/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>E05CFE0B-163D-412D-A3C2-28E89B2CA336</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Software Engineering</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>